// Code generated - DO NOT EDIT.
// This file is a generated binding and any manual changes will be lost.

package firedrill_entrypoint

import (
	"errors"
	"math/big"
	"strings"

	ethereum "github.com/ethereum/go-ethereum"
	"github.com/ethereum/go-ethereum/accounts/abi"
	"github.com/ethereum/go-ethereum/accounts/abi/bind"
	"github.com/ethereum/go-ethereum/common"
	"github.com/ethereum/go-ethereum/core/types"
	"github.com/ethereum/go-ethereum/event"
)

// Reference imports to suppress errors if they are not otherwise used.
var (
	_ = errors.New
	_ = big.NewInt
	_ = strings.NewReader
	_ = ethereum.NotFound
	_ = bind.Bind
	_ = common.Big1
	_ = types.BloomLookup
	_ = event.NewSubscription
	_ = abi.ConvertType
)

// FiredrillEntrypointMetaData contains all meta data concerning the FiredrillEntrypoint contract.
var FiredrillEntrypointMetaData = &bind.MetaData{
	ABI: "[{\"type\":\"constructor\",\"inputs\":[{\"name\":\"chainSelector\",\"type\":\"uint64\",\"internalType\":\"uint64\"}],\"stateMutability\":\"nonpayable\"},{\"type\":\"function\",\"name\":\"acceptOwnership\",\"inputs\":[],\"outputs\":[],\"stateMutability\":\"nonpayable\"},{\"type\":\"function\",\"name\":\"chainSelector\",\"inputs\":[],\"outputs\":[{\"name\":\"\",\"type\":\"uint64\",\"internalType\":\"uint64\"}],\"stateMutability\":\"view\"},{\"type\":\"function\",\"name\":\"compound\",\"inputs\":[],\"outputs\":[{\"name\":\"\",\"type\":\"address\",\"internalType\":\"address\"}],\"stateMutability\":\"view\"},{\"type\":\"function\",\"name\":\"deactivate\",\"inputs\":[],\"outputs\":[],\"stateMutability\":\"nonpayable\"},{\"type\":\"function\",\"name\":\"drill_InvalidMessageState\",\"inputs\":[{\"name\":\"from\",\"type\":\"uint8\",\"internalType\":\"uint8\"},{\"name\":\"to\",\"type\":\"uint8\",\"internalType\":\"uint8\"}],\"outputs\":[],\"stateMutability\":\"nonpayable\"},{\"type\":\"function\",\"name\":\"drill_PendingBless\",\"inputs\":[{\"name\":\"from\",\"type\":\"uint8\",\"internalType\":\"uint8\"},{\"name\":\"to\",\"type\":\"uint8\",\"internalType\":\"uint8\"}],\"outputs\":[],\"stateMutability\":\"nonpayable\"},{\"type\":\"function\",\"name\":\"drill_PendingCommit_PendingQueue_TxSpike\",\"inputs\":[{\"name\":\"from\",\"type\":\"uint8\",\"internalType\":\"uint8\"},{\"name\":\"to\",\"type\":\"uint8\",\"internalType\":\"uint8\"}],\"outputs\":[],\"stateMutability\":\"nonpayable\"},{\"type\":\"function\",\"name\":\"drill_PendingExecution\",\"inputs\":[{\"name\":\"from\",\"type\":\"uint8\",\"internalType\":\"uint8\"},{\"name\":\"to\",\"type\":\"uint8\",\"internalType\":\"uint8\"}],\"outputs\":[],\"stateMutability\":\"nonpayable\"},{\"type\":\"function\",\"name\":\"drill_PriceRegistries\",\"inputs\":[],\"outputs\":[],\"stateMutability\":\"nonpayable\"},{\"type\":\"function\",\"name\":\"drill_PrivilegedFunctionCalled\",\"inputs\":[],\"outputs\":[],\"stateMutability\":\"nonpayable\"},{\"type\":\"function\",\"name\":\"drill_RmnCurse\",\"inputs\":[],\"outputs\":[],\"stateMutability\":\"nonpayable\"},{\"type\":\"function\",\"name\":\"drill_RmnVotedToCurse\",\"inputs\":[],\"outputs\":[],\"stateMutability\":\"nonpayable\"},{\"type\":\"function\",\"name\":\"drill_TokenPoolRateLimit_Inbound\",\"inputs\":[],\"outputs\":[],\"stateMutability\":\"nonpayable\"},{\"type\":\"function\",\"name\":\"drill_TokenPoolRateLimit_Offramp\",\"inputs\":[],\"outputs\":[],\"stateMutability\":\"nonpayable\"},{\"type\":\"function\",\"name\":\"isActive\",\"inputs\":[],\"outputs\":[{\"name\":\"\",\"type\":\"bool\",\"internalType\":\"bool\"}],\"stateMutability\":\"view\"},{\"type\":\"function\",\"name\":\"offRamp\",\"inputs\":[],\"outputs\":[{\"name\":\"\",\"type\":\"address\",\"internalType\":\"address\"}],\"stateMutability\":\"view\"},{\"type\":\"function\",\"name\":\"onRamp\",\"inputs\":[],\"outputs\":[{\"name\":\"\",\"type\":\"address\",\"internalType\":\"address\"}],\"stateMutability\":\"view\"},{\"type\":\"function\",\"name\":\"owner\",\"inputs\":[],\"outputs\":[{\"name\":\"\",\"type\":\"address\",\"internalType\":\"address\"}],\"stateMutability\":\"view\"},{\"type\":\"function\",\"name\":\"pendingOwner\",\"inputs\":[],\"outputs\":[{\"name\":\"\",\"type\":\"address\",\"internalType\":\"address\"}],\"stateMutability\":\"view\"},{\"type\":\"function\",\"name\":\"prepare_Register\",\"inputs\":[],\"outputs\":[],\"stateMutability\":\"nonpayable\"},{\"type\":\"function\",\"name\":\"receiver\",\"inputs\":[],\"outputs\":[{\"name\":\"\",\"type\":\"address\",\"internalType\":\"address\"}],\"stateMutability\":\"view\"},{\"type\":\"function\",\"name\":\"renounceOwnership\",\"inputs\":[],\"outputs\":[],\"stateMutability\":\"nonpayable\"},{\"type\":\"function\",\"name\":\"token\",\"inputs\":[],\"outputs\":[{\"name\":\"\",\"type\":\"address\",\"internalType\":\"address\"}],\"stateMutability\":\"view\"},{\"type\":\"function\",\"name\":\"transferOwnership\",\"inputs\":[{\"name\":\"newOwner\",\"type\":\"address\",\"internalType\":\"address\"}],\"outputs\":[],\"stateMutability\":\"nonpayable\"},{\"type\":\"function\",\"name\":\"typeAndVersion\",\"inputs\":[],\"outputs\":[{\"name\":\"\",\"type\":\"string\",\"internalType\":\"string\"}],\"stateMutability\":\"pure\"},{\"type\":\"event\",\"name\":\"OwnershipTransferStarted\",\"inputs\":[{\"name\":\"previousOwner\",\"type\":\"address\",\"indexed\":true,\"internalType\":\"address\"},{\"name\":\"newOwner\",\"type\":\"address\",\"indexed\":true,\"internalType\":\"address\"}],\"anonymous\":false},{\"type\":\"event\",\"name\":\"OwnershipTransferred\",\"inputs\":[{\"name\":\"previousOwner\",\"type\":\"address\",\"indexed\":true,\"internalType\":\"address\"},{\"name\":\"newOwner\",\"type\":\"address\",\"indexed\":true,\"internalType\":\"address\"}],\"anonymous\":false},{\"type\":\"error\",\"name\":\"OwnableInvalidOwner\",\"inputs\":[{\"name\":\"owner\",\"type\":\"address\",\"internalType\":\"address\"}]},{\"type\":\"error\",\"name\":\"OwnableUnauthorizedAccount\",\"inputs\":[{\"name\":\"account\",\"type\":\"address\",\"internalType\":\"address\"}]}]",
	Bin: "0x61014060405234801562000011575f80fd5b5060405162005f3238038062005f328339810160408190526200003491620002a5565b33806200005a57604051631e4fbdf760e01b81525f600482015260240160405180910390fd5b6200006581620001f2565b506001600160401b038116608052604051309062000083906200025f565b6001600160a01b039091168152602001604051809103905ff080158015620000ad573d5f803e3d5ffd5b506001600160a01b031660a0526040513090620000ca906200026d565b6001600160a01b039091168152602001604051809103905ff080158015620000f4573d5f803e3d5ffd5b506001600160a01b031660c052604051309062000111906200027b565b6001600160a01b039091168152602001604051809103905ff0801580156200013b573d5f803e3d5ffd5b506001600160a01b031660e0526040513090620001589062000289565b6001600160a01b039091168152602001604051809103905ff08015801562000182573d5f803e3d5ffd5b506001600160a01b0316610100526040513090620001a09062000297565b6001600160a01b039091168152602001604051809103905ff080158015620001ca573d5f803e3d5ffd5b506001600160a01b031661012052506001805460ff60a01b1916600160a01b179055620002d4565b600180546001600160a01b03191690556200020d8162000210565b50565b5f80546001600160a01b038381166001600160a01b0319831681178455604051919092169283917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e09190a35050565b610562806200106e83390190565b61126380620015d083390190565b611721806200283383390190565b610ef88062003f5483390190565b6110e68062004e4c83390190565b5f60208284031215620002b6575f80fd5b81516001600160401b0381168114620002cd575f80fd5b9392505050565b60805160a05160c05160e0516101005161012051610d0c620003625f395f61034501525f818161031f015281816103b401528181610696015281816107c7015281816108c8015261099801525f8181610208015281816104af01528181610808015281816108680152610a9001525f81816102bd01526105db01525f61037301525f61024e0152610d0c5ff3fe608060405234801561000f575f80fd5b506004361061016d575f3560e01c80638da5cb5b116100d9578063ee301c1611610093578063f7260d3e1161006e578063f7260d3e14610343578063f9d8a51714610369578063fc0c546a14610371578063fed325c214610397575f80fd5b8063ee301c1614610302578063f2fde38b1461030a578063f69e20461461031d575f80fd5b80638da5cb5b146102ab578063c021e73c146102bb578063c608d674146102e1578063da008fc5146102e9578063e30c3978146102f1578063e311a009146102e1575f80fd5b80634e4bc8471161012a5780634e4bc8471461024057806351b42b00146102785780636415175a14610280578063715018a61461028857806379ba5097146102905780638abfab0114610298575f80fd5b80630abaa60d1461017157806313bb5ad01461017b578063181f5a771461018e5780631fc9cf15146101d657806322f3e2d4146101e957806344671a5d14610206575b5f80fd5b6101796103aa565b005b610179610189366004610bab565b610422565b604080518082018252601981527f466972656472696c6c456e747279706f696e7420312e362e3000000000000000602082015290516101cd9190610bdc565b60405180910390f35b6101796101e4366004610bab565b610513565b600154600160a01b900460ff1660405190151581526020016101cd565b7f00000000000000000000000000000000000000000000000000000000000000005b6040516001600160a01b0390911681526020016101cd565b60405167ffffffffffffffff7f00000000000000000000000000000000000000000000000000000000000000001681526020016101cd565b610179610675565b61017961068c565b6101796106ec565b6101796106ff565b6101796102a6366004610bab565b610743565b5f546001600160a01b0316610228565b7f0000000000000000000000000000000000000000000000000000000000000000610228565b6101796107fe565b61017961085e565b6001546001600160a01b0316610228565b6101796108be565b610179610318366004610c28565b61091e565b7f0000000000000000000000000000000000000000000000000000000000000000610228565b7f0000000000000000000000000000000000000000000000000000000000000000610228565b61017961098e565b7f0000000000000000000000000000000000000000000000000000000000000000610228565b6101796103a5366004610bab565b6109ee565b6103b2610b07565b7f00000000000000000000000000000000000000000000000000000000000000006001600160a01b031663f5de85276040518163ffffffff1660e01b81526004015f604051808303815f87803b15801561040a575f80fd5b505af115801561041c573d5f803e3d5ffd5b50505050565b61042a610b07565b8060ff168260ff1611156104595760405162461bcd60e51b815260040161045090610c55565b60405180910390fd5b600154600160a81b900467ffffffffffffffff1660ff8216111561048f5760405162461bcd60e51b815260040161045090610c7e565b60405163433760eb60e11b815260ff8084166004830152821660248201527f00000000000000000000000000000000000000000000000000000000000000006001600160a01b03169063866ec1d6906044015b5f604051808303815f87803b1580156104f9575f80fd5b505af115801561050b573d5f803e3d5ffd5b505050505050565b61051b610b07565b8060ff168260ff1611156105415760405162461bcd60e51b815260040161045090610c55565b600154600160a81b900467ffffffffffffffff1660ff83161161059d5760405162461bcd60e51b81526020600482015260146024820152731b595cdcd859d948185b1c9958591e481cd95b9d60621b6044820152606401610450565b60ff82165b8160ff168167ffffffffffffffff161161064d576040516328d15f0960e11b815233600482015267ffffffffffffffff821660248201527f00000000000000000000000000000000000000000000000000000000000000006001600160a01b0316906351a2be12906044015f604051808303815f87803b158015610624575f80fd5b505af1158015610636573d5f803e3d5ffd5b50505050808061064590610ca4565b9150506105a2565b506001805467ffffffffffffffff60a81b191660ff92909216600160a81b0291909117905550565b61067d610b07565b6001805460ff60a01b19169055565b610694610b07565b7f00000000000000000000000000000000000000000000000000000000000000006001600160a01b031663384b09e86040518163ffffffff1660e01b81526004015f604051808303815f87803b15801561040a575f80fd5b6106f4610b07565b6106fd5f610b33565b565b60015433906001600160a01b031681146107375760405163118cdaa760e01b81526001600160a01b0382166004820152602401610450565b61074081610b33565b50565b61074b610b07565b8060ff168260ff1611156107715760405162461bcd60e51b815260040161045090610c55565b600154600160a81b900467ffffffffffffffff1660ff821611156107a75760405162461bcd60e51b815260040161045090610c7e565b6040516321e920a960e11b815260ff8084166004830152821660248201527f00000000000000000000000000000000000000000000000000000000000000006001600160a01b0316906343d24152906044016104e2565b610806610b07565b7f00000000000000000000000000000000000000000000000000000000000000006001600160a01b031663cdffbd5f6040518163ffffffff1660e01b81526004015f604051808303815f87803b15801561040a575f80fd5b610866610b07565b7f00000000000000000000000000000000000000000000000000000000000000006001600160a01b03166392abf95e6040518163ffffffff1660e01b81526004015f604051808303815f87803b15801561040a575f80fd5b6108c6610b07565b7f00000000000000000000000000000000000000000000000000000000000000006001600160a01b03166320f938b66040518163ffffffff1660e01b81526004015f604051808303815f87803b15801561040a575f80fd5b610926610b07565b600180546001600160a01b0383166001600160a01b031990911681179091556109565f546001600160a01b031690565b6001600160a01b03167f38d16b8cac22d99fc7c124b9cd0de2d3fa1faef420bfe791d8c362d765e2270060405160405180910390a350565b610996610b07565b7f00000000000000000000000000000000000000000000000000000000000000006001600160a01b031663d7080f096040518163ffffffff1660e01b81526004015f604051808303815f87803b15801561040a575f80fd5b6109f6610b07565b8060ff168260ff161115610a1c5760405162461bcd60e51b815260040161045090610c55565b600154600160a81b900467ffffffffffffffff1660ff82161115610a525760405162461bcd60e51b815260040161045090610c7e565b60ff82165b8160ff168167ffffffffffffffff1611610b025760405163cefe12c560e01b815233600482015267ffffffffffffffff821660248201527f00000000000000000000000000000000000000000000000000000000000000006001600160a01b03169063cefe12c5906044015f604051808303815f87803b158015610ad9575f80fd5b505af1158015610aeb573d5f803e3d5ffd5b505050508080610afa90610ca4565b915050610a57565b505050565b5f546001600160a01b031633146106fd5760405163118cdaa760e01b8152336004820152602401610450565b600180546001600160a01b0319169055610740815f80546001600160a01b038381166001600160a01b0319831681178455604051919092169283917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e09190a35050565b803560ff81168114610ba6575f80fd5b919050565b5f8060408385031215610bbc575f80fd5b610bc583610b96565b9150610bd360208401610b96565b90509250929050565b5f602080835283518060208501525f5b81811015610c0857858101830151858201604001528201610bec565b505f604082860101526040601f19601f8301168501019250505092915050565b5f60208284031215610c38575f80fd5b81356001600160a01b0381168114610c4e575f80fd5b9392505050565b6020808252600f908201526e1b9bdd1a1a5b99c81d1bc81cd95b99608a1b604082015260600190565b6020808252600c908201526b1b9bdd081e595d081cd95b9d60a21b604082015260600190565b5f67ffffffffffffffff808316818103610ccc57634e487b7160e01b5f52601160045260245ffd5b600101939250505056fea2646970667358221220c5a2ad9a363c433579cfb8ee0bc4fad0ba0e1928663a9baf830e17384b7d46a164736f6c63430008180033608060405234801561000f575f80fd5b5060405161056238038061056283398101604081905261002e916100ed565b338061005357604051631e4fbdf760e01b81525f600482015260240160405180910390fd5b61005c81610082565b50600280546001600160a01b0319166001600160a01b039290921691909117905561011a565b600180546001600160a01b031916905561009b8161009e565b50565b5f80546001600160a01b038381166001600160a01b0319831681178455604051919092169283917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e09190a35050565b5f602082840312156100fd575f80fd5b81516001600160a01b0381168114610113575f80fd5b9392505050565b61043b806101275f395ff3fe608060405234801561000f575f80fd5b506004361061009b575f3560e01c806379ba50971161006357806379ba5097146101325780638da5cb5b1461013a57806395d89b411461015e578063e30c39781461017e578063f2fde38b1461018f575f80fd5b8063181f5a771461009f57806322f3e2d4146100e1578063313ce567146100f957806370a0823114610107578063715018a614610128575b5f80fd5b6040805180820190915260148152730466972656472696c6c546f6b656e20312e302e360641b60208201525b6040516100d8919061036d565b60405180910390f35b6100e96101a2565b60405190151581526020016100d8565b6040515f81526020016100d8565b61011a6101153660046103b9565b505f90565b6040519081526020016100d8565b610130610212565b005b610130610225565b5f546001600160a01b03165b6040516001600160a01b0390911681526020016100d8565b6040805180820190915260048152634c494e4b60e01b60208201526100cb565b6001546001600160a01b0316610146565b61013061019d3660046103b9565b61026e565b600254604080516308bcf8b560e21b815290515f926001600160a01b0316916322f3e2d49160048083019260209291908290030181865afa1580156101e9573d5f803e3d5ffd5b505050506040513d601f19601f8201168201806040525081019061020d91906103e6565b905090565b61021a6102de565b6102235f61030a565b565b60015433906001600160a01b031681146102625760405163118cdaa760e01b81526001600160a01b03821660048201526024015b60405180910390fd5b61026b8161030a565b50565b6102766102de565b600180546001600160a01b0383166001600160a01b031990911681179091556102a65f546001600160a01b031690565b6001600160a01b03167f38d16b8cac22d99fc7c124b9cd0de2d3fa1faef420bfe791d8c362d765e2270060405160405180910390a350565b5f546001600160a01b031633146102235760405163118cdaa760e01b8152336004820152602401610259565b600180546001600160a01b031916905561026b815f80546001600160a01b038381166001600160a01b0319831681178455604051919092169283917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e09190a35050565b5f602080835283518060208501525f5b818110156103995785810183015185820160400152820161037d565b505f604082860101526040601f19601f8301168501019250505092915050565b5f602082840312156103c9575f80fd5b81356001600160a01b03811681146103df575f80fd5b9392505050565b5f602082840312156103f6575f80fd5b815180151581146103df575f80fdfea26469706673582212206fb37d112ff1769b4e0a9ebd1a07fd721169fc5a3328463657a2d8aca7b7583964736f6c6343000818003360a060405234801561000f575f80fd5b5060405161126338038061126383398101604081905261002e916100d9565b338061005357604051631e4fbdf760e01b81525f600482015260240160405180910390fd5b61005c8161006e565b506001600160a01b0316608052610106565b600180546001600160a01b03191690556100878161008a565b50565b5f80546001600160a01b038381166001600160a01b0319831681178455604051919092169283917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e09190a35050565b5f602082840312156100e9575f80fd5b81516001600160a01b03811681146100ff575f80fd5b9392505050565b6080516110ff6101645f395f81816101d301528181610261015281816102f0015281816103b201528181610440015281816104d10152818161055f015281816105ef015281816106cd0152818161091d01526109eb01526110ff5ff3fe608060405234801561000f575f80fd5b506004361061009b575f3560e01c80637437ff9f116100635780637437ff9f1461012057806379ba5097146101355780638da5cb5b1461013d578063e30c397814610161578063f2fde38b14610172575f80fd5b806306285c691461009f578063181f5a77146100bd57806322f3e2d4146100eb57806351a2be1214610103578063715018a614610118575b5f80fd5b6100a7610185565b6040516100b49190610be6565b60405180910390f35b604080518082018252600c81526b04f6e52616d7020312e352e360a41b602082015290516100b49190610cdc565b6100f36104ce565b60405190151581526020016100b4565b610116610111366004610d1e565b610554565b005b61011661088c565b61012861089f565b6040516100b49190610d55565b610116610aa3565b5f546001600160a01b03165b6040516001600160a01b0390911681526020016100b4565b6001546001600160a01b0316610149565b610116610180366004610e6b565b610ae7565b60408051610100810182525f80825260208201819052918101829052606081018290526080810182905260a0810182905260c0810182905260e08101919091526040518061010001604052807f00000000000000000000000000000000000000000000000000000000000000006001600160a01b031663fc0c546a6040518163ffffffff1660e01b8152600401602060405180830381865afa15801561022d573d5f803e3d5ffd5b505050506040513d601f19601f820116820180604052508101906102519190610e86565b6001600160a01b031681526020017f00000000000000000000000000000000000000000000000000000000000000006001600160a01b0316634e4bc8476040518163ffffffff1660e01b8152600401602060405180830381865afa1580156102bb573d5f803e3d5ffd5b505050506040513d601f19601f820116820180604052508101906102df9190610ea1565b67ffffffffffffffff1681526020017f00000000000000000000000000000000000000000000000000000000000000006001600160a01b0316634e4bc8476040518163ffffffff1660e01b8152600401602060405180830381865afa15801561034a573d5f803e3d5ffd5b505050506040513d601f19601f8201168201806040525081019061036e9190610ea1565b67ffffffffffffffff1681526020015f67ffffffffffffffff1681526020015f6bffffffffffffffffffffffff1681526020015f6001600160a01b031681526020017f00000000000000000000000000000000000000000000000000000000000000006001600160a01b031663f69e20466040518163ffffffff1660e01b8152600401602060405180830381865afa15801561040c573d5f803e3d5ffd5b505050506040513d601f19601f820116820180604052508101906104309190610e86565b6001600160a01b031681526020017f00000000000000000000000000000000000000000000000000000000000000006001600160a01b031663f69e20466040518163ffffffff1660e01b8152600401602060405180830381865afa15801561049a573d5f803e3d5ffd5b505050506040513d601f19601f820116820180604052508101906104be9190610e86565b6001600160a01b03169052919050565b5f7f00000000000000000000000000000000000000000000000000000000000000006001600160a01b03166322f3e2d46040518163ffffffff1660e01b8152600401602060405180830381865afa15801561052b573d5f803e3d5ffd5b505050506040513d601f19601f8201168201806040525081019061054f9190610ebc565b905090565b336001600160a01b037f000000000000000000000000000000000000000000000000000000000000000016146105c05760405162461bcd60e51b815260206004820152600c60248201526b1bdb9b1e4818dbdb9d1c9bdb60a21b60448201526064015b60405180910390fd5b7fd0c3c799bf9e2639de44391e7f524d229b2b55f5b1ea94b2bf7da42f7243dddd604051806101a001604052807f00000000000000000000000000000000000000000000000000000000000000006001600160a01b0316634e4bc8476040518163ffffffff1660e01b8152600401602060405180830381865afa158015610649573d5f803e3d5ffd5b505050506040513d601f19601f8201168201806040525081019061066d9190610ea1565b67ffffffffffffffff168152602001846001600160a01b03168152602001846001600160a01b031681526020018367ffffffffffffffff1681526020016103e881526020015f15158152602001600167ffffffffffffffff1681526020017f00000000000000000000000000000000000000000000000000000000000000006001600160a01b031663fc0c546a6040518163ffffffff1660e01b8152600401602060405180830381865afa158015610727573d5f803e3d5ffd5b505050506040513d601f19601f8201168201806040525081019061074b9190610e86565b6001600160a01b031681526020015f81526020016040518060400160405280600381526020016231323360e81b81525081526020015f67ffffffffffffffff81111561079957610799610edb565b6040519080825280602002602001820160405280156107dd57816020015b604080518082019091525f80825260208201528152602001906001900390816107b75790505b5081526020015f60405190808252806020026020018201604052801561081757816020015b60608152602001906001900390816108025790505b508152602001848460405160200161085a92919060609290921b6bffffffffffffffffffffffff1916825260c01b6001600160c01b0319166014820152601c0190565b604051602081830303815290604052805190602001208152506040516108809190610f95565b60405180910390a15050565b610894610b57565b61089d5f610b83565b565b604080516101c0810182525f80825260208201819052918101829052606081018290526080810182905260a0810182905260c0810182905260e08101829052610100810182905261012081018290526101408101829052610160810182905261018081018290526101a0810191909152604051806101c001604052807f00000000000000000000000000000000000000000000000000000000000000006001600160a01b031663f69e20466040518163ffffffff1660e01b8152600401602060405180830381865afa158015610977573d5f803e3d5ffd5b505050506040513d601f19601f8201168201806040525081019061099b9190610e86565b6001600160a01b031681526020015f61ffff1681526020015f63ffffffff1681526020015f61ffff1681526020015f63ffffffff1681526020015f61ffff1681526020015f61ffff1681526020017f00000000000000000000000000000000000000000000000000000000000000006001600160a01b031663f69e20466040518163ffffffff1660e01b8152600401602060405180830381865afa158015610a45573d5f803e3d5ffd5b505050506040513d601f19601f82011682018060405250810190610a699190610e86565b6001600160a01b031681525f6020820181905260408201819052606082018190526080820181905260a0820181905260c090910152919050565b60015433906001600160a01b03168114610adb5760405163118cdaa760e01b81526001600160a01b03821660048201526024016105b7565b610ae481610b83565b50565b610aef610b57565b600180546001600160a01b0383166001600160a01b03199091168117909155610b1f5f546001600160a01b031690565b6001600160a01b03167f38d16b8cac22d99fc7c124b9cd0de2d3fa1faef420bfe791d8c362d765e2270060405160405180910390a350565b5f546001600160a01b0316331461089d5760405163118cdaa760e01b81523360048201526024016105b7565b600180546001600160a01b0319169055610ae4815f80546001600160a01b038381166001600160a01b0319831681178455604051919092169283917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e09190a35050565b5f6101008201905060018060a01b038351168252602083015167ffffffffffffffff808216602085015280604086015116604085015280606086015116606085015250506bffffffffffffffffffffffff608084015116608083015260a0830151610c5c60a08401826001600160a01b03169052565b5060c0830151610c7760c08401826001600160a01b03169052565b5060e0830151610c9260e08401826001600160a01b03169052565b5092915050565b5f81518084525f5b81811015610cbd57602081850181015186830182015201610ca1565b505f602082860101526020601f19601f83011685010191505092915050565b602081525f610cee6020830184610c99565b9392505050565b6001600160a01b0381168114610ae4575f80fd5b67ffffffffffffffff81168114610ae4575f80fd5b5f8060408385031215610d2f575f80fd5b8235610d3a81610cf5565b91506020830135610d4a81610d09565b809150509250929050565b81516001600160a01b031681526101c081016020830151610d7c602084018261ffff169052565b506040830151610d94604084018263ffffffff169052565b506060830151610daa606084018261ffff169052565b506080830151610dc2608084018263ffffffff169052565b5060a0830151610dd860a084018261ffff169052565b5060c0830151610dee60c084018261ffff169052565b5060e0830151610e0960e08401826001600160a01b03169052565b506101008381015163ffffffff90811691840191909152610120808501518216908401526101408085015161ffff16908401526101608085015182169084015261018080850151909116908301526101a0928301511515929091019190915290565b5f60208284031215610e7b575f80fd5b8135610cee81610cf5565b5f60208284031215610e96575f80fd5b8151610cee81610cf5565b5f60208284031215610eb1575f80fd5b8151610cee81610d09565b5f60208284031215610ecc575f80fd5b81518015158114610cee575f80fd5b634e487b7160e01b5f52604160045260245ffd5b5f815180845260208085019450602084015f5b83811015610f3257815180516001600160a01b031688528301518388015260409096019590820190600101610f02565b509495945050505050565b5f8282518085526020808601955060208260051b840101602086015f5b84811015610f8857601f19868403018952610f76838351610c99565b98840198925090830190600101610f5a565b5090979650505050505050565b60208152610fb060208201835167ffffffffffffffff169052565b5f6020830151610fcb60408401826001600160a01b03169052565b5060408301516001600160a01b038116606084015250606083015167ffffffffffffffff8116608084015250608083015160a083015260a083015161101460c084018215159052565b5060c083015167ffffffffffffffff811660e08401525060e0830151610100611047818501836001600160a01b03169052565b840151610120848101919091528401516101a0610140808601829052919250906110756101c0860184610c99565b9250808601519050601f196101608187860301818801526110968584610eef565b9450808801519250506101808187860301818801526110b58584610f3d565b97015195909201949094525092939250505056fea26469706673582212208a5f16679c0c9d638e90ae5f569f46f6ed882bab11057fcd3d4cf5a2ffd871e564736f6c6343000818003360a060405234801561000f575f80fd5b506040516200172138038062001721833981016040819052610030916100db565b338061005557604051631e4fbdf760e01b81525f600482015260240160405180910390fd5b61005e81610070565b506001600160a01b0316608052610108565b600180546001600160a01b03191690556100898161008c565b50565b5f80546001600160a01b038381166001600160a01b0319831681178455604051919092169283917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e09190a35050565b5f602082840312156100eb575f80fd5b81516001600160a01b0381168114610101575f80fd5b9392505050565b608051611574620001ad5f395f818161030e0152818161039c0152818161042b015281816104ba01528181610557015281816105e501528181610676015281816106fc015281816107e901528181610906015281816109f401528181610a7301528181610ade01528181610b6c01528181610bfb01528181610c8a01528181610d2701528181610db501528181610e7101528181610eff0152610fa101526115745ff3fe608060405234801561000f575f80fd5b50600436106100f0575f3560e01c806379ba509711610093578063cdffbd5f11610063578063cdffbd5f1461028a578063cefe12c514610292578063e30c3978146102a5578063f2fde38b146102b6575f80fd5b806379ba509714610257578063866ec1d61461025f5780638da5cb5b1461027257806392abf95e14610282575f80fd5b806322f3e2d4116100ce57806322f3e2d414610161578063546719cd14610179578063715018a6146102385780637437ff9f14610242575f80fd5b806306285c69146100f4578063181f5a771461011257806321df0da714610141575b5f80fd5b6100fc6102c9565b60405161010991906111e7565b60405180910390f35b604080518082018252600d81526c04f666652616d7020312e352e3609c1b60208201529051610109919061123e565b610149610673565b6040516001600160a01b039091168152602001610109565b6101696106f9565b6040519015158152602001610109565b6101dc6040805160a0810182525f80825260208201819052918101829052606081018290526080810191909152506040805160a0810182525f80825263ffffffff4216602083015260019282019290925260326060820152608081019190915290565b604051610109919081516fffffffffffffffffffffffffffffffff908116825260208084015163ffffffff1690830152604080840151151590830152606080840151821690830152608092830151169181019190915260a00190565b61024061077a565b005b61024a61078d565b60405161010991906112a2565b610240610843565b61024061026d3660046112c5565b61088c565b5f546001600160a01b0316610149565b6102406109e9565b610240610a68565b6102406102a0366004611310565b610f96565b6001546001600160a01b0316610149565b6102406102c436600461132c565b611082565b6040805160e0810182525f80825260208201819052918101829052606081018290526080810182905260a0810182905260c08101919091526040518060e001604052807f00000000000000000000000000000000000000000000000000000000000000006001600160a01b03166344671a5d6040518163ffffffff1660e01b8152600401602060405180830381865afa158015610368573d5f803e3d5ffd5b505050506040513d601f19601f8201168201806040525081019061038c9190611347565b6001600160a01b031681526020017f00000000000000000000000000000000000000000000000000000000000000006001600160a01b0316634e4bc8476040518163ffffffff1660e01b8152600401602060405180830381865afa1580156103f6573d5f803e3d5ffd5b505050506040513d601f19601f8201168201806040525081019061041a9190611362565b67ffffffffffffffff1681526020017f00000000000000000000000000000000000000000000000000000000000000006001600160a01b0316634e4bc8476040518163ffffffff1660e01b8152600401602060405180830381865afa158015610485573d5f803e3d5ffd5b505050506040513d601f19601f820116820180604052508101906104a99190611362565b67ffffffffffffffff1681526020017f00000000000000000000000000000000000000000000000000000000000000006001600160a01b031663c021e73c6040518163ffffffff1660e01b8152600401602060405180830381865afa158015610514573d5f803e3d5ffd5b505050506040513d601f19601f820116820180604052508101906105389190611347565b6001600160a01b031681526020015f6001600160a01b031681526020017f00000000000000000000000000000000000000000000000000000000000000006001600160a01b031663f69e20466040518163ffffffff1660e01b8152600401602060405180830381865afa1580156105b1573d5f803e3d5ffd5b505050506040513d601f19601f820116820180604052508101906105d59190611347565b6001600160a01b031681526020017f00000000000000000000000000000000000000000000000000000000000000006001600160a01b031663f69e20466040518163ffffffff1660e01b8152600401602060405180830381865afa15801561063f573d5f803e3d5ffd5b505050506040513d601f19601f820116820180604052508101906106639190611347565b6001600160a01b03169052919050565b5f7f00000000000000000000000000000000000000000000000000000000000000006001600160a01b031663fc0c546a6040518163ffffffff1660e01b8152600401602060405180830381865afa1580156106d0573d5f803e3d5ffd5b505050506040513d601f19601f820116820180604052508101906106f49190611347565b905090565b5f7f00000000000000000000000000000000000000000000000000000000000000006001600160a01b03166322f3e2d46040518163ffffffff1660e01b8152600401602060405180830381865afa158015610756573d5f803e3d5ffd5b505050506040513d601f19601f820116820180604052508101906106f4919061137d565b6107826110f2565b61078b5f61111e565b565b6040805160a0810182525f808252602082018190529181018290526060810182905260808101919091526040518060a00160405280600a63ffffffff168152602001600a63ffffffff168152602001600a61ffff1681526020017f00000000000000000000000000000000000000000000000000000000000000006001600160a01b031663f69e20466040518163ffffffff1660e01b8152600401602060405180830381865afa1580156105b1573d5f803e3d5ffd5b60015433906001600160a01b031681146108805760405163118cdaa760e01b81526001600160a01b03821660048201526024015b60405180910390fd5b6108898161111e565b50565b60408051808201909152606080825260208201525f60405180604001604052808567ffffffffffffffff1681526020018467ffffffffffffffff1681525090507f291698c01aa71f912280535d88a00d2c59fb63530a3f5d0098560468acb9ebf560405180606001604052808481526020018381526020017f00000000000000000000000000000000000000000000000000000000000000006001600160a01b03166344671a5d6040518163ffffffff1660e01b8152600401602060405180830381865afa158015610960573d5f803e3d5ffd5b505050506040513d601f19601f820116820180604052508101906109849190611347565b604080516001600160a01b03909216602083015267ffffffffffffffff808a169183019190915287166060820152608001604051602081830303815290604052805190602001208152506040516109db91906113f4565b60405180910390a150505050565b336001600160a01b037f00000000000000000000000000000000000000000000000000000000000000001614610a315760405162461bcd60e51b8152600401610877906114c0565b604051606481527f1871cdf8010e63f2eb8384381a68dfa7416dc571a5517e66e88b2d2d0c0a690a906020015b60405180910390a1565b336001600160a01b037f00000000000000000000000000000000000000000000000000000000000000001614610ab05760405162461bcd60e51b8152600401610877906114c0565b7f7879e20bb60a503429de4a2c912b5904f08a39f2af054c10fb46434b5d6112606040518060e001604052807f00000000000000000000000000000000000000000000000000000000000000006001600160a01b03166344671a5d6040518163ffffffff1660e01b8152600401602060405180830381865afa158015610b38573d5f803e3d5ffd5b505050506040513d601f19601f82011682018060405250810190610b5c9190611347565b6001600160a01b031681526020017f00000000000000000000000000000000000000000000000000000000000000006001600160a01b0316634e4bc8476040518163ffffffff1660e01b8152600401602060405180830381865afa158015610bc6573d5f803e3d5ffd5b505050506040513d601f19601f82011682018060405250810190610bea9190611362565b67ffffffffffffffff1681526020017f00000000000000000000000000000000000000000000000000000000000000006001600160a01b0316634e4bc8476040518163ffffffff1660e01b8152600401602060405180830381865afa158015610c55573d5f803e3d5ffd5b505050506040513d601f19601f82011682018060405250810190610c799190611362565b67ffffffffffffffff1681526020017f00000000000000000000000000000000000000000000000000000000000000006001600160a01b031663c021e73c6040518163ffffffff1660e01b8152600401602060405180830381865afa158015610ce4573d5f803e3d5ffd5b505050506040513d601f19601f82011682018060405250810190610d089190611347565b6001600160a01b031681526020015f6001600160a01b031681526020017f00000000000000000000000000000000000000000000000000000000000000006001600160a01b031663f69e20466040518163ffffffff1660e01b8152600401602060405180830381865afa158015610d81573d5f803e3d5ffd5b505050506040513d601f19601f82011682018060405250810190610da59190611347565b6001600160a01b031681526020017f00000000000000000000000000000000000000000000000000000000000000006001600160a01b031663f69e20466040518163ffffffff1660e01b8152600401602060405180830381865afa158015610e0f573d5f803e3d5ffd5b505050506040513d601f19601f82011682018060405250810190610e339190611347565b6001600160a01b03168152506040518060a00160405280600a63ffffffff168152602001600a63ffffffff168152602001600a61ffff1681526020017f00000000000000000000000000000000000000000000000000000000000000006001600160a01b031663f69e20466040518163ffffffff1660e01b8152600401602060405180830381865afa158015610ecb573d5f803e3d5ffd5b505050506040513d601f19601f82011682018060405250810190610eef9190611347565b6001600160a01b031681526020017f00000000000000000000000000000000000000000000000000000000000000006001600160a01b031663f69e20466040518163ffffffff1660e01b8152600401602060405180830381865afa158015610f59573d5f803e3d5ffd5b505050506040513d601f19601f82011682018060405250810190610f7d9190611347565b6001600160a01b03169052604051610a5e9291906114e6565b336001600160a01b037f00000000000000000000000000000000000000000000000000000000000000001614610fde5760405162461bcd60e51b8152600401610877906114c0565b6040516bffffffffffffffffffffffff19606084901b1660208201526001600160c01b031960c083901b166034820152603c016040516020818303038152906040528051906020012060017fd4f851956a5d67c3997d1c9205045fef79bae2947fdee7e9e2641abc7391ef6560016040518060400160405280600381526020016231323360e81b815250604051611076929190611502565b60405180910390a35050565b61108a6110f2565b600180546001600160a01b0383166001600160a01b031990911681179091556110ba5f546001600160a01b031690565b6001600160a01b03167f38d16b8cac22d99fc7c124b9cd0de2d3fa1faef420bfe791d8c362d765e2270060405160405180910390a350565b5f546001600160a01b0316331461078b5760405163118cdaa760e01b8152336004820152602401610877565b600180546001600160a01b0319169055610889815f80546001600160a01b038381166001600160a01b0319831681178455604051919092169283917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e09190a35050565b60018060a01b03808251168352602082015167ffffffffffffffff808216602086015280604085015116604086015250508060608301511660608401528060808301511660808401528060a08301511660a08401528060c08301511660c0840152505050565b60e081016111f58284611181565b92915050565b5f81518084525f5b8181101561121f57602081850181015186830182015201611203565b505f602082860101526020601f19601f83011685010191505092915050565b602081525f61125060208301846111fb565b9392505050565b805163ffffffff90811683526020808301519091169083015260408082015161ffff16908301526060808201516001600160a01b039081169184019190915260809182015116910152565b60a081016111f58284611257565b67ffffffffffffffff81168114610889575f80fd5b5f80604083850312156112d6575f80fd5b82356112e1816112b0565b915060208301356112f1816112b0565b809150509250929050565b6001600160a01b0381168114610889575f80fd5b5f8060408385031215611321575f80fd5b82356112e1816112fc565b5f6020828403121561133c575f80fd5b8135611250816112fc565b5f60208284031215611357575f80fd5b8151611250816112fc565b5f60208284031215611372575f80fd5b8151611250816112b0565b5f6020828403121561138d575f80fd5b81518015158114611250575f80fd5b5f815180845260208085019450602084015f5b838110156113e9578151805167ffffffffffffffff1688528301516001600160e01b031683880152604090960195908201906001016113af565b509495945050505050565b602080825282516080838301528051604060a08501819052815160e086018190525f94939284019185916101008801905b8084101561146057845180516001600160a01b031683528701516001600160e01b031687830152938601936001939093019290820190611425565b5093850151878503609f190160c08901529361147c818661139c565b95890151805167ffffffffffffffff90811660408b015260208201511660608a01529594506114ab9350505050565b60408501516080850152809250505092915050565b6020808252600c908201526b1bdb9b1e4818dbdb9d1c9bdb60a21b604082015260600190565b61018081016114f58285611181565b61125060e0830184611257565b5f6004841061151f57634e487b7160e01b5f52602160045260245ffd5b8382526040602083015261153660408301846111fb565b94935050505056fea26469706673582212209146db39b11fe4ad18322f25d16c81bd088290bd5403e07916dcd8226c0fbcb464736f6c6343000818003360a060405234801561000f575f80fd5b50604051610ef8380380610ef883398101604081905261002e916100d9565b338061005357604051631e4fbdf760e01b81525f600482015260240160405180910390fd5b61005c8161006e565b506001600160a01b0316608052610106565b600180546001600160a01b03191690556100878161008a565b50565b5f80546001600160a01b038381166001600160a01b0319831681178455604051919092169283917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e09190a35050565b5f602082840312156100e9575f80fd5b81516001600160a01b03811681146100ff575f80fd5b9392505050565b608051610da26101565f395f818161038101528181610450015281816104d60152818161055701528181610628015281816106b6015281816108820152818161091101526109c00152610da25ff3fe608060405234801561000f575f80fd5b5060043610610127575f3560e01c80638da5cb5b116100a9578063c75eea9c1161006e578063c75eea9c146102dc578063d7080f091461034b578063e30c397814610353578063f2fde38b14610364578063f5de852714610377575f80fd5b80638da5cb5b14610296578063a40e69c7146102a6578063a6c94a73146102bb578063a8d87a3b146102c9578063af58d59f146102dc575f80fd5b8063384b09e8116100ef578063384b09e8146101ac57806343d24152146101b4578063546719cd146101c7578063715018a61461028657806379ba50971461028e575f80fd5b8063181f5a771461012b57806320f938b61461016257806321df0da71461016c57806322f3e2d41461018c5780632e90aa21146101a4575b5f80fd5b604080518082018252600c81526b0526f7574657220312e322e360a41b602082015290516101599190610bb9565b60405180910390f35b61016a61037f565b005b61017461044d565b6040516001600160a01b039091168152602001610159565b6101946104d3565b6040519015158152602001610159565b610174610554565b61016a6105b1565b61016a6101c2366004610c1a565b61061a565b61022a6040805160a0810182525f80825260208201819052918101829052606081018290526080810191909152506040805160a0810182525f80825263ffffffff4216602083015260019282019290925260326060820152608081019190915290565b604051610159919081516fffffffffffffffffffffffffffffffff908116825260208084015163ffffffff1690830152604080840151151590830152606080840151821690830152608092830151169181019190915260a00190565b61016a6107d7565b61016a6107ea565b5f546001600160a01b0316610174565b6102ae610833565b6040516101599190610c51565b6040515f8152602001610159565b6101746102d7366004610cb2565b6109bd565b61022a6102ea366004610cb2565b6040805160a0810182525f8082526020820181905291810182905260608101829052608081019190915250506040805160a0810182525f80825263ffffffff4216602083015260019282019290925260326060820152608081019190915290565b61016a610a44565b6001546001600160a01b0316610174565b61016a610372366004610ce8565b610a85565b61016a610af5565b7f00000000000000000000000000000000000000000000000000000000000000006001600160a01b031663fc0c546a6040518163ffffffff1660e01b8152600401602060405180830381865afa1580156103db573d5f803e3d5ffd5b505050506040513d601f19601f820116820180604052508101906103ff9190610d03565b6001600160a01b03167f52f50aa6d1a95a4595361ecf953d095f125d442e4673716dede699e049de148a600142604051610443929190918252602082015260400190565b60405180910390a2565b5f7f00000000000000000000000000000000000000000000000000000000000000006001600160a01b031663fc0c546a6040518163ffffffff1660e01b8152600401602060405180830381865afa1580156104aa573d5f803e3d5ffd5b505050506040513d601f19601f820116820180604052508101906104ce9190610d03565b905090565b5f7f00000000000000000000000000000000000000000000000000000000000000006001600160a01b03166322f3e2d46040518163ffffffff1660e01b8152600401602060405180830381865afa158015610530573d5f803e3d5ffd5b505050506040513d601f19601f820116820180604052508101906104ce9190610d1e565b5f7f00000000000000000000000000000000000000000000000000000000000000006001600160a01b031663f69e20466040518163ffffffff1660e01b8152600401602060405180830381865afa1580156104aa573d5f803e3d5ffd5b604080515f8082526020820181905260039282019290925267ffffffffffffffff421660608201526080810182905260a081018290523391907f8137bc8a8d712aaa27bfc6506d5566ac405618bd53f9831b8ca6b6fe5442ee7a9060c0015b60405180910390a3565b5f60405180604001604052807f00000000000000000000000000000000000000000000000000000000000000006001600160a01b03166344671a5d6040518163ffffffff1660e01b8152600401602060405180830381865afa158015610682573d5f803e3d5ffd5b505050506040513d601f19601f820116820180604052508101906106a69190610d03565b6001600160a01b031681526020017f00000000000000000000000000000000000000000000000000000000000000006001600160a01b03166344671a5d6040518163ffffffff1660e01b8152600401602060405180830381865afa158015610710573d5f803e3d5ffd5b505050506040513d601f19601f820116820180604052508101906107349190610d03565b604080516001600160a01b03909216602083015267ffffffffffffffff808816918301919091528516606082015260800160408051601f198184030181529181528151602092830120909252815183516001600160a01b0316815283820151918101919091525f918101829052919250907f8257378aa73bf8e4ada848713526584a3dcee0fd3db3beed7397f7a7f5067cc99060600160405180910390a2505050565b6107df610b2a565b6107e85f610b56565b565b60015433906001600160a01b031681146108275760405163118cdaa760e01b81526001600160a01b03821660048201526024015b60405180910390fd5b61083081610b56565b50565b6040805160018082528183019092526060915f9190816020015b604080518082019091525f808252602082015281526020019060019003908161084d57905050905060405180604001604052807f00000000000000000000000000000000000000000000000000000000000000006001600160a01b0316634e4bc8476040518163ffffffff1660e01b8152600401602060405180830381865afa1580156108dc573d5f803e3d5ffd5b505050506040513d601f19601f820116820180604052508101906109009190610d3d565b67ffffffffffffffff1681526020017f00000000000000000000000000000000000000000000000000000000000000006001600160a01b03166344671a5d6040518163ffffffff1660e01b8152600401602060405180830381865afa15801561096b573d5f803e3d5ffd5b505050506040513d601f19601f8201168201806040525081019061098f9190610d03565b6001600160a01b0316815250815f815181106109ad576109ad610d58565b6020908102919091010152919050565b5f7f00000000000000000000000000000000000000000000000000000000000000006001600160a01b031663c021e73c6040518163ffffffff1660e01b8152600401602060405180830381865afa158015610a1a573d5f803e3d5ffd5b505050506040513d601f19601f82011682018060405250810190610a3e9190610d03565b92915050565b604080515f80825267ffffffffffffffff42166020830152917fcfdbfd8ce9a56b5f7c202c0e102184d24f47ca87121dc165063fc4c290957bde9101610443565b610a8d610b2a565b600180546001600160a01b0383166001600160a01b03199091168117909155610abd5f546001600160a01b031690565b6001600160a01b03167f38d16b8cac22d99fc7c124b9cd0de2d3fa1faef420bfe791d8c362d765e2270060405160405180910390a350565b60405160648152339030907f2d87480f50083e2b2759522a8fdda59802650a8055e609a7772cf70c07748f5290602001610610565b5f546001600160a01b031633146107e85760405163118cdaa760e01b815233600482015260240161081e565b600180546001600160a01b0319169055610830815f80546001600160a01b038381166001600160a01b0319831681178455604051919092169283917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e09190a35050565b5f602080835283518060208501525f5b81811015610be557858101830151858201604001528201610bc9565b505f604082860101526040601f19601f8301168501019250505092915050565b67ffffffffffffffff81168114610830575f80fd5b5f8060408385031215610c2b575f80fd5b8235610c3681610c05565b91506020830135610c4681610c05565b809150509250929050565b602080825282518282018190525f919060409081850190868401855b82811015610ca5578151805167ffffffffffffffff1685528601516001600160a01b0316868501529284019290850190600101610c6d565b5091979650505050505050565b5f60208284031215610cc2575f80fd5b8135610ccd81610c05565b9392505050565b6001600160a01b0381168114610830575f80fd5b5f60208284031215610cf8575f80fd5b8135610ccd81610cd4565b5f60208284031215610d13575f80fd5b8151610ccd81610cd4565b5f60208284031215610d2e575f80fd5b81518015158114610ccd575f80fd5b5f60208284031215610d4d575f80fd5b8151610ccd81610c05565b634e487b7160e01b5f52603260045260245ffdfea2646970667358221220e0146167140781724431d8e3dce1e3a05351d8576061810e9dc771b7649731a764736f6c6343000818003360a060405234801561000f575f80fd5b506040516110e63803806110e683398101604081905261002e91610100565b3360808190525f805460ff191660011790558061006457604051631e4fbdf760e01b81525f600482015260240160405180910390fd5b61006d81610093565b50600480546001600160a01b0319166001600160a01b039290921691909117905561012d565b600380546001600160a01b03191690556100ac816100af565b50565b600280546001600160a01b038381166001600160a01b0319831681179093556040519116919082907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0905f90a35050565b5f60208284031215610110575f80fd5b81516001600160a01b0381168114610126575f80fd5b9392505050565b608051610f7e6101685f395f818161036b0152818161045b015281816104f9015281816106100152818161065e01526106e00152610f7e5ff3fe6080604052600436106100e7575f3560e01c806377f5b0e6116100875780638fb5f171116100575780638fb5f17114610295578063b99152d0146102c1578063e30c3978146102ee578063f2fde38b1461030b575f80fd5b806377f5b0e61461021257806379ba50971461023157806385572ffb146102455780638da5cb5b14610264575f80fd5b806322f3e2d4116100c257806322f3e2d4146101be57806324600fc3146101d25780635100fc21146101e6578063715018a6146101fe575f80fd5b806301ffc9a71461014857806306b091f91461017c578063181f5a771461019d575f80fd5b36610144575f5460ff161561010f57604051633085b8db60e01b815260040160405180910390fd5b6040513481527fe12e3b7047ff60a2dd763cf536a43597e5ce7fe7aa7476345bd4cd079912bcef9060200160405180910390a1005b5f80fd5b348015610153575f80fd5b506101676101623660046109bf565b61032a565b60405190151581526020015b60405180910390f35b348015610187575f80fd5b5061019b610196366004610a01565b610360565b005b3480156101a8575f80fd5b506101b161056b565b6040516101739190610a29565b3480156101c9575f80fd5b5061016761058b565b3480156101dd575f80fd5b5061019b610605565b3480156101f1575f80fd5b505f546101679060ff1681565b348015610209575f80fd5b5061019b610745565b34801561021d575f80fd5b5061019b61022c366004610a89565b610758565b34801561023c575f80fd5b5061019b610768565b348015610250575f80fd5b5061019b61025f366004610b34565b6107ac565b34801561026f575f80fd5b506002546001600160a01b03165b6040516001600160a01b039091168152602001610173565b3480156102a0575f80fd5b5061019b6102af366004610b78565b5f805460ff1916911515919091179055565b3480156102cc575f80fd5b506102e06102db366004610b93565b61084b565b604051908152602001610173565b3480156102f9575f80fd5b506003546001600160a01b031661027d565b348015610316575f80fd5b5061019b610325366004610b93565b6108bc565b5f6001600160e01b031982166385572ffb60e01b148061035a57506001600160e01b031982166301ffc9a760e01b145b92915050565b336001600160a01b037f000000000000000000000000000000000000000000000000000000000000000016146103a8576040516282b42960e81b815260040160405180910390fd5b6040516370a0823160e01b815230600482015282905f906001600160a01b038316906370a0823190602401602060405180830381865afa1580156103ee573d5f803e3d5ffd5b505050506040513d601f19601f820116820180604052508101906104129190610bac565b9050828110156104445760405163cf47918160e01b815260048101829052602481018490526044015b60405180910390fd5b60405163a9059cbb60e01b81526001600160a01b037f000000000000000000000000000000000000000000000000000000000000000081166004830152602482018590525f919084169063a9059cbb906044016020604051808303815f875af11580156104b3573d5f803e3d5ffd5b505050506040513d601f19601f820116820180604052508101906104d79190610bc3565b9050806104f7576040516312171d8360e31b815260040160405180910390fd5b7f00000000000000000000000000000000000000000000000000000000000000006001600160a01b0316856001600160a01b03167f6337ed398c0e8467698c581374fdce4db14922df487b5a39483079f5f59b60a48660405161055c91815260200190565b60405180910390a35050505050565b6060604051806060016040528060248152602001610f2560249139905090565b5f60045f9054906101000a90046001600160a01b03166001600160a01b03166322f3e2d46040518163ffffffff1660e01b8152600401602060405180830381865afa1580156105dc573d5f803e3d5ffd5b505050506040513d601f19601f820116820180604052508101906106009190610bc3565b905090565b336001600160a01b037f0000000000000000000000000000000000000000000000000000000000000000161461064d576040516282b42960e81b815260040160405180910390fd5b60405147905f906001600160a01b037f0000000000000000000000000000000000000000000000000000000000000000169083908381818185875af1925050503d805f81146106b7576040519150601f19603f3d011682016040523d82523d5f602084013e6106bc565b606091505b50509050806106de576040516312171d8360e31b815260040160405180910390fd5b7f00000000000000000000000000000000000000000000000000000000000000006001600160a01b03167fd50b71a2790ecccf5881141fe9ae079e17c66aace5d50ba383d443ecd398ffa58360405161073991815260200190565b60405180910390a25050565b61074d61092d565b6107565f61095a565b565b60016107648282610c62565b5050565b60035433906001600160a01b031681146107a05760405163118cdaa760e01b81526001600160a01b038216600482015260240161043b565b6107a98161095a565b50565b5f5460ff16156107d2576001604051635a4ff67160e01b815260040161043b9190610d22565b7f707732b700184c0ab3b799f43f03de9b3606a144cfb367f98291044e71972cdc81356108056040840160208501610dac565b6108126040850185610dd3565b61081f6060870187610dd3565b61082c6080890189610e1d565b604051610840989796959493929190610e8b565b60405180910390a150565b6040516370a0823160e01b81523060048201525f9082906001600160a01b038216906370a0823190602401602060405180830381865afa158015610891573d5f803e3d5ffd5b505050506040513d601f19601f820116820180604052508101906108b59190610bac565b9392505050565b6108c461092d565b600380546001600160a01b0383166001600160a01b031990911681179091556108f56002546001600160a01b031690565b6001600160a01b03167f38d16b8cac22d99fc7c124b9cd0de2d3fa1faef420bfe791d8c362d765e2270060405160405180910390a350565b6002546001600160a01b031633146107565760405163118cdaa760e01b815233600482015260240161043b565b600380546001600160a01b03191690556107a981600280546001600160a01b038381166001600160a01b0319831681179093556040519116919082907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0905f90a35050565b5f602082840312156109cf575f80fd5b81356001600160e01b0319811681146108b5575f80fd5b80356001600160a01b03811681146109fc575f80fd5b919050565b5f8060408385031215610a12575f80fd5b610a1b836109e6565b946020939093013593505050565b5f602080835283518060208501525f5b81811015610a5557858101830151858201604001528201610a39565b505f604082860101526040601f19601f8301168501019250505092915050565b634e487b7160e01b5f52604160045260245ffd5b5f60208284031215610a99575f80fd5b813567ffffffffffffffff80821115610ab0575f80fd5b818401915084601f830112610ac3575f80fd5b813581811115610ad557610ad5610a75565b604051601f8201601f19908116603f01168101908382118183101715610afd57610afd610a75565b81604052828152876020848701011115610b15575f80fd5b826020860160208301375f928101602001929092525095945050505050565b5f60208284031215610b44575f80fd5b813567ffffffffffffffff811115610b5a575f80fd5b820160a081850312156108b5575f80fd5b80151581146107a9575f80fd5b5f60208284031215610b88575f80fd5b81356108b581610b6b565b5f60208284031215610ba3575f80fd5b6108b5826109e6565b5f60208284031215610bbc575f80fd5b5051919050565b5f60208284031215610bd3575f80fd5b81516108b581610b6b565b600181811c90821680610bf257607f821691505b602082108103610c1057634e487b7160e01b5f52602260045260245ffd5b50919050565b601f821115610c5d57805f5260205f20601f840160051c81016020851015610c3b5750805b601f840160051c820191505b81811015610c5a575f8155600101610c47565b50505b505050565b815167ffffffffffffffff811115610c7c57610c7c610a75565b610c9081610c8a8454610bde565b84610c16565b602080601f831160018114610cc3575f8415610cac5750858301515b5f19600386901b1c1916600185901b178555610d1a565b5f85815260208120601f198616915b82811015610cf157888601518255948401946001909101908401610cd2565b5085821015610d0e57878501515f19600388901b60f8161c191681555b505060018460011b0185555b505050505050565b5f60208083525f8454610d3481610bde565b806020870152604060018084165f8114610d555760018114610d7157610d9e565b60ff19851660408a0152604084151560051b8a01019550610d9e565b895f5260205f205f5b85811015610d955781548b8201860152908301908801610d7a565b8a016040019650505b509398975050505050505050565b5f60208284031215610dbc575f80fd5b813567ffffffffffffffff811681146108b5575f80fd5b5f808335601e19843603018112610de8575f80fd5b83018035915067ffffffffffffffff821115610e02575f80fd5b602001915036819003821315610e16575f80fd5b9250929050565b5f808335601e19843603018112610e32575f80fd5b83018035915067ffffffffffffffff821115610e4c575f80fd5b6020019150600681901b3603821315610e16575f80fd5b81835281816020850137505f828201602090810191909152601f909101601f19169091010190565b8881525f602067ffffffffffffffff8a166020840152604060a06040850152610eb860a085018a8c610e63565b8481036060860152610ecb81898b610e63565b85810360808701528681528791506020015f5b87811015610f12576001600160a01b03610ef7846109e6565b16825282850135858301529183019190830190600101610ede565b509d9c5050505050505050505050505056fe466972656472696c6c5265766572744d657373616765526563656976657220312e302e30a2646970667358221220fba1ac2392bf4ffd9fbe649aeae96d551930a1566fcc1c1c3485ac7299574fd964736f6c63430008180033",
}

// FiredrillEntrypointABI is the input ABI used to generate the binding from.
// Deprecated: Use FiredrillEntrypointMetaData.ABI instead.
var FiredrillEntrypointABI = FiredrillEntrypointMetaData.ABI

// FiredrillEntrypointBin is the compiled bytecode used for deploying new contracts.
// Deprecated: Use FiredrillEntrypointMetaData.Bin instead.
var FiredrillEntrypointBin = FiredrillEntrypointMetaData.Bin

// DeployFiredrillEntrypoint deploys a new Ethereum contract, binding an instance of FiredrillEntrypoint to it.
func DeployFiredrillEntrypoint(auth *bind.TransactOpts, backend bind.ContractBackend, chainSelector uint64) (common.Address, *types.Transaction, *FiredrillEntrypoint, error) {
	parsed, err := FiredrillEntrypointMetaData.GetAbi()
	if err != nil {
		return common.Address{}, nil, nil, err
	}
	if parsed == nil {
		return common.Address{}, nil, nil, errors.New("GetABI returned nil")
	}

	address, tx, contract, err := bind.DeployContract(auth, *parsed, common.FromHex(FiredrillEntrypointBin), backend, chainSelector)
	if err != nil {
		return common.Address{}, nil, nil, err
	}
	return address, tx, &FiredrillEntrypoint{FiredrillEntrypointCaller: FiredrillEntrypointCaller{contract: contract}, FiredrillEntrypointTransactor: FiredrillEntrypointTransactor{contract: contract}, FiredrillEntrypointFilterer: FiredrillEntrypointFilterer{contract: contract}}, nil
}

// FiredrillEntrypoint is an auto generated Go binding around an Ethereum contract.
type FiredrillEntrypoint struct {
	FiredrillEntrypointCaller     // Read-only binding to the contract
	FiredrillEntrypointTransactor // Write-only binding to the contract
	FiredrillEntrypointFilterer   // Log filterer for contract events
}

// FiredrillEntrypointCaller is an auto generated read-only Go binding around an Ethereum contract.
type FiredrillEntrypointCaller struct {
	contract *bind.BoundContract // Generic contract wrapper for the low level calls
}

// FiredrillEntrypointTransactor is an auto generated write-only Go binding around an Ethereum contract.
type FiredrillEntrypointTransactor struct {
	contract *bind.BoundContract // Generic contract wrapper for the low level calls
}

// FiredrillEntrypointFilterer is an auto generated log filtering Go binding around an Ethereum contract events.
type FiredrillEntrypointFilterer struct {
	contract *bind.BoundContract // Generic contract wrapper for the low level calls
}

// FiredrillEntrypointSession is an auto generated Go binding around an Ethereum contract,
// with pre-set call and transact options.
type FiredrillEntrypointSession struct {
	Contract     *FiredrillEntrypoint // Generic contract binding to set the session for
	CallOpts     bind.CallOpts        // Call options to use throughout this session
	TransactOpts bind.TransactOpts    // Transaction auth options to use throughout this session
}

// FiredrillEntrypointCallerSession is an auto generated read-only Go binding around an Ethereum contract,
// with pre-set call options.
type FiredrillEntrypointCallerSession struct {
	Contract *FiredrillEntrypointCaller // Generic contract caller binding to set the session for
	CallOpts bind.CallOpts              // Call options to use throughout this session
}

// FiredrillEntrypointTransactorSession is an auto generated write-only Go binding around an Ethereum contract,
// with pre-set transact options.
type FiredrillEntrypointTransactorSession struct {
	Contract     *FiredrillEntrypointTransactor // Generic contract transactor binding to set the session for
	TransactOpts bind.TransactOpts              // Transaction auth options to use throughout this session
}

// FiredrillEntrypointRaw is an auto generated low-level Go binding around an Ethereum contract.
type FiredrillEntrypointRaw struct {
	Contract *FiredrillEntrypoint // Generic contract binding to access the raw methods on
}

// FiredrillEntrypointCallerRaw is an auto generated low-level read-only Go binding around an Ethereum contract.
type FiredrillEntrypointCallerRaw struct {
	Contract *FiredrillEntrypointCaller // Generic read-only contract binding to access the raw methods on
}

// FiredrillEntrypointTransactorRaw is an auto generated low-level write-only Go binding around an Ethereum contract.
type FiredrillEntrypointTransactorRaw struct {
	Contract *FiredrillEntrypointTransactor // Generic write-only contract binding to access the raw methods on
}

// NewFiredrillEntrypoint creates a new instance of FiredrillEntrypoint, bound to a specific deployed contract.
func NewFiredrillEntrypoint(address common.Address, backend bind.ContractBackend) (*FiredrillEntrypoint, error) {
	contract, err := bindFiredrillEntrypoint(address, backend, backend, backend)
	if err != nil {
		return nil, err
	}
	return &FiredrillEntrypoint{FiredrillEntrypointCaller: FiredrillEntrypointCaller{contract: contract}, FiredrillEntrypointTransactor: FiredrillEntrypointTransactor{contract: contract}, FiredrillEntrypointFilterer: FiredrillEntrypointFilterer{contract: contract}}, nil
}

// NewFiredrillEntrypointCaller creates a new read-only instance of FiredrillEntrypoint, bound to a specific deployed contract.
func NewFiredrillEntrypointCaller(address common.Address, caller bind.ContractCaller) (*FiredrillEntrypointCaller, error) {
	contract, err := bindFiredrillEntrypoint(address, caller, nil, nil)
	if err != nil {
		return nil, err
	}
	return &FiredrillEntrypointCaller{contract: contract}, nil
}

// NewFiredrillEntrypointTransactor creates a new write-only instance of FiredrillEntrypoint, bound to a specific deployed contract.
func NewFiredrillEntrypointTransactor(address common.Address, transactor bind.ContractTransactor) (*FiredrillEntrypointTransactor, error) {
	contract, err := bindFiredrillEntrypoint(address, nil, transactor, nil)
	if err != nil {
		return nil, err
	}
	return &FiredrillEntrypointTransactor{contract: contract}, nil
}

// NewFiredrillEntrypointFilterer creates a new log filterer instance of FiredrillEntrypoint, bound to a specific deployed contract.
func NewFiredrillEntrypointFilterer(address common.Address, filterer bind.ContractFilterer) (*FiredrillEntrypointFilterer, error) {
	contract, err := bindFiredrillEntrypoint(address, nil, nil, filterer)
	if err != nil {
		return nil, err
	}
	return &FiredrillEntrypointFilterer{contract: contract}, nil
}

// bindFiredrillEntrypoint binds a generic wrapper to an already deployed contract.
func bindFiredrillEntrypoint(address common.Address, caller bind.ContractCaller, transactor bind.ContractTransactor, filterer bind.ContractFilterer) (*bind.BoundContract, error) {
	parsed, err := FiredrillEntrypointMetaData.GetAbi()
	if err != nil {
		return nil, err
	}
	return bind.NewBoundContract(address, *parsed, caller, transactor, filterer), nil
}

// Call invokes the (constant) contract method with params as input values and
// sets the output to result. The result type might be a single field for simple
// returns, a slice of interfaces for anonymous returns and a struct for named
// returns.
func (_FiredrillEntrypoint *FiredrillEntrypointRaw) Call(opts *bind.CallOpts, result *[]interface{}, method string, params ...interface{}) error {
	return _FiredrillEntrypoint.Contract.FiredrillEntrypointCaller.contract.Call(opts, result, method, params...)
}

// Transfer initiates a plain transaction to move funds to the contract, calling
// its default method if one is available.
func (_FiredrillEntrypoint *FiredrillEntrypointRaw) Transfer(opts *bind.TransactOpts) (*types.Transaction, error) {
	return _FiredrillEntrypoint.Contract.FiredrillEntrypointTransactor.contract.Transfer(opts)
}

// Transact invokes the (paid) contract method with params as input values.
func (_FiredrillEntrypoint *FiredrillEntrypointRaw) Transact(opts *bind.TransactOpts, method string, params ...interface{}) (*types.Transaction, error) {
	return _FiredrillEntrypoint.Contract.FiredrillEntrypointTransactor.contract.Transact(opts, method, params...)
}

// Call invokes the (constant) contract method with params as input values and
// sets the output to result. The result type might be a single field for simple
// returns, a slice of interfaces for anonymous returns and a struct for named
// returns.
func (_FiredrillEntrypoint *FiredrillEntrypointCallerRaw) Call(opts *bind.CallOpts, result *[]interface{}, method string, params ...interface{}) error {
	return _FiredrillEntrypoint.Contract.contract.Call(opts, result, method, params...)
}

// Transfer initiates a plain transaction to move funds to the contract, calling
// its default method if one is available.
func (_FiredrillEntrypoint *FiredrillEntrypointTransactorRaw) Transfer(opts *bind.TransactOpts) (*types.Transaction, error) {
	return _FiredrillEntrypoint.Contract.contract.Transfer(opts)
}

// Transact invokes the (paid) contract method with params as input values.
func (_FiredrillEntrypoint *FiredrillEntrypointTransactorRaw) Transact(opts *bind.TransactOpts, method string, params ...interface{}) (*types.Transaction, error) {
	return _FiredrillEntrypoint.Contract.contract.Transact(opts, method, params...)
}

// ChainSelector is a free data retrieval call binding the contract method 0x4e4bc847.
//
// Solidity: function chainSelector() view returns(uint64)
func (_FiredrillEntrypoint *FiredrillEntrypointCaller) ChainSelector(opts *bind.CallOpts) (uint64, error) {
	var out []interface{}
	err := _FiredrillEntrypoint.contract.Call(opts, &out, "chainSelector")

	if err != nil {
		return *new(uint64), err
	}

	out0 := *abi.ConvertType(out[0], new(uint64)).(*uint64)

	return out0, err

}

// ChainSelector is a free data retrieval call binding the contract method 0x4e4bc847.
//
// Solidity: function chainSelector() view returns(uint64)
func (_FiredrillEntrypoint *FiredrillEntrypointSession) ChainSelector() (uint64, error) {
	return _FiredrillEntrypoint.Contract.ChainSelector(&_FiredrillEntrypoint.CallOpts)
}

// ChainSelector is a free data retrieval call binding the contract method 0x4e4bc847.
//
// Solidity: function chainSelector() view returns(uint64)
func (_FiredrillEntrypoint *FiredrillEntrypointCallerSession) ChainSelector() (uint64, error) {
	return _FiredrillEntrypoint.Contract.ChainSelector(&_FiredrillEntrypoint.CallOpts)
}

// Compound is a free data retrieval call binding the contract method 0xf69e2046.
//
// Solidity: function compound() view returns(address)
func (_FiredrillEntrypoint *FiredrillEntrypointCaller) Compound(opts *bind.CallOpts) (common.Address, error) {
	var out []interface{}
	err := _FiredrillEntrypoint.contract.Call(opts, &out, "compound")

	if err != nil {
		return *new(common.Address), err
	}

	out0 := *abi.ConvertType(out[0], new(common.Address)).(*common.Address)

	return out0, err

}

// Compound is a free data retrieval call binding the contract method 0xf69e2046.
//
// Solidity: function compound() view returns(address)
func (_FiredrillEntrypoint *FiredrillEntrypointSession) Compound() (common.Address, error) {
	return _FiredrillEntrypoint.Contract.Compound(&_FiredrillEntrypoint.CallOpts)
}

// Compound is a free data retrieval call binding the contract method 0xf69e2046.
//
// Solidity: function compound() view returns(address)
func (_FiredrillEntrypoint *FiredrillEntrypointCallerSession) Compound() (common.Address, error) {
	return _FiredrillEntrypoint.Contract.Compound(&_FiredrillEntrypoint.CallOpts)
}

// IsActive is a free data retrieval call binding the contract method 0x22f3e2d4.
//
// Solidity: function isActive() view returns(bool)
func (_FiredrillEntrypoint *FiredrillEntrypointCaller) IsActive(opts *bind.CallOpts) (bool, error) {
	var out []interface{}
	err := _FiredrillEntrypoint.contract.Call(opts, &out, "isActive")

	if err != nil {
		return *new(bool), err
	}

	out0 := *abi.ConvertType(out[0], new(bool)).(*bool)

	return out0, err

}

// IsActive is a free data retrieval call binding the contract method 0x22f3e2d4.
//
// Solidity: function isActive() view returns(bool)
func (_FiredrillEntrypoint *FiredrillEntrypointSession) IsActive() (bool, error) {
	return _FiredrillEntrypoint.Contract.IsActive(&_FiredrillEntrypoint.CallOpts)
}

// IsActive is a free data retrieval call binding the contract method 0x22f3e2d4.
//
// Solidity: function isActive() view returns(bool)
func (_FiredrillEntrypoint *FiredrillEntrypointCallerSession) IsActive() (bool, error) {
	return _FiredrillEntrypoint.Contract.IsActive(&_FiredrillEntrypoint.CallOpts)
}

// OffRamp is a free data retrieval call binding the contract method 0x44671a5d.
//
// Solidity: function offRamp() view returns(address)
func (_FiredrillEntrypoint *FiredrillEntrypointCaller) OffRamp(opts *bind.CallOpts) (common.Address, error) {
	var out []interface{}
	err := _FiredrillEntrypoint.contract.Call(opts, &out, "offRamp")

	if err != nil {
		return *new(common.Address), err
	}

	out0 := *abi.ConvertType(out[0], new(common.Address)).(*common.Address)

	return out0, err

}

// OffRamp is a free data retrieval call binding the contract method 0x44671a5d.
//
// Solidity: function offRamp() view returns(address)
func (_FiredrillEntrypoint *FiredrillEntrypointSession) OffRamp() (common.Address, error) {
	return _FiredrillEntrypoint.Contract.OffRamp(&_FiredrillEntrypoint.CallOpts)
}

// OffRamp is a free data retrieval call binding the contract method 0x44671a5d.
//
// Solidity: function offRamp() view returns(address)
func (_FiredrillEntrypoint *FiredrillEntrypointCallerSession) OffRamp() (common.Address, error) {
	return _FiredrillEntrypoint.Contract.OffRamp(&_FiredrillEntrypoint.CallOpts)
}

// OnRamp is a free data retrieval call binding the contract method 0xc021e73c.
//
// Solidity: function onRamp() view returns(address)
func (_FiredrillEntrypoint *FiredrillEntrypointCaller) OnRamp(opts *bind.CallOpts) (common.Address, error) {
	var out []interface{}
	err := _FiredrillEntrypoint.contract.Call(opts, &out, "onRamp")

	if err != nil {
		return *new(common.Address), err
	}

	out0 := *abi.ConvertType(out[0], new(common.Address)).(*common.Address)

	return out0, err

}

// OnRamp is a free data retrieval call binding the contract method 0xc021e73c.
//
// Solidity: function onRamp() view returns(address)
func (_FiredrillEntrypoint *FiredrillEntrypointSession) OnRamp() (common.Address, error) {
	return _FiredrillEntrypoint.Contract.OnRamp(&_FiredrillEntrypoint.CallOpts)
}

// OnRamp is a free data retrieval call binding the contract method 0xc021e73c.
//
// Solidity: function onRamp() view returns(address)
func (_FiredrillEntrypoint *FiredrillEntrypointCallerSession) OnRamp() (common.Address, error) {
	return _FiredrillEntrypoint.Contract.OnRamp(&_FiredrillEntrypoint.CallOpts)
}

// Owner is a free data retrieval call binding the contract method 0x8da5cb5b.
//
// Solidity: function owner() view returns(address)
func (_FiredrillEntrypoint *FiredrillEntrypointCaller) Owner(opts *bind.CallOpts) (common.Address, error) {
	var out []interface{}
	err := _FiredrillEntrypoint.contract.Call(opts, &out, "owner")

	if err != nil {
		return *new(common.Address), err
	}

	out0 := *abi.ConvertType(out[0], new(common.Address)).(*common.Address)

	return out0, err

}

// Owner is a free data retrieval call binding the contract method 0x8da5cb5b.
//
// Solidity: function owner() view returns(address)
func (_FiredrillEntrypoint *FiredrillEntrypointSession) Owner() (common.Address, error) {
	return _FiredrillEntrypoint.Contract.Owner(&_FiredrillEntrypoint.CallOpts)
}

// Owner is a free data retrieval call binding the contract method 0x8da5cb5b.
//
// Solidity: function owner() view returns(address)
func (_FiredrillEntrypoint *FiredrillEntrypointCallerSession) Owner() (common.Address, error) {
	return _FiredrillEntrypoint.Contract.Owner(&_FiredrillEntrypoint.CallOpts)
}

// PendingOwner is a free data retrieval call binding the contract method 0xe30c3978.
//
// Solidity: function pendingOwner() view returns(address)
func (_FiredrillEntrypoint *FiredrillEntrypointCaller) PendingOwner(opts *bind.CallOpts) (common.Address, error) {
	var out []interface{}
	err := _FiredrillEntrypoint.contract.Call(opts, &out, "pendingOwner")

	if err != nil {
		return *new(common.Address), err
	}

	out0 := *abi.ConvertType(out[0], new(common.Address)).(*common.Address)

	return out0, err

}

// PendingOwner is a free data retrieval call binding the contract method 0xe30c3978.
//
// Solidity: function pendingOwner() view returns(address)
func (_FiredrillEntrypoint *FiredrillEntrypointSession) PendingOwner() (common.Address, error) {
	return _FiredrillEntrypoint.Contract.PendingOwner(&_FiredrillEntrypoint.CallOpts)
}

// PendingOwner is a free data retrieval call binding the contract method 0xe30c3978.
//
// Solidity: function pendingOwner() view returns(address)
func (_FiredrillEntrypoint *FiredrillEntrypointCallerSession) PendingOwner() (common.Address, error) {
	return _FiredrillEntrypoint.Contract.PendingOwner(&_FiredrillEntrypoint.CallOpts)
}

// Receiver is a free data retrieval call binding the contract method 0xf7260d3e.
//
// Solidity: function receiver() view returns(address)
func (_FiredrillEntrypoint *FiredrillEntrypointCaller) Receiver(opts *bind.CallOpts) (common.Address, error) {
	var out []interface{}
	err := _FiredrillEntrypoint.contract.Call(opts, &out, "receiver")

	if err != nil {
		return *new(common.Address), err
	}

	out0 := *abi.ConvertType(out[0], new(common.Address)).(*common.Address)

	return out0, err

}

// Receiver is a free data retrieval call binding the contract method 0xf7260d3e.
//
// Solidity: function receiver() view returns(address)
func (_FiredrillEntrypoint *FiredrillEntrypointSession) Receiver() (common.Address, error) {
	return _FiredrillEntrypoint.Contract.Receiver(&_FiredrillEntrypoint.CallOpts)
}

// Receiver is a free data retrieval call binding the contract method 0xf7260d3e.
//
// Solidity: function receiver() view returns(address)
func (_FiredrillEntrypoint *FiredrillEntrypointCallerSession) Receiver() (common.Address, error) {
	return _FiredrillEntrypoint.Contract.Receiver(&_FiredrillEntrypoint.CallOpts)
}

// Token is a free data retrieval call binding the contract method 0xfc0c546a.
//
// Solidity: function token() view returns(address)
func (_FiredrillEntrypoint *FiredrillEntrypointCaller) Token(opts *bind.CallOpts) (common.Address, error) {
	var out []interface{}
	err := _FiredrillEntrypoint.contract.Call(opts, &out, "token")

	if err != nil {
		return *new(common.Address), err
	}

	out0 := *abi.ConvertType(out[0], new(common.Address)).(*common.Address)

	return out0, err

}

// Token is a free data retrieval call binding the contract method 0xfc0c546a.
//
// Solidity: function token() view returns(address)
func (_FiredrillEntrypoint *FiredrillEntrypointSession) Token() (common.Address, error) {
	return _FiredrillEntrypoint.Contract.Token(&_FiredrillEntrypoint.CallOpts)
}

// Token is a free data retrieval call binding the contract method 0xfc0c546a.
//
// Solidity: function token() view returns(address)
func (_FiredrillEntrypoint *FiredrillEntrypointCallerSession) Token() (common.Address, error) {
	return _FiredrillEntrypoint.Contract.Token(&_FiredrillEntrypoint.CallOpts)
}

// TypeAndVersion is a free data retrieval call binding the contract method 0x181f5a77.
//
// Solidity: function typeAndVersion() pure returns(string)
func (_FiredrillEntrypoint *FiredrillEntrypointCaller) TypeAndVersion(opts *bind.CallOpts) (string, error) {
	var out []interface{}
	err := _FiredrillEntrypoint.contract.Call(opts, &out, "typeAndVersion")

	if err != nil {
		return *new(string), err
	}

	out0 := *abi.ConvertType(out[0], new(string)).(*string)

	return out0, err

}

// TypeAndVersion is a free data retrieval call binding the contract method 0x181f5a77.
//
// Solidity: function typeAndVersion() pure returns(string)
func (_FiredrillEntrypoint *FiredrillEntrypointSession) TypeAndVersion() (string, error) {
	return _FiredrillEntrypoint.Contract.TypeAndVersion(&_FiredrillEntrypoint.CallOpts)
}

// TypeAndVersion is a free data retrieval call binding the contract method 0x181f5a77.
//
// Solidity: function typeAndVersion() pure returns(string)
func (_FiredrillEntrypoint *FiredrillEntrypointCallerSession) TypeAndVersion() (string, error) {
	return _FiredrillEntrypoint.Contract.TypeAndVersion(&_FiredrillEntrypoint.CallOpts)
}

// AcceptOwnership is a paid mutator transaction binding the contract method 0x79ba5097.
//
// Solidity: function acceptOwnership() returns()
func (_FiredrillEntrypoint *FiredrillEntrypointTransactor) AcceptOwnership(opts *bind.TransactOpts) (*types.Transaction, error) {
	return _FiredrillEntrypoint.contract.Transact(opts, "acceptOwnership")
}

// AcceptOwnership is a paid mutator transaction binding the contract method 0x79ba5097.
//
// Solidity: function acceptOwnership() returns()
func (_FiredrillEntrypoint *FiredrillEntrypointSession) AcceptOwnership() (*types.Transaction, error) {
	return _FiredrillEntrypoint.Contract.AcceptOwnership(&_FiredrillEntrypoint.TransactOpts)
}

// AcceptOwnership is a paid mutator transaction binding the contract method 0x79ba5097.
//
// Solidity: function acceptOwnership() returns()
func (_FiredrillEntrypoint *FiredrillEntrypointTransactorSession) AcceptOwnership() (*types.Transaction, error) {
	return _FiredrillEntrypoint.Contract.AcceptOwnership(&_FiredrillEntrypoint.TransactOpts)
}

// Deactivate is a paid mutator transaction binding the contract method 0x51b42b00.
//
// Solidity: function deactivate() returns()
func (_FiredrillEntrypoint *FiredrillEntrypointTransactor) Deactivate(opts *bind.TransactOpts) (*types.Transaction, error) {
	return _FiredrillEntrypoint.contract.Transact(opts, "deactivate")
}

// Deactivate is a paid mutator transaction binding the contract method 0x51b42b00.
//
// Solidity: function deactivate() returns()
func (_FiredrillEntrypoint *FiredrillEntrypointSession) Deactivate() (*types.Transaction, error) {
	return _FiredrillEntrypoint.Contract.Deactivate(&_FiredrillEntrypoint.TransactOpts)
}

// Deactivate is a paid mutator transaction binding the contract method 0x51b42b00.
//
// Solidity: function deactivate() returns()
func (_FiredrillEntrypoint *FiredrillEntrypointTransactorSession) Deactivate() (*types.Transaction, error) {
	return _FiredrillEntrypoint.Contract.Deactivate(&_FiredrillEntrypoint.TransactOpts)
}

// DrillInvalidMessageState is a paid mutator transaction binding the contract method 0xfed325c2.
//
// Solidity: function drill_InvalidMessageState(uint8 from, uint8 to) returns()
func (_FiredrillEntrypoint *FiredrillEntrypointTransactor) DrillInvalidMessageState(opts *bind.TransactOpts, from uint8, to uint8) (*types.Transaction, error) {
	return _FiredrillEntrypoint.contract.Transact(opts, "drill_InvalidMessageState", from, to)
}

// DrillInvalidMessageState is a paid mutator transaction binding the contract method 0xfed325c2.
//
// Solidity: function drill_InvalidMessageState(uint8 from, uint8 to) returns()
func (_FiredrillEntrypoint *FiredrillEntrypointSession) DrillInvalidMessageState(from uint8, to uint8) (*types.Transaction, error) {
	return _FiredrillEntrypoint.Contract.DrillInvalidMessageState(&_FiredrillEntrypoint.TransactOpts, from, to)
}

// DrillInvalidMessageState is a paid mutator transaction binding the contract method 0xfed325c2.
//
// Solidity: function drill_InvalidMessageState(uint8 from, uint8 to) returns()
func (_FiredrillEntrypoint *FiredrillEntrypointTransactorSession) DrillInvalidMessageState(from uint8, to uint8) (*types.Transaction, error) {
	return _FiredrillEntrypoint.Contract.DrillInvalidMessageState(&_FiredrillEntrypoint.TransactOpts, from, to)
}

// DrillPendingBless is a paid mutator transaction binding the contract method 0x13bb5ad0.
//
// Solidity: function drill_PendingBless(uint8 from, uint8 to) returns()
func (_FiredrillEntrypoint *FiredrillEntrypointTransactor) DrillPendingBless(opts *bind.TransactOpts, from uint8, to uint8) (*types.Transaction, error) {
	return _FiredrillEntrypoint.contract.Transact(opts, "drill_PendingBless", from, to)
}

// DrillPendingBless is a paid mutator transaction binding the contract method 0x13bb5ad0.
//
// Solidity: function drill_PendingBless(uint8 from, uint8 to) returns()
func (_FiredrillEntrypoint *FiredrillEntrypointSession) DrillPendingBless(from uint8, to uint8) (*types.Transaction, error) {
	return _FiredrillEntrypoint.Contract.DrillPendingBless(&_FiredrillEntrypoint.TransactOpts, from, to)
}

// DrillPendingBless is a paid mutator transaction binding the contract method 0x13bb5ad0.
//
// Solidity: function drill_PendingBless(uint8 from, uint8 to) returns()
func (_FiredrillEntrypoint *FiredrillEntrypointTransactorSession) DrillPendingBless(from uint8, to uint8) (*types.Transaction, error) {
	return _FiredrillEntrypoint.Contract.DrillPendingBless(&_FiredrillEntrypoint.TransactOpts, from, to)
}

// DrillPendingCommitPendingQueueTxSpike is a paid mutator transaction binding the contract method 0x1fc9cf15.
//
// Solidity: function drill_PendingCommit_PendingQueue_TxSpike(uint8 from, uint8 to) returns()
func (_FiredrillEntrypoint *FiredrillEntrypointTransactor) DrillPendingCommitPendingQueueTxSpike(opts *bind.TransactOpts, from uint8, to uint8) (*types.Transaction, error) {
	return _FiredrillEntrypoint.contract.Transact(opts, "drill_PendingCommit_PendingQueue_TxSpike", from, to)
}

// DrillPendingCommitPendingQueueTxSpike is a paid mutator transaction binding the contract method 0x1fc9cf15.
//
// Solidity: function drill_PendingCommit_PendingQueue_TxSpike(uint8 from, uint8 to) returns()
func (_FiredrillEntrypoint *FiredrillEntrypointSession) DrillPendingCommitPendingQueueTxSpike(from uint8, to uint8) (*types.Transaction, error) {
	return _FiredrillEntrypoint.Contract.DrillPendingCommitPendingQueueTxSpike(&_FiredrillEntrypoint.TransactOpts, from, to)
}

// DrillPendingCommitPendingQueueTxSpike is a paid mutator transaction binding the contract method 0x1fc9cf15.
//
// Solidity: function drill_PendingCommit_PendingQueue_TxSpike(uint8 from, uint8 to) returns()
func (_FiredrillEntrypoint *FiredrillEntrypointTransactorSession) DrillPendingCommitPendingQueueTxSpike(from uint8, to uint8) (*types.Transaction, error) {
	return _FiredrillEntrypoint.Contract.DrillPendingCommitPendingQueueTxSpike(&_FiredrillEntrypoint.TransactOpts, from, to)
}

// DrillPendingExecution is a paid mutator transaction binding the contract method 0x8abfab01.
//
// Solidity: function drill_PendingExecution(uint8 from, uint8 to) returns()
func (_FiredrillEntrypoint *FiredrillEntrypointTransactor) DrillPendingExecution(opts *bind.TransactOpts, from uint8, to uint8) (*types.Transaction, error) {
	return _FiredrillEntrypoint.contract.Transact(opts, "drill_PendingExecution", from, to)
}

// DrillPendingExecution is a paid mutator transaction binding the contract method 0x8abfab01.
//
// Solidity: function drill_PendingExecution(uint8 from, uint8 to) returns()
func (_FiredrillEntrypoint *FiredrillEntrypointSession) DrillPendingExecution(from uint8, to uint8) (*types.Transaction, error) {
	return _FiredrillEntrypoint.Contract.DrillPendingExecution(&_FiredrillEntrypoint.TransactOpts, from, to)
}

// DrillPendingExecution is a paid mutator transaction binding the contract method 0x8abfab01.
//
// Solidity: function drill_PendingExecution(uint8 from, uint8 to) returns()
func (_FiredrillEntrypoint *FiredrillEntrypointTransactorSession) DrillPendingExecution(from uint8, to uint8) (*types.Transaction, error) {
	return _FiredrillEntrypoint.Contract.DrillPendingExecution(&_FiredrillEntrypoint.TransactOpts, from, to)
}

// DrillPriceRegistries is a paid mutator transaction binding the contract method 0xee301c16.
//
// Solidity: function drill_PriceRegistries() returns()
func (_FiredrillEntrypoint *FiredrillEntrypointTransactor) DrillPriceRegistries(opts *bind.TransactOpts) (*types.Transaction, error) {
	return _FiredrillEntrypoint.contract.Transact(opts, "drill_PriceRegistries")
}

// DrillPriceRegistries is a paid mutator transaction binding the contract method 0xee301c16.
//
// Solidity: function drill_PriceRegistries() returns()
func (_FiredrillEntrypoint *FiredrillEntrypointSession) DrillPriceRegistries() (*types.Transaction, error) {
	return _FiredrillEntrypoint.Contract.DrillPriceRegistries(&_FiredrillEntrypoint.TransactOpts)
}

// DrillPriceRegistries is a paid mutator transaction binding the contract method 0xee301c16.
//
// Solidity: function drill_PriceRegistries() returns()
func (_FiredrillEntrypoint *FiredrillEntrypointTransactorSession) DrillPriceRegistries() (*types.Transaction, error) {
	return _FiredrillEntrypoint.Contract.DrillPriceRegistries(&_FiredrillEntrypoint.TransactOpts)
}

// DrillPrivilegedFunctionCalled is a paid mutator transaction binding the contract method 0xc608d674.
//
// Solidity: function drill_PrivilegedFunctionCalled() returns()
func (_FiredrillEntrypoint *FiredrillEntrypointTransactor) DrillPrivilegedFunctionCalled(opts *bind.TransactOpts) (*types.Transaction, error) {
	return _FiredrillEntrypoint.contract.Transact(opts, "drill_PrivilegedFunctionCalled")
}

// DrillPrivilegedFunctionCalled is a paid mutator transaction binding the contract method 0xc608d674.
//
// Solidity: function drill_PrivilegedFunctionCalled() returns()
func (_FiredrillEntrypoint *FiredrillEntrypointSession) DrillPrivilegedFunctionCalled() (*types.Transaction, error) {
	return _FiredrillEntrypoint.Contract.DrillPrivilegedFunctionCalled(&_FiredrillEntrypoint.TransactOpts)
}

// DrillPrivilegedFunctionCalled is a paid mutator transaction binding the contract method 0xc608d674.
//
// Solidity: function drill_PrivilegedFunctionCalled() returns()
func (_FiredrillEntrypoint *FiredrillEntrypointTransactorSession) DrillPrivilegedFunctionCalled() (*types.Transaction, error) {
	return _FiredrillEntrypoint.Contract.DrillPrivilegedFunctionCalled(&_FiredrillEntrypoint.TransactOpts)
}

// DrillRmnCurse is a paid mutator transaction binding the contract method 0xf9d8a517.
//
// Solidity: function drill_RmnCurse() returns()
func (_FiredrillEntrypoint *FiredrillEntrypointTransactor) DrillRmnCurse(opts *bind.TransactOpts) (*types.Transaction, error) {
	return _FiredrillEntrypoint.contract.Transact(opts, "drill_RmnCurse")
}

// DrillRmnCurse is a paid mutator transaction binding the contract method 0xf9d8a517.
//
// Solidity: function drill_RmnCurse() returns()
func (_FiredrillEntrypoint *FiredrillEntrypointSession) DrillRmnCurse() (*types.Transaction, error) {
	return _FiredrillEntrypoint.Contract.DrillRmnCurse(&_FiredrillEntrypoint.TransactOpts)
}

// DrillRmnCurse is a paid mutator transaction binding the contract method 0xf9d8a517.
//
// Solidity: function drill_RmnCurse() returns()
func (_FiredrillEntrypoint *FiredrillEntrypointTransactorSession) DrillRmnCurse() (*types.Transaction, error) {
	return _FiredrillEntrypoint.Contract.DrillRmnCurse(&_FiredrillEntrypoint.TransactOpts)
}

// DrillRmnVotedToCurse is a paid mutator transaction binding the contract method 0x6415175a.
//
// Solidity: function drill_RmnVotedToCurse() returns()
func (_FiredrillEntrypoint *FiredrillEntrypointTransactor) DrillRmnVotedToCurse(opts *bind.TransactOpts) (*types.Transaction, error) {
	return _FiredrillEntrypoint.contract.Transact(opts, "drill_RmnVotedToCurse")
}

// DrillRmnVotedToCurse is a paid mutator transaction binding the contract method 0x6415175a.
//
// Solidity: function drill_RmnVotedToCurse() returns()
func (_FiredrillEntrypoint *FiredrillEntrypointSession) DrillRmnVotedToCurse() (*types.Transaction, error) {
	return _FiredrillEntrypoint.Contract.DrillRmnVotedToCurse(&_FiredrillEntrypoint.TransactOpts)
}

// DrillRmnVotedToCurse is a paid mutator transaction binding the contract method 0x6415175a.
//
// Solidity: function drill_RmnVotedToCurse() returns()
func (_FiredrillEntrypoint *FiredrillEntrypointTransactorSession) DrillRmnVotedToCurse() (*types.Transaction, error) {
	return _FiredrillEntrypoint.Contract.DrillRmnVotedToCurse(&_FiredrillEntrypoint.TransactOpts)
}

// DrillTokenPoolRateLimitInbound is a paid mutator transaction binding the contract method 0x0abaa60d.
//
// Solidity: function drill_TokenPoolRateLimit_Inbound() returns()
func (_FiredrillEntrypoint *FiredrillEntrypointTransactor) DrillTokenPoolRateLimitInbound(opts *bind.TransactOpts) (*types.Transaction, error) {
	return _FiredrillEntrypoint.contract.Transact(opts, "drill_TokenPoolRateLimit_Inbound")
}

// DrillTokenPoolRateLimitInbound is a paid mutator transaction binding the contract method 0x0abaa60d.
//
// Solidity: function drill_TokenPoolRateLimit_Inbound() returns()
func (_FiredrillEntrypoint *FiredrillEntrypointSession) DrillTokenPoolRateLimitInbound() (*types.Transaction, error) {
	return _FiredrillEntrypoint.Contract.DrillTokenPoolRateLimitInbound(&_FiredrillEntrypoint.TransactOpts)
}

// DrillTokenPoolRateLimitInbound is a paid mutator transaction binding the contract method 0x0abaa60d.
//
// Solidity: function drill_TokenPoolRateLimit_Inbound() returns()
func (_FiredrillEntrypoint *FiredrillEntrypointTransactorSession) DrillTokenPoolRateLimitInbound() (*types.Transaction, error) {
	return _FiredrillEntrypoint.Contract.DrillTokenPoolRateLimitInbound(&_FiredrillEntrypoint.TransactOpts)
}

// DrillTokenPoolRateLimitOfframp is a paid mutator transaction binding the contract method 0xda008fc5.
//
// Solidity: function drill_TokenPoolRateLimit_Offramp() returns()
func (_FiredrillEntrypoint *FiredrillEntrypointTransactor) DrillTokenPoolRateLimitOfframp(opts *bind.TransactOpts) (*types.Transaction, error) {
	return _FiredrillEntrypoint.contract.Transact(opts, "drill_TokenPoolRateLimit_Offramp")
}

// DrillTokenPoolRateLimitOfframp is a paid mutator transaction binding the contract method 0xda008fc5.
//
// Solidity: function drill_TokenPoolRateLimit_Offramp() returns()
func (_FiredrillEntrypoint *FiredrillEntrypointSession) DrillTokenPoolRateLimitOfframp() (*types.Transaction, error) {
	return _FiredrillEntrypoint.Contract.DrillTokenPoolRateLimitOfframp(&_FiredrillEntrypoint.TransactOpts)
}

// DrillTokenPoolRateLimitOfframp is a paid mutator transaction binding the contract method 0xda008fc5.
//
// Solidity: function drill_TokenPoolRateLimit_Offramp() returns()
func (_FiredrillEntrypoint *FiredrillEntrypointTransactorSession) DrillTokenPoolRateLimitOfframp() (*types.Transaction, error) {
	return _FiredrillEntrypoint.Contract.DrillTokenPoolRateLimitOfframp(&_FiredrillEntrypoint.TransactOpts)
}

// PrepareRegister is a paid mutator transaction binding the contract method 0xe311a009.
//
// Solidity: function prepare_Register() returns()
func (_FiredrillEntrypoint *FiredrillEntrypointTransactor) PrepareRegister(opts *bind.TransactOpts) (*types.Transaction, error) {
	return _FiredrillEntrypoint.contract.Transact(opts, "prepare_Register")
}

// PrepareRegister is a paid mutator transaction binding the contract method 0xe311a009.
//
// Solidity: function prepare_Register() returns()
func (_FiredrillEntrypoint *FiredrillEntrypointSession) PrepareRegister() (*types.Transaction, error) {
	return _FiredrillEntrypoint.Contract.PrepareRegister(&_FiredrillEntrypoint.TransactOpts)
}

// PrepareRegister is a paid mutator transaction binding the contract method 0xe311a009.
//
// Solidity: function prepare_Register() returns()
func (_FiredrillEntrypoint *FiredrillEntrypointTransactorSession) PrepareRegister() (*types.Transaction, error) {
	return _FiredrillEntrypoint.Contract.PrepareRegister(&_FiredrillEntrypoint.TransactOpts)
}

// RenounceOwnership is a paid mutator transaction binding the contract method 0x715018a6.
//
// Solidity: function renounceOwnership() returns()
func (_FiredrillEntrypoint *FiredrillEntrypointTransactor) RenounceOwnership(opts *bind.TransactOpts) (*types.Transaction, error) {
	return _FiredrillEntrypoint.contract.Transact(opts, "renounceOwnership")
}

// RenounceOwnership is a paid mutator transaction binding the contract method 0x715018a6.
//
// Solidity: function renounceOwnership() returns()
func (_FiredrillEntrypoint *FiredrillEntrypointSession) RenounceOwnership() (*types.Transaction, error) {
	return _FiredrillEntrypoint.Contract.RenounceOwnership(&_FiredrillEntrypoint.TransactOpts)
}

// RenounceOwnership is a paid mutator transaction binding the contract method 0x715018a6.
//
// Solidity: function renounceOwnership() returns()
func (_FiredrillEntrypoint *FiredrillEntrypointTransactorSession) RenounceOwnership() (*types.Transaction, error) {
	return _FiredrillEntrypoint.Contract.RenounceOwnership(&_FiredrillEntrypoint.TransactOpts)
}

// TransferOwnership is a paid mutator transaction binding the contract method 0xf2fde38b.
//
// Solidity: function transferOwnership(address newOwner) returns()
func (_FiredrillEntrypoint *FiredrillEntrypointTransactor) TransferOwnership(opts *bind.TransactOpts, newOwner common.Address) (*types.Transaction, error) {
	return _FiredrillEntrypoint.contract.Transact(opts, "transferOwnership", newOwner)
}

// TransferOwnership is a paid mutator transaction binding the contract method 0xf2fde38b.
//
// Solidity: function transferOwnership(address newOwner) returns()
func (_FiredrillEntrypoint *FiredrillEntrypointSession) TransferOwnership(newOwner common.Address) (*types.Transaction, error) {
	return _FiredrillEntrypoint.Contract.TransferOwnership(&_FiredrillEntrypoint.TransactOpts, newOwner)
}

// TransferOwnership is a paid mutator transaction binding the contract method 0xf2fde38b.
//
// Solidity: function transferOwnership(address newOwner) returns()
func (_FiredrillEntrypoint *FiredrillEntrypointTransactorSession) TransferOwnership(newOwner common.Address) (*types.Transaction, error) {
	return _FiredrillEntrypoint.Contract.TransferOwnership(&_FiredrillEntrypoint.TransactOpts, newOwner)
}

// FiredrillEntrypointOwnershipTransferStartedIterator is returned from FilterOwnershipTransferStarted and is used to iterate over the raw logs and unpacked data for OwnershipTransferStarted events raised by the FiredrillEntrypoint contract.
type FiredrillEntrypointOwnershipTransferStartedIterator struct {
	Event *FiredrillEntrypointOwnershipTransferStarted // Event containing the contract specifics and raw log

	contract *bind.BoundContract // Generic contract to use for unpacking event data
	event    string              // Event name to use for unpacking event data

	logs chan types.Log        // Log channel receiving the found contract events
	sub  ethereum.Subscription // Subscription for errors, completion and termination
	done bool                  // Whether the subscription completed delivering logs
	fail error                 // Occurred error to stop iteration
}

// Next advances the iterator to the subsequent event, returning whether there
// are any more events found. In case of a retrieval or parsing error, false is
// returned and Error() can be queried for the exact failure.
func (it *FiredrillEntrypointOwnershipTransferStartedIterator) Next() bool {
	// If the iterator failed, stop iterating
	if it.fail != nil {
		return false
	}
	// If the iterator completed, deliver directly whatever's available
	if it.done {
		select {
		case log := <-it.logs:
			it.Event = new(FiredrillEntrypointOwnershipTransferStarted)
			if err := it.contract.UnpackLog(it.Event, it.event, log); err != nil {
				it.fail = err
				return false
			}
			it.Event.Raw = log
			return true

		default:
			return false
		}
	}
	// Iterator still in progress, wait for either a data or an error event
	select {
	case log := <-it.logs:
		it.Event = new(FiredrillEntrypointOwnershipTransferStarted)
		if err := it.contract.UnpackLog(it.Event, it.event, log); err != nil {
			it.fail = err
			return false
		}
		it.Event.Raw = log
		return true

	case err := <-it.sub.Err():
		it.done = true
		it.fail = err
		return it.Next()
	}
}

// Error returns any retrieval or parsing error occurred during filtering.
func (it *FiredrillEntrypointOwnershipTransferStartedIterator) Error() error {
	return it.fail
}

// Close terminates the iteration process, releasing any pending underlying
// resources.
func (it *FiredrillEntrypointOwnershipTransferStartedIterator) Close() error {
	it.sub.Unsubscribe()
	return nil
}

// FiredrillEntrypointOwnershipTransferStarted represents a OwnershipTransferStarted event raised by the FiredrillEntrypoint contract.
type FiredrillEntrypointOwnershipTransferStarted struct {
	PreviousOwner common.Address
	NewOwner      common.Address
	Raw           types.Log // Blockchain specific contextual infos
}

// FilterOwnershipTransferStarted is a free log retrieval operation binding the contract event 0x38d16b8cac22d99fc7c124b9cd0de2d3fa1faef420bfe791d8c362d765e22700.
//
// Solidity: event OwnershipTransferStarted(address indexed previousOwner, address indexed newOwner)
func (_FiredrillEntrypoint *FiredrillEntrypointFilterer) FilterOwnershipTransferStarted(opts *bind.FilterOpts, previousOwner []common.Address, newOwner []common.Address) (*FiredrillEntrypointOwnershipTransferStartedIterator, error) {

	var previousOwnerRule []interface{}
	for _, previousOwnerItem := range previousOwner {
		previousOwnerRule = append(previousOwnerRule, previousOwnerItem)
	}
	var newOwnerRule []interface{}
	for _, newOwnerItem := range newOwner {
		newOwnerRule = append(newOwnerRule, newOwnerItem)
	}

	logs, sub, err := _FiredrillEntrypoint.contract.FilterLogs(opts, "OwnershipTransferStarted", previousOwnerRule, newOwnerRule)
	if err != nil {
		return nil, err
	}
	return &FiredrillEntrypointOwnershipTransferStartedIterator{contract: _FiredrillEntrypoint.contract, event: "OwnershipTransferStarted", logs: logs, sub: sub}, nil
}

// WatchOwnershipTransferStarted is a free log subscription operation binding the contract event 0x38d16b8cac22d99fc7c124b9cd0de2d3fa1faef420bfe791d8c362d765e22700.
//
// Solidity: event OwnershipTransferStarted(address indexed previousOwner, address indexed newOwner)
func (_FiredrillEntrypoint *FiredrillEntrypointFilterer) WatchOwnershipTransferStarted(opts *bind.WatchOpts, sink chan<- *FiredrillEntrypointOwnershipTransferStarted, previousOwner []common.Address, newOwner []common.Address) (event.Subscription, error) {

	var previousOwnerRule []interface{}
	for _, previousOwnerItem := range previousOwner {
		previousOwnerRule = append(previousOwnerRule, previousOwnerItem)
	}
	var newOwnerRule []interface{}
	for _, newOwnerItem := range newOwner {
		newOwnerRule = append(newOwnerRule, newOwnerItem)
	}

	logs, sub, err := _FiredrillEntrypoint.contract.WatchLogs(opts, "OwnershipTransferStarted", previousOwnerRule, newOwnerRule)
	if err != nil {
		return nil, err
	}
	return event.NewSubscription(func(quit <-chan struct{}) error {
		defer sub.Unsubscribe()
		for {
			select {
			case log := <-logs:
				// New log arrived, parse the event and forward to the user
				event := new(FiredrillEntrypointOwnershipTransferStarted)
				if err := _FiredrillEntrypoint.contract.UnpackLog(event, "OwnershipTransferStarted", log); err != nil {
					return err
				}
				event.Raw = log

				select {
				case sink <- event:
				case err := <-sub.Err():
					return err
				case <-quit:
					return nil
				}
			case err := <-sub.Err():
				return err
			case <-quit:
				return nil
			}
		}
	}), nil
}

// ParseOwnershipTransferStarted is a log parse operation binding the contract event 0x38d16b8cac22d99fc7c124b9cd0de2d3fa1faef420bfe791d8c362d765e22700.
//
// Solidity: event OwnershipTransferStarted(address indexed previousOwner, address indexed newOwner)
func (_FiredrillEntrypoint *FiredrillEntrypointFilterer) ParseOwnershipTransferStarted(log types.Log) (*FiredrillEntrypointOwnershipTransferStarted, error) {
	event := new(FiredrillEntrypointOwnershipTransferStarted)
	if err := _FiredrillEntrypoint.contract.UnpackLog(event, "OwnershipTransferStarted", log); err != nil {
		return nil, err
	}
	event.Raw = log
	return event, nil
}

// FiredrillEntrypointOwnershipTransferredIterator is returned from FilterOwnershipTransferred and is used to iterate over the raw logs and unpacked data for OwnershipTransferred events raised by the FiredrillEntrypoint contract.
type FiredrillEntrypointOwnershipTransferredIterator struct {
	Event *FiredrillEntrypointOwnershipTransferred // Event containing the contract specifics and raw log

	contract *bind.BoundContract // Generic contract to use for unpacking event data
	event    string              // Event name to use for unpacking event data

	logs chan types.Log        // Log channel receiving the found contract events
	sub  ethereum.Subscription // Subscription for errors, completion and termination
	done bool                  // Whether the subscription completed delivering logs
	fail error                 // Occurred error to stop iteration
}

// Next advances the iterator to the subsequent event, returning whether there
// are any more events found. In case of a retrieval or parsing error, false is
// returned and Error() can be queried for the exact failure.
func (it *FiredrillEntrypointOwnershipTransferredIterator) Next() bool {
	// If the iterator failed, stop iterating
	if it.fail != nil {
		return false
	}
	// If the iterator completed, deliver directly whatever's available
	if it.done {
		select {
		case log := <-it.logs:
			it.Event = new(FiredrillEntrypointOwnershipTransferred)
			if err := it.contract.UnpackLog(it.Event, it.event, log); err != nil {
				it.fail = err
				return false
			}
			it.Event.Raw = log
			return true

		default:
			return false
		}
	}
	// Iterator still in progress, wait for either a data or an error event
	select {
	case log := <-it.logs:
		it.Event = new(FiredrillEntrypointOwnershipTransferred)
		if err := it.contract.UnpackLog(it.Event, it.event, log); err != nil {
			it.fail = err
			return false
		}
		it.Event.Raw = log
		return true

	case err := <-it.sub.Err():
		it.done = true
		it.fail = err
		return it.Next()
	}
}

// Error returns any retrieval or parsing error occurred during filtering.
func (it *FiredrillEntrypointOwnershipTransferredIterator) Error() error {
	return it.fail
}

// Close terminates the iteration process, releasing any pending underlying
// resources.
func (it *FiredrillEntrypointOwnershipTransferredIterator) Close() error {
	it.sub.Unsubscribe()
	return nil
}

// FiredrillEntrypointOwnershipTransferred represents a OwnershipTransferred event raised by the FiredrillEntrypoint contract.
type FiredrillEntrypointOwnershipTransferred struct {
	PreviousOwner common.Address
	NewOwner      common.Address
	Raw           types.Log // Blockchain specific contextual infos
}

// FilterOwnershipTransferred is a free log retrieval operation binding the contract event 0x8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0.
//
// Solidity: event OwnershipTransferred(address indexed previousOwner, address indexed newOwner)
func (_FiredrillEntrypoint *FiredrillEntrypointFilterer) FilterOwnershipTransferred(opts *bind.FilterOpts, previousOwner []common.Address, newOwner []common.Address) (*FiredrillEntrypointOwnershipTransferredIterator, error) {

	var previousOwnerRule []interface{}
	for _, previousOwnerItem := range previousOwner {
		previousOwnerRule = append(previousOwnerRule, previousOwnerItem)
	}
	var newOwnerRule []interface{}
	for _, newOwnerItem := range newOwner {
		newOwnerRule = append(newOwnerRule, newOwnerItem)
	}

	logs, sub, err := _FiredrillEntrypoint.contract.FilterLogs(opts, "OwnershipTransferred", previousOwnerRule, newOwnerRule)
	if err != nil {
		return nil, err
	}
	return &FiredrillEntrypointOwnershipTransferredIterator{contract: _FiredrillEntrypoint.contract, event: "OwnershipTransferred", logs: logs, sub: sub}, nil
}

// WatchOwnershipTransferred is a free log subscription operation binding the contract event 0x8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0.
//
// Solidity: event OwnershipTransferred(address indexed previousOwner, address indexed newOwner)
func (_FiredrillEntrypoint *FiredrillEntrypointFilterer) WatchOwnershipTransferred(opts *bind.WatchOpts, sink chan<- *FiredrillEntrypointOwnershipTransferred, previousOwner []common.Address, newOwner []common.Address) (event.Subscription, error) {

	var previousOwnerRule []interface{}
	for _, previousOwnerItem := range previousOwner {
		previousOwnerRule = append(previousOwnerRule, previousOwnerItem)
	}
	var newOwnerRule []interface{}
	for _, newOwnerItem := range newOwner {
		newOwnerRule = append(newOwnerRule, newOwnerItem)
	}

	logs, sub, err := _FiredrillEntrypoint.contract.WatchLogs(opts, "OwnershipTransferred", previousOwnerRule, newOwnerRule)
	if err != nil {
		return nil, err
	}
	return event.NewSubscription(func(quit <-chan struct{}) error {
		defer sub.Unsubscribe()
		for {
			select {
			case log := <-logs:
				// New log arrived, parse the event and forward to the user
				event := new(FiredrillEntrypointOwnershipTransferred)
				if err := _FiredrillEntrypoint.contract.UnpackLog(event, "OwnershipTransferred", log); err != nil {
					return err
				}
				event.Raw = log

				select {
				case sink <- event:
				case err := <-sub.Err():
					return err
				case <-quit:
					return nil
				}
			case err := <-sub.Err():
				return err
			case <-quit:
				return nil
			}
		}
	}), nil
}

// ParseOwnershipTransferred is a log parse operation binding the contract event 0x8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0.
//
// Solidity: event OwnershipTransferred(address indexed previousOwner, address indexed newOwner)
func (_FiredrillEntrypoint *FiredrillEntrypointFilterer) ParseOwnershipTransferred(log types.Log) (*FiredrillEntrypointOwnershipTransferred, error) {
	event := new(FiredrillEntrypointOwnershipTransferred)
	if err := _FiredrillEntrypoint.contract.UnpackLog(event, "OwnershipTransferred", log); err != nil {
		return nil, err
	}
	event.Raw = log
	return event, nil
}

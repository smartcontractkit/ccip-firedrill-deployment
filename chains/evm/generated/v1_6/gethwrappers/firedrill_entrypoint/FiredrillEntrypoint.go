// Code generated - DO NOT EDIT.
// This file is a generated binding and any manual changes will be lost.

package firedrill_entrypoint

import (
	"errors"
	"math/big"
	"strings"

	ethereum "github.com/ethereum/go-ethereum"
	"github.com/ethereum/go-ethereum/accounts/abi"
	"github.com/ethereum/go-ethereum/accounts/abi/bind"
	"github.com/ethereum/go-ethereum/common"
	"github.com/ethereum/go-ethereum/core/types"
	"github.com/ethereum/go-ethereum/event"
)

// Reference imports to suppress errors if they are not otherwise used.
var (
	_ = errors.New
	_ = big.NewInt
	_ = strings.NewReader
	_ = ethereum.NotFound
	_ = bind.Bind
	_ = common.Big1
	_ = types.BloomLookup
	_ = event.NewSubscription
	_ = abi.ConvertType
)

// FiredrillCompoundOffRamp is an auto generated low-level Go binding around an user-defined struct.
type FiredrillCompoundOffRamp struct {
	SourceChainSelector uint64
	OffRamp             common.Address
}

// FiredrillCompoundStaticConfig is an auto generated low-level Go binding around an user-defined struct.
type FiredrillCompoundStaticConfig struct {
	MaxFeeJuelsPerMsg            *big.Int
	LinkToken                    common.Address
	TokenPriceStalenessThreshold uint32
}

// FiredrillEntrypointMetaData contains all meta data concerning the FiredrillEntrypoint contract.
var FiredrillEntrypointMetaData = &bind.MetaData{
	ABI: "[{\"type\":\"constructor\",\"inputs\":[{\"name\":\"chainSelector\",\"type\":\"uint64\",\"internalType\":\"uint64\"}],\"stateMutability\":\"nonpayable\"},{\"type\":\"function\",\"name\":\"acceptOwnership\",\"inputs\":[],\"outputs\":[],\"stateMutability\":\"nonpayable\"},{\"type\":\"function\",\"name\":\"chainSelector\",\"inputs\":[],\"outputs\":[{\"name\":\"\",\"type\":\"uint64\",\"internalType\":\"uint64\"}],\"stateMutability\":\"view\"},{\"type\":\"function\",\"name\":\"drill_PendingCommit_PendingQueue_TxSpike\",\"inputs\":[{\"name\":\"from\",\"type\":\"uint8\",\"internalType\":\"uint8\"},{\"name\":\"to\",\"type\":\"uint8\",\"internalType\":\"uint8\"}],\"outputs\":[],\"stateMutability\":\"nonpayable\"},{\"type\":\"function\",\"name\":\"drill_PendingExecution\",\"inputs\":[{\"name\":\"from\",\"type\":\"uint8\",\"internalType\":\"uint8\"},{\"name\":\"to\",\"type\":\"uint8\",\"internalType\":\"uint8\"}],\"outputs\":[],\"stateMutability\":\"nonpayable\"},{\"type\":\"function\",\"name\":\"drill_PriceRegistries\",\"inputs\":[],\"outputs\":[],\"stateMutability\":\"nonpayable\"},{\"type\":\"function\",\"name\":\"emitUsdPerTokenUpdated\",\"inputs\":[],\"outputs\":[],\"stateMutability\":\"nonpayable\"},{\"type\":\"function\",\"name\":\"getARM\",\"inputs\":[],\"outputs\":[{\"name\":\"\",\"type\":\"address\",\"internalType\":\"address\"}],\"stateMutability\":\"view\"},{\"type\":\"function\",\"name\":\"getOffRamps\",\"inputs\":[],\"outputs\":[{\"name\":\"\",\"type\":\"tuple[]\",\"internalType\":\"structFiredrillCompound.OffRamp[]\",\"components\":[{\"name\":\"sourceChainSelector\",\"type\":\"uint64\",\"internalType\":\"uint64\"},{\"name\":\"offRamp\",\"type\":\"address\",\"internalType\":\"address\"}]}],\"stateMutability\":\"view\"},{\"type\":\"function\",\"name\":\"getOnRamp\",\"inputs\":[{\"name\":\"\",\"type\":\"uint64\",\"internalType\":\"uint64\"}],\"outputs\":[{\"name\":\"\",\"type\":\"address\",\"internalType\":\"address\"}],\"stateMutability\":\"view\"},{\"type\":\"function\",\"name\":\"getStaticConfig\",\"inputs\":[],\"outputs\":[{\"name\":\"\",\"type\":\"tuple\",\"internalType\":\"structFiredrillCompound.StaticConfig\",\"components\":[{\"name\":\"maxFeeJuelsPerMsg\",\"type\":\"uint96\",\"internalType\":\"uint96\"},{\"name\":\"linkToken\",\"type\":\"address\",\"internalType\":\"address\"},{\"name\":\"tokenPriceStalenessThreshold\",\"type\":\"uint32\",\"internalType\":\"uint32\"}]}],\"stateMutability\":\"view\"},{\"type\":\"function\",\"name\":\"offRamp\",\"inputs\":[],\"outputs\":[{\"name\":\"\",\"type\":\"address\",\"internalType\":\"address\"}],\"stateMutability\":\"view\"},{\"type\":\"function\",\"name\":\"onRamp\",\"inputs\":[],\"outputs\":[{\"name\":\"\",\"type\":\"address\",\"internalType\":\"address\"}],\"stateMutability\":\"view\"},{\"type\":\"function\",\"name\":\"owner\",\"inputs\":[],\"outputs\":[{\"name\":\"\",\"type\":\"address\",\"internalType\":\"address\"}],\"stateMutability\":\"view\"},{\"type\":\"function\",\"name\":\"pendingOwner\",\"inputs\":[],\"outputs\":[{\"name\":\"\",\"type\":\"address\",\"internalType\":\"address\"}],\"stateMutability\":\"view\"},{\"type\":\"function\",\"name\":\"prepare_Register\",\"inputs\":[],\"outputs\":[],\"stateMutability\":\"nonpayable\"},{\"type\":\"function\",\"name\":\"receiver\",\"inputs\":[],\"outputs\":[{\"name\":\"\",\"type\":\"address\",\"internalType\":\"address\"}],\"stateMutability\":\"view\"},{\"type\":\"function\",\"name\":\"renounceOwnership\",\"inputs\":[],\"outputs\":[],\"stateMutability\":\"nonpayable\"},{\"type\":\"function\",\"name\":\"token\",\"inputs\":[],\"outputs\":[{\"name\":\"\",\"type\":\"address\",\"internalType\":\"address\"}],\"stateMutability\":\"view\"},{\"type\":\"function\",\"name\":\"transferOwnership\",\"inputs\":[{\"name\":\"newOwner\",\"type\":\"address\",\"internalType\":\"address\"}],\"outputs\":[],\"stateMutability\":\"nonpayable\"},{\"type\":\"function\",\"name\":\"typeAndVersion\",\"inputs\":[],\"outputs\":[{\"name\":\"\",\"type\":\"string\",\"internalType\":\"string\"}],\"stateMutability\":\"pure\"},{\"type\":\"event\",\"name\":\"OwnershipTransferStarted\",\"inputs\":[{\"name\":\"previousOwner\",\"type\":\"address\",\"indexed\":true,\"internalType\":\"address\"},{\"name\":\"newOwner\",\"type\":\"address\",\"indexed\":true,\"internalType\":\"address\"}],\"anonymous\":false},{\"type\":\"event\",\"name\":\"OwnershipTransferred\",\"inputs\":[{\"name\":\"previousOwner\",\"type\":\"address\",\"indexed\":true,\"internalType\":\"address\"},{\"name\":\"newOwner\",\"type\":\"address\",\"indexed\":true,\"internalType\":\"address\"}],\"anonymous\":false},{\"type\":\"event\",\"name\":\"UsdPerTokenUpdated\",\"inputs\":[{\"name\":\"token\",\"type\":\"address\",\"indexed\":true,\"internalType\":\"address\"},{\"name\":\"value\",\"type\":\"uint256\",\"indexed\":false,\"internalType\":\"uint256\"},{\"name\":\"timestamp\",\"type\":\"uint256\",\"indexed\":false,\"internalType\":\"uint256\"}],\"anonymous\":false},{\"type\":\"error\",\"name\":\"OwnableInvalidOwner\",\"inputs\":[{\"name\":\"owner\",\"type\":\"address\",\"internalType\":\"address\"}]},{\"type\":\"error\",\"name\":\"OwnableUnauthorizedAccount\",\"inputs\":[{\"name\":\"account\",\"type\":\"address\",\"internalType\":\"address\"}]}]",
	Bin: "0x61012060405234801562000011575f80fd5b50604051620040ac380380620040ac83398101604081905262000034916200021b565b8033806200005b57604051631e4fbdf760e01b81525f600482015260240160405180910390fd5b620000668162000176565b506001600160401b0381166080526040516200008290620001e3565b604051809103905ff0801580156200009c573d5f803e3d5ffd5b506001600160a01b031660a0526040513090620000b990620001f1565b6001600160a01b039091168152602001604051809103905ff080158015620000e3573d5f803e3d5ffd5b506001600160a01b031660c05260405130906200010090620001ff565b6001600160a01b039091168152602001604051809103905ff0801580156200012a573d5f803e3d5ffd5b506001600160a01b031660e05260405162000145906200020d565b604051809103905ff0801580156200015f573d5f803e3d5ffd5b506001600160a01b031661010052506200024a9050565b600180546001600160a01b0319169055620001918162000194565b50565b5f80546001600160a01b038381166001600160a01b0319831681178455604051919092169283917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e09190a35050565b6104458062000dfd83390190565b610e26806200124283390190565b611062806200206883390190565b610fe280620030ca83390190565b5f602082840312156200022c575f80fd5b81516001600160401b038116811462000243575f80fd5b9392505050565b60805160a05160c05160e05161010051610b3d620002c05f395f61036f01525f818161023c015281816106c4015281816107a601526107fd01525f81816102f10152818161031501526104a801525f818161015d01528181610395015261055a01525f818161026e01526107760152610b3d5ff3fe608060405234801561000f575f80fd5b5060043610610127575f3560e01c80638da5cb5b116100a9578063e311a0091161006e578063e311a0091461034a578063ee301c1614610352578063f2fde38b1461035a578063f7260d3e1461036d578063fc0c546a14610393575f80fd5b80638da5cb5b146102bb578063a40e69c7146102cb578063a8d87a3b146102e0578063c021e73c14610313578063e30c397814610339575f80fd5b806344671a5d116100ef57806344671a5d1461023a5780634e4bc84714610260578063715018a61461029857806379ba5097146102a05780638abfab01146102a8575f80fd5b806306285c691461012b578063181f5a77146101cc5780631fc9cf151461020357806320f938b6146102185780632e90aa2114610220575b5f80fd5b60408051606080820183525f808352602080840182905292840181905283519182018452600182526001600160a01b037f00000000000000000000000000000000000000000000000000000000000000001692820192909252918201526040805182516bffffffffffffffffffffffff1681526020808401516001600160a01b0316908201529181015163ffffffff16908201526060015b60405180910390f35b60408051808201825260158152740526f7574657246656551756f74657220312e362e3605c1b602082015290516101c3919061097a565b6102166102113660046109db565b6103b9565b005b610216610542565b305b6040516001600160a01b0390911681526020016101c3565b7f0000000000000000000000000000000000000000000000000000000000000000610222565b60405167ffffffffffffffff7f00000000000000000000000000000000000000000000000000000000000000001681526020016101c3565b6102166105a8565b6102166105bb565b6102166102b63660046109db565b6105ff565b5f546001600160a01b0316610222565b6102d3610727565b6040516101c39190610a0c565b6102226102ee366004610a6d565b507f000000000000000000000000000000000000000000000000000000000000000090565b7f0000000000000000000000000000000000000000000000000000000000000000610222565b6001546001600160a01b0316610222565b6102166107f3565b61021661086b565b610216610368366004610a9b565b61087b565b7f0000000000000000000000000000000000000000000000000000000000000000610222565b7f0000000000000000000000000000000000000000000000000000000000000000610222565b6103c16108eb565b8060ff168260ff16111561040e5760405162461bcd60e51b815260206004820152600f60248201526e1b9bdd1a1a5b99c81d1bc81cd95b99608a1b60448201526064015b60405180910390fd5b600154600160a01b900467ffffffffffffffff1660ff83161161046a5760405162461bcd60e51b81526020600482015260146024820152731b595cdcd859d948185b1c9958591e481cd95b9d60621b6044820152606401610405565b60ff82165b8160ff168167ffffffffffffffff161161051a5760405163f47d2ea760e01b815233600482015267ffffffffffffffff821660248201527f00000000000000000000000000000000000000000000000000000000000000006001600160a01b03169063f47d2ea7906044015f604051808303815f87803b1580156104f1575f80fd5b505af1158015610503573d5f803e3d5ffd5b50505050808061051290610ac1565b91505061046f565b506001805467ffffffffffffffff60a01b191660ff92909216600160a01b0291909117905550565b60408051600181524260208201526001600160a01b037f000000000000000000000000000000000000000000000000000000000000000016917f52f50aa6d1a95a4595361ecf953d095f125d442e4673716dede699e049de148a910160405180910390a2565b6105b06108eb565b6105b95f610917565b565b60015433906001600160a01b031681146105f35760405163118cdaa760e01b81526001600160a01b0382166004820152602401610405565b6105fc81610917565b50565b6106076108eb565b8060ff168260ff16111561064f5760405162461bcd60e51b815260206004820152600f60248201526e1b9bdd1a1a5b99c81d1bc81cd95b99608a1b6044820152606401610405565b600154600160a01b900467ffffffffffffffff1660ff821611156106a45760405162461bcd60e51b815260206004820152600c60248201526b1b9bdd081e595d081cd95b9d60a21b6044820152606401610405565b604051638e73139f60e01b815260ff8084166004830152821660248201527f00000000000000000000000000000000000000000000000000000000000000006001600160a01b031690638e73139f906044015f604051808303815f87803b15801561070d575f80fd5b505af115801561071f573d5f803e3d5ffd5b505050505050565b6040805160018082528183019092526060915f9190816020015b604080518082019091525f808252602082015281526020019060019003908161074157905050905060405180604001604052807f000000000000000000000000000000000000000000000000000000000000000067ffffffffffffffff1681526020017f00000000000000000000000000000000000000000000000000000000000000006001600160a01b0316815250815f815181106107e3576107e3610af3565b6020908102919091010152919050565b6107fb6108eb565b7f00000000000000000000000000000000000000000000000000000000000000006001600160a01b03166382c9978c6040518163ffffffff1660e01b81526004015f604051808303815f87803b158015610853575f80fd5b505af1158015610865573d5f803e3d5ffd5b50505050565b6108736108eb565b6105b9610542565b6108836108eb565b600180546001600160a01b0383166001600160a01b031990911681179091556108b35f546001600160a01b031690565b6001600160a01b03167f38d16b8cac22d99fc7c124b9cd0de2d3fa1faef420bfe791d8c362d765e2270060405160405180910390a350565b5f546001600160a01b031633146105b95760405163118cdaa760e01b8152336004820152602401610405565b600180546001600160a01b03191690556105fc815f80546001600160a01b038381166001600160a01b0319831681178455604051919092169283917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e09190a35050565b5f602080835283518060208501525f5b818110156109a65785810183015185820160400152820161098a565b505f604082860101526040601f19601f8301168501019250505092915050565b803560ff811681146109d6575f80fd5b919050565b5f80604083850312156109ec575f80fd5b6109f5836109c6565b9150610a03602084016109c6565b90509250929050565b602080825282518282018190525f919060409081850190868401855b82811015610a60578151805167ffffffffffffffff1685528601516001600160a01b0316868501529284019290850190600101610a28565b5091979650505050505050565b5f60208284031215610a7d575f80fd5b813567ffffffffffffffff81168114610a94575f80fd5b9392505050565b5f60208284031215610aab575f80fd5b81356001600160a01b0381168114610a94575f80fd5b5f67ffffffffffffffff808316818103610ae957634e487b7160e01b5f52601160045260245ffd5b6001019392505050565b634e487b7160e01b5f52603260045260245ffdfea26469706673582212206c5778c4d026363f5b53269a9d2645b1893013c288794ecb507460f3d55716ac64736f6c63430008180033608060405234801561000f575f80fd5b50338061003557604051631e4fbdf760e01b81525f600482015260240160405180910390fd5b61003e81610044565b506100af565b600180546001600160a01b031916905561005d81610060565b50565b5f80546001600160a01b038381166001600160a01b0319831681178455604051919092169283917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e09190a35050565b610389806100bc5f395ff3fe608060405234801561000f575f80fd5b5060043610610090575f3560e01c806379ba50971161006357806379ba50971461010f5780638da5cb5b1461011757806395d89b411461013b578063e30c39781461015b578063f2fde38b1461016c575f80fd5b8063181f5a7714610094578063313ce567146100d657806370a08231146100e4578063715018a614610105575b5f80fd5b6040805180820190915260148152730466972656472696c6c546f6b656e20312e302e360641b60208201525b6040516100cd91906102da565b60405180910390f35b6040515f81526020016100cd565b6100f76100f2366004610326565b505f90565b6040519081526020016100cd565b61010d61017f565b005b61010d610192565b5f546001600160a01b03165b6040516001600160a01b0390911681526020016100cd565b6040805180820190915260048152634c494e4b60e01b60208201526100c0565b6001546001600160a01b0316610123565b61010d61017a366004610326565b6101db565b61018761024b565b6101905f610277565b565b60015433906001600160a01b031681146101cf5760405163118cdaa760e01b81526001600160a01b03821660048201526024015b60405180910390fd5b6101d881610277565b50565b6101e361024b565b600180546001600160a01b0383166001600160a01b031990911681179091556102135f546001600160a01b031690565b6001600160a01b03167f38d16b8cac22d99fc7c124b9cd0de2d3fa1faef420bfe791d8c362d765e2270060405160405180910390a350565b5f546001600160a01b031633146101905760405163118cdaa760e01b81523360048201526024016101c6565b600180546001600160a01b03191690556101d8815f80546001600160a01b038381166001600160a01b0319831681178455604051919092169283917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e09190a35050565b5f602080835283518060208501525f5b81811015610306578581018301518582016040015282016102ea565b505f604082860101526040601f19601f8301168501019250505092915050565b5f60208284031215610336575f80fd5b81356001600160a01b038116811461034c575f80fd5b939250505056fea26469706673582212205963b7740f00dee7a252bcd6ac49448585dcca6e15d4b7c1c2df8e71c713a4b164736f6c6343000818003360a060405234801561000f575f80fd5b50604051610e26380380610e2683398101604081905261002e916100d9565b338061005357604051631e4fbdf760e01b81525f600482015260240160405180910390fd5b61005c8161006e565b506001600160a01b0316608052610106565b600180546001600160a01b03191690556100878161008a565b50565b5f80546001600160a01b038381166001600160a01b0319831681178455604051919092169283917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e09190a35050565b5f602082840312156100e9575f80fd5b81516001600160a01b03811681146100ff575f80fd5b9392505050565b608051610cd06101565f395f8181610141015281816101de0152818161030101528181610395015281816104a501528181610567015281816105f60152818161070601526108340152610cd05ff3fe608060405234801561000f575f80fd5b506004361061009b575f3560e01c806379ba50971161006357806379ba50971461026e5780638da5cb5b14610276578063e30c39781461029a578063f2fde38b146102ab578063f47d2ea7146102be575f80fd5b806306285c691461009f578063181f5a77146100fe5780636def4ce71461012c578063715018a6146101925780637437ff9f1461019c575b5f80fd5b6100a76102d1565b6040516100f59190815167ffffffffffffffff1681526020808301516001600160a01b0390811691830191909152604080840151821690830152606092830151169181019190915260800190565b60405180910390f35b604080518082018252600c81526b04f6e52616d7020312e362e360a41b602082015290516100f591906109ca565b61016361013a3660046109f8565b505f9081907f000000000000000000000000000000000000000000000000000000000000000090565b6040805167ffffffffffffffff909416845291151560208401526001600160a01b0316908201526060016100f5565b61019a6103ce565b005b61021f6040805160a0810182525f80825260208201819052918101829052606081018290526080810191909152506040805160a0810182526001600160a01b037f0000000000000000000000000000000000000000000000000000000000000000168082525f602083018190529282018390526060820152608081019190915290565b6040516100f5919081516001600160a01b039081168252602080840151151590830152604080840151821690830152606080840151821690830152608092830151169181019190915260a00190565b61019a6103e1565b5f546001600160a01b03165b6040516001600160a01b0390911681526020016100f5565b6001546001600160a01b0316610282565b61019a6102b9366004610a27565b61042a565b61019a6102cc366004610a42565b61049a565b604080516080810182525f80825260208201819052918101829052606081019190915260405180608001604052807f00000000000000000000000000000000000000000000000000000000000000006001600160a01b0316634e4bc8476040518163ffffffff1660e01b8152600401602060405180830381865afa15801561035b573d5f803e3d5ffd5b505050506040513d601f19601f8201168201806040525081019061037f9190610a79565b67ffffffffffffffff1681526001600160a01b037f0000000000000000000000000000000000000000000000000000000000000000166020820181905260408201819052606090910152919050565b6103d66108f8565b6103df5f610924565b565b60015433906001600160a01b0316811461041e5760405163118cdaa760e01b81526001600160a01b03821660048201526024015b60405180910390fd5b61042781610924565b50565b6104326108f8565b600180546001600160a01b0383166001600160a01b031990911681179091556104625f546001600160a01b031690565b6001600160a01b03167f38d16b8cac22d99fc7c124b9cd0de2d3fa1faef420bfe791d8c362d765e2270060405160405180910390a350565b336001600160a01b037f000000000000000000000000000000000000000000000000000000000000000016146105015760405162461bcd60e51b815260206004820152600c60248201526b1bdb9b1e4818dbdb9d1c9bdb60a21b6044820152606401610415565b604080516101c081019091526bffffffffffffffffffffffff19606084901b166101e08201526001600160c01b031960c083901b166101f48201525f90806101208101806101fc83016040516020818303038152906040528051906020012081526020017f00000000000000000000000000000000000000000000000000000000000000006001600160a01b0316634e4bc8476040518163ffffffff1660e01b8152600401602060405180830381865afa1580156105c1573d5f803e3d5ffd5b505050506040513d601f19601f820116820180604052508101906105e59190610a79565b67ffffffffffffffff1681526020017f00000000000000000000000000000000000000000000000000000000000000006001600160a01b0316634e4bc8476040518163ffffffff1660e01b8152600401602060405180830381865afa158015610650573d5f803e3d5ffd5b505050506040513d601f19601f820116820180604052508101906106749190610a79565b67ffffffffffffffff9081168252861660208083019190915260016040928301529183526001600160a01b03871683830181905281518083018352600381526231323360e81b81850152848301528151928301526060909201910160405160208183030381529060405281526020016040518060400160405280600381526020016231323360e81b81525081526020017f00000000000000000000000000000000000000000000000000000000000000006001600160a01b031663fc0c546a6040518163ffffffff1660e01b8152600401602060405180830381865afa158015610760573d5f803e3d5ffd5b505050506040513d601f19601f820116820180604052508101906107849190610a94565b6001600160a01b031681526020015f81526020015f81526020015f67ffffffffffffffff8111156107b7576107b7610aaf565b60405190808252806020026020018201604052801561082157816020015b61080e6040518060a001604052805f6001600160a01b0316815260200160608152602001606081526020015f8152602001606081525090565b8152602001906001900390816107d55790505b5081525090508167ffffffffffffffff167f00000000000000000000000000000000000000000000000000000000000000006001600160a01b0316634e4bc8476040518163ffffffff1660e01b8152600401602060405180830381865afa15801561088e573d5f803e3d5ffd5b505050506040513d601f19601f820116820180604052508101906108b29190610a79565b67ffffffffffffffff167f192442a2b2adb6a7948f097023cb6b57d29d3a7a5dd33e6666d33c39cc456f32836040516108eb9190610b7b565b60405180910390a3505050565b5f546001600160a01b031633146103df5760405163118cdaa760e01b8152336004820152602401610415565b600180546001600160a01b0319169055610427815f80546001600160a01b038381166001600160a01b0319831681178455604051919092169283917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e09190a35050565b5f81518084525f5b818110156109ab5760208185018101518683018201520161098f565b505f602082860101526020601f19601f83011685010191505092915050565b602081525f6109dc6020830184610987565b9392505050565b67ffffffffffffffff81168114610427575f80fd5b5f60208284031215610a08575f80fd5b81356109dc816109e3565b6001600160a01b0381168114610427575f80fd5b5f60208284031215610a37575f80fd5b81356109dc81610a13565b5f8060408385031215610a53575f80fd5b8235610a5e81610a13565b91506020830135610a6e816109e3565b809150509250929050565b5f60208284031215610a89575f80fd5b81516109dc816109e3565b5f60208284031215610aa4575f80fd5b81516109dc81610a13565b634e487b7160e01b5f52604160045260245ffd5b5f82825180855260208086019550808260051b8401018186015f5b84811015610b6e57858303601f19018952815180516001600160a01b031684528481015160a086860181905290610b1782870182610987565b91505060408083015186830382880152610b318382610987565b92505050606080830151818701525060808083015192508582038187015250610b5a8183610987565b9a86019a9450505090830190600101610ade565b5090979650505050505050565b60208152610bcc60208201835180518252602081015167ffffffffffffffff808216602085015280604084015116604085015280606084015116606085015280608084015116608085015250505050565b5f6020830151610be760c08401826001600160a01b03169052565b5060408301516101a08060e0850152610c046101c0850183610987565b91506060850151601f19610100818786030181880152610c248584610987565b9450608088015192508187860301610120880152610c428584610987565b945060a08801519250610c616101408801846001600160a01b03169052565b60c088015161016088015260e0880151610180880152870151868503909101838701529050610c908382610ac3565b969550505050505056fea26469706673582212206dd0f0689d34d17a2399d4da6e5dfb6f268eb2a51892040a32f942ff08a8714d64736f6c6343000818003360a060405234801561000f575f80fd5b5060405161106238038061106283398101604081905261002e916100d9565b338061005357604051631e4fbdf760e01b81525f600482015260240160405180910390fd5b61005c8161006e565b506001600160a01b0316608052610106565b600180546001600160a01b03191690556100878161008a565b50565b5f80546001600160a01b038381166001600160a01b0319831681178455604051919092169283917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e09190a35050565b5f602082840312156100e9575f80fd5b81516001600160a01b03811681146100ff575f80fd5b9392505050565b608051610ef761016b5f395f8181610177015281816102910152818161032a015281816103ca01528181610428015281816104dd0152818161052c0152818161066b015281816106f9015281816107c00152818161097601526109c50152610ef75ff3fe608060405234801561000f575f80fd5b50600436106100a6575f3560e01c806382c9978c1161006e57806382c9978c146101d75780638da5cb5b146101df5780638e73139f14610203578063e30c397814610216578063e9d68a8e14610227578063f2fde38b14610247575f80fd5b806306285c69146100aa578063181f5a7714610110578063715018a61461013f5780637437ff9f1461014957806379ba5097146101cf575b5f80fd5b6100b261025a565b6040805182516001600160401b0316815260208084015161ffff1690820152828201516001600160a01b03908116928201929092526060808401518316908201526080928301519091169181019190915260a0015b60405180910390f35b604080518082018252600d81526c04f666652616d7020312e362e3609c1b602082015290516101079190610bc5565b610147610363565b005b60408051606080820183525f8083526020808401829052928401819052835180830185526001600160a01b037f00000000000000000000000000000000000000000000000000000000000000008116808352600a8387019081529287019384528651908152915163ffffffff169482019490945290519092169282019290925201610107565b610147610376565b6101476103bf565b5f546001600160a01b03165b6040516001600160a01b039091168152602001610107565b610147610211366004610bf2565b6105f9565b6001546001600160a01b03166101eb565b61023a610235366004610c29565b61093d565b6040516101079190610c44565b610147610255366004610cb7565b610a83565b6040805160a0810182525f808252602082018190529181018290526060810182905260808101919091526040518060a001604052807f00000000000000000000000000000000000000000000000000000000000000006001600160a01b0316634e4bc8476040518163ffffffff1660e01b8152600401602060405180830381865afa1580156102eb573d5f803e3d5ffd5b505050506040513d601f19601f8201168201806040525081019061030f9190610cd2565b6001600160401b031681525f60208201526001600160a01b037f0000000000000000000000000000000000000000000000000000000000000000166040820181905260608201819052608090910152919050565b61036b610af3565b6103745f610b1f565b565b60015433906001600160a01b031681146103b35760405163118cdaa760e01b81526001600160a01b03821660048201526024015b60405180910390fd5b6103bc81610b1f565b50565b336001600160a01b037f000000000000000000000000000000000000000000000000000000000000000016146104265760405162461bcd60e51b815260206004820152600c60248201526b1bdb9b1e4818dbdb9d1c9bdb60a21b60448201526064016103aa565b7f00000000000000000000000000000000000000000000000000000000000000006001600160a01b0316634e4bc8476040518163ffffffff1660e01b8152600401602060405180830381865afa158015610482573d5f803e3d5ffd5b505050506040513d601f19601f820116820180604052508101906104a69190610cd2565b6001600160401b03167fbd1ab25a0ff0a36a588597ba1af11e30f3f210de8b9e818cc9bbc457c94c8d8c6040518060a001604052807f00000000000000000000000000000000000000000000000000000000000000006001600160a01b031681526020016001151581526020015f6001600160401b031681526020015f151581526020017f00000000000000000000000000000000000000000000000000000000000000006001600160a01b031663c021e73c6040518163ffffffff1660e01b8152600401602060405180830381865afa158015610586573d5f803e3d5ffd5b505050506040513d601f19601f820116820180604052508101906105aa9190610ced565b6040516020016105d2919060609190911b6bffffffffffffffffffffffff1916815260140190565b60408051601f198184030181529181529152516105ef9190610c44565b60405180910390a2565b604080518082018252606080825260208201528151600180825281840190935290915f9190816020015b6040805160a0810182525f808252606060208084018290529383018290528201819052608082015282525f199092019101816106235790505090506040518060a001604052807f00000000000000000000000000000000000000000000000000000000000000006001600160a01b0316634e4bc8476040518163ffffffff1660e01b8152600401602060405180830381865afa1580156106c5573d5f803e3d5ffd5b505050506040513d601f19601f820116820180604052508101906106e99190610cd2565b6001600160401b031681526020017f00000000000000000000000000000000000000000000000000000000000000006001600160a01b031663c021e73c6040518163ffffffff1660e01b8152600401602060405180830381865afa158015610753573d5f803e3d5ffd5b505050506040513d601f19601f820116820180604052508101906107779190610ced565b604080516001600160a01b039092166020830152016040516020818303038152906040528152602001856001600160401b03168152602001846001600160401b031681526020017f00000000000000000000000000000000000000000000000000000000000000006001600160a01b031663c021e73c6040518163ffffffff1660e01b8152600401602060405180830381865afa15801561081a573d5f803e3d5ffd5b505050506040513d601f19601f8201168201806040525081019061083e9190610ced565b604080516001600160a01b0390921660208301526001600160401b03808916918301919091528616606082015260800160405160208183030381529060405280519060200120815250815f8151811061089957610899610d08565b60209081029190910101527fb967c9b9e1b7af9a61ca71ff00e9f5b89ec6f2e268de8dacf12f0de8e51f3e47815f60405190808252806020026020018201604052801561091e57816020015b6040805160a0810182525f808252606060208084018290529383018290528201819052608082015282525f199092019101816108e55790505b508460405161092f93929190610e0f565b60405180910390a150505050565b6040805160a0810182525f8082526020820181905291810182905260608082019290925260808101919091526040518060a001604052807f00000000000000000000000000000000000000000000000000000000000000006001600160a01b031681526020016001151581526020015f6001600160401b031681526020015f151581526020017f00000000000000000000000000000000000000000000000000000000000000006001600160a01b031663c021e73c6040518163ffffffff1660e01b8152600401602060405180830381865afa158015610a1f573d5f803e3d5ffd5b505050506040513d601f19601f82011682018060405250810190610a439190610ced565b604051602001610a6b919060609190911b6bffffffffffffffffffffffff1916815260140190565b60408051601f19818403018152919052905292915050565b610a8b610af3565b600180546001600160a01b0383166001600160a01b03199091168117909155610abb5f546001600160a01b031690565b6001600160a01b03167f38d16b8cac22d99fc7c124b9cd0de2d3fa1faef420bfe791d8c362d765e2270060405160405180910390a350565b5f546001600160a01b031633146103745760405163118cdaa760e01b81523360048201526024016103aa565b600180546001600160a01b03191690556103bc815f80546001600160a01b038381166001600160a01b0319831681178455604051919092169283917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e09190a35050565b5f81518084525f5b81811015610ba657602081850181015186830182015201610b8a565b505f602082860101526020601f19601f83011685010191505092915050565b602081525f610bd76020830184610b82565b9392505050565b6001600160401b03811681146103bc575f80fd5b5f8060408385031215610c03575f80fd5b8235610c0e81610bde565b91506020830135610c1e81610bde565b809150509250929050565b5f60208284031215610c39575f80fd5b8135610bd781610bde565b6020815260018060a01b0382511660208201526020820151151560408201526001600160401b0360408301511660608201526060820151151560808201525f608083015160a080840152610c9b60c0840182610b82565b949350505050565b6001600160a01b03811681146103bc575f80fd5b5f60208284031215610cc7575f80fd5b8135610bd781610ca3565b5f60208284031215610ce2575f80fd5b8151610bd781610bde565b5f60208284031215610cfd575f80fd5b8151610bd781610ca3565b634e487b7160e01b5f52603260045260245ffd5b5f82825180855260208086019550808260051b8401018186015f5b84811015610dab57601f19868403018952815160a06001600160401b03808351168652868301518288880152610d6f83880182610b82565b60408581015184169089015260608086015190931692880192909252506080928301519290950191909152509783019790830190600101610d37565b5090979650505050505050565b5f815180845260208085019450602084015f5b83811015610e0457815180516001600160401b031688528301516001600160e01b03168388015260409096019590820190600101610dcb565b509495945050505050565b606081525f610e216060830186610d1c565b602083820381850152610e348287610d1c565b9150604084830360408601526040830186516040855281815180845260608701915085830193505f92505b80831015610e9a57835180516001600160a01b031683528601516001600160e01b031686830152928501926001929092019190840190610e5f565b5084890151935085810385870152610eb28185610db8565b9b9a505050505050505050505056fea2646970667358221220bc5723f1040735c9f54e3f7f1cfd0a516dc65332668a7d0df4e0fac91943e32964736f6c6343000818003360a060405234801561000f575f80fd5b503360808190525f805460ff191660011790558061004657604051631e4fbdf760e01b81525f600482015260240160405180910390fd5b61004f81610055565b506100c2565b600380546001600160a01b031916905561006e81610071565b50565b600280546001600160a01b038381166001600160a01b0319831681179093556040519116919082907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0905f90a35050565b608051610ee56100fd5f395f818161034c0152818161043c015281816104da01528181610577015281816105c501526106470152610ee55ff3fe6080604052600436106100dc575f3560e01c806379ba50971161007c5780638fb5f171116100575780638fb5f17114610276578063b99152d0146102a2578063e30c3978146102cf578063f2fde38b146102ec575f80fd5b806379ba50971461021257806385572ffb146102265780638da5cb5b14610245575f80fd5b806324600fc3116100b757806324600fc3146101b35780635100fc21146101c7578063715018a6146101df57806377f5b0e6146101f3575f80fd5b806301ffc9a71461013d57806306b091f914610171578063181f5a7714610192575f80fd5b36610139575f5460ff161561010457604051633085b8db60e01b815260040160405180910390fd5b6040513481527fe12e3b7047ff60a2dd763cf536a43597e5ce7fe7aa7476345bd4cd079912bcef9060200160405180910390a1005b5f80fd5b348015610148575f80fd5b5061015c610157366004610926565b61030b565b60405190151581526020015b60405180910390f35b34801561017c575f80fd5b5061019061018b366004610968565b610341565b005b34801561019d575f80fd5b506101a661054c565b6040516101689190610990565b3480156101be575f80fd5b5061019061056c565b3480156101d2575f80fd5b505f5461015c9060ff1681565b3480156101ea575f80fd5b506101906106ac565b3480156101fe575f80fd5b5061019061020d3660046109f0565b6106bf565b34801561021d575f80fd5b506101906106cf565b348015610231575f80fd5b50610190610240366004610a9b565b610713565b348015610250575f80fd5b506002546001600160a01b03165b6040516001600160a01b039091168152602001610168565b348015610281575f80fd5b50610190610290366004610adf565b5f805460ff1916911515919091179055565b3480156102ad575f80fd5b506102c16102bc366004610afa565b6107b2565b604051908152602001610168565b3480156102da575f80fd5b506003546001600160a01b031661025e565b3480156102f7575f80fd5b50610190610306366004610afa565b610823565b5f6001600160e01b031982166385572ffb60e01b148061033b57506001600160e01b031982166301ffc9a760e01b145b92915050565b336001600160a01b037f00000000000000000000000000000000000000000000000000000000000000001614610389576040516282b42960e81b815260040160405180910390fd5b6040516370a0823160e01b815230600482015282905f906001600160a01b038316906370a0823190602401602060405180830381865afa1580156103cf573d5f803e3d5ffd5b505050506040513d601f19601f820116820180604052508101906103f39190610b13565b9050828110156104255760405163cf47918160e01b815260048101829052602481018490526044015b60405180910390fd5b60405163a9059cbb60e01b81526001600160a01b037f000000000000000000000000000000000000000000000000000000000000000081166004830152602482018590525f919084169063a9059cbb906044016020604051808303815f875af1158015610494573d5f803e3d5ffd5b505050506040513d601f19601f820116820180604052508101906104b89190610b2a565b9050806104d8576040516312171d8360e31b815260040160405180910390fd5b7f00000000000000000000000000000000000000000000000000000000000000006001600160a01b0316856001600160a01b03167f6337ed398c0e8467698c581374fdce4db14922df487b5a39483079f5f59b60a48660405161053d91815260200190565b60405180910390a35050505050565b6060604051806060016040528060248152602001610e8c60249139905090565b336001600160a01b037f000000000000000000000000000000000000000000000000000000000000000016146105b4576040516282b42960e81b815260040160405180910390fd5b60405147905f906001600160a01b037f0000000000000000000000000000000000000000000000000000000000000000169083908381818185875af1925050503d805f811461061e576040519150601f19603f3d011682016040523d82523d5f602084013e610623565b606091505b5050905080610645576040516312171d8360e31b815260040160405180910390fd5b7f00000000000000000000000000000000000000000000000000000000000000006001600160a01b03167fd50b71a2790ecccf5881141fe9ae079e17c66aace5d50ba383d443ecd398ffa5836040516106a091815260200190565b60405180910390a25050565b6106b4610894565b6106bd5f6108c1565b565b60016106cb8282610bc9565b5050565b60035433906001600160a01b031681146107075760405163118cdaa760e01b81526001600160a01b038216600482015260240161041c565b610710816108c1565b50565b5f5460ff1615610739576001604051635a4ff67160e01b815260040161041c9190610c89565b7f707732b700184c0ab3b799f43f03de9b3606a144cfb367f98291044e71972cdc813561076c6040840160208501610d13565b6107796040850185610d3a565b6107866060870187610d3a565b6107936080890189610d84565b6040516107a7989796959493929190610df2565b60405180910390a150565b6040516370a0823160e01b81523060048201525f9082906001600160a01b038216906370a0823190602401602060405180830381865afa1580156107f8573d5f803e3d5ffd5b505050506040513d601f19601f8201168201806040525081019061081c9190610b13565b9392505050565b61082b610894565b600380546001600160a01b0383166001600160a01b0319909116811790915561085c6002546001600160a01b031690565b6001600160a01b03167f38d16b8cac22d99fc7c124b9cd0de2d3fa1faef420bfe791d8c362d765e2270060405160405180910390a350565b6002546001600160a01b031633146106bd5760405163118cdaa760e01b815233600482015260240161041c565b600380546001600160a01b031916905561071081600280546001600160a01b038381166001600160a01b0319831681179093556040519116919082907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0905f90a35050565b5f60208284031215610936575f80fd5b81356001600160e01b03198116811461081c575f80fd5b80356001600160a01b0381168114610963575f80fd5b919050565b5f8060408385031215610979575f80fd5b6109828361094d565b946020939093013593505050565b5f602080835283518060208501525f5b818110156109bc578581018301518582016040015282016109a0565b505f604082860101526040601f19601f8301168501019250505092915050565b634e487b7160e01b5f52604160045260245ffd5b5f60208284031215610a00575f80fd5b813567ffffffffffffffff80821115610a17575f80fd5b818401915084601f830112610a2a575f80fd5b813581811115610a3c57610a3c6109dc565b604051601f8201601f19908116603f01168101908382118183101715610a6457610a646109dc565b81604052828152876020848701011115610a7c575f80fd5b826020860160208301375f928101602001929092525095945050505050565b5f60208284031215610aab575f80fd5b813567ffffffffffffffff811115610ac1575f80fd5b820160a0818503121561081c575f80fd5b8015158114610710575f80fd5b5f60208284031215610aef575f80fd5b813561081c81610ad2565b5f60208284031215610b0a575f80fd5b61081c8261094d565b5f60208284031215610b23575f80fd5b5051919050565b5f60208284031215610b3a575f80fd5b815161081c81610ad2565b600181811c90821680610b5957607f821691505b602082108103610b7757634e487b7160e01b5f52602260045260245ffd5b50919050565b601f821115610bc457805f5260205f20601f840160051c81016020851015610ba25750805b601f840160051c820191505b81811015610bc1575f8155600101610bae565b50505b505050565b815167ffffffffffffffff811115610be357610be36109dc565b610bf781610bf18454610b45565b84610b7d565b602080601f831160018114610c2a575f8415610c135750858301515b5f19600386901b1c1916600185901b178555610c81565b5f85815260208120601f198616915b82811015610c5857888601518255948401946001909101908401610c39565b5085821015610c7557878501515f19600388901b60f8161c191681555b505060018460011b0185555b505050505050565b5f60208083525f8454610c9b81610b45565b806020870152604060018084165f8114610cbc5760018114610cd857610d05565b60ff19851660408a0152604084151560051b8a01019550610d05565b895f5260205f205f5b85811015610cfc5781548b8201860152908301908801610ce1565b8a016040019650505b509398975050505050505050565b5f60208284031215610d23575f80fd5b813567ffffffffffffffff8116811461081c575f80fd5b5f808335601e19843603018112610d4f575f80fd5b83018035915067ffffffffffffffff821115610d69575f80fd5b602001915036819003821315610d7d575f80fd5b9250929050565b5f808335601e19843603018112610d99575f80fd5b83018035915067ffffffffffffffff821115610db3575f80fd5b6020019150600681901b3603821315610d7d575f80fd5b81835281816020850137505f828201602090810191909152601f909101601f19169091010190565b8881525f602067ffffffffffffffff8a166020840152604060a06040850152610e1f60a085018a8c610dca565b8481036060860152610e3281898b610dca565b85810360808701528681528791506020015f5b87811015610e79576001600160a01b03610e5e8461094d565b16825282850135858301529183019190830190600101610e45565b509d9c5050505050505050505050505056fe466972656472696c6c5265766572744d657373616765526563656976657220312e302e30a2646970667358221220d345a01f681061433196d8069e7b6abee675d8f4be98ee7f3561c91486be856164736f6c63430008180033",
}

// FiredrillEntrypointABI is the input ABI used to generate the binding from.
// Deprecated: Use FiredrillEntrypointMetaData.ABI instead.
var FiredrillEntrypointABI = FiredrillEntrypointMetaData.ABI

// FiredrillEntrypointBin is the compiled bytecode used for deploying new contracts.
// Deprecated: Use FiredrillEntrypointMetaData.Bin instead.
var FiredrillEntrypointBin = FiredrillEntrypointMetaData.Bin

// DeployFiredrillEntrypoint deploys a new Ethereum contract, binding an instance of FiredrillEntrypoint to it.
func DeployFiredrillEntrypoint(auth *bind.TransactOpts, backend bind.ContractBackend, chainSelector uint64) (common.Address, *types.Transaction, *FiredrillEntrypoint, error) {
	parsed, err := FiredrillEntrypointMetaData.GetAbi()
	if err != nil {
		return common.Address{}, nil, nil, err
	}
	if parsed == nil {
		return common.Address{}, nil, nil, errors.New("GetABI returned nil")
	}

	address, tx, contract, err := bind.DeployContract(auth, *parsed, common.FromHex(FiredrillEntrypointBin), backend, chainSelector)
	if err != nil {
		return common.Address{}, nil, nil, err
	}
	return address, tx, &FiredrillEntrypoint{FiredrillEntrypointCaller: FiredrillEntrypointCaller{contract: contract}, FiredrillEntrypointTransactor: FiredrillEntrypointTransactor{contract: contract}, FiredrillEntrypointFilterer: FiredrillEntrypointFilterer{contract: contract}}, nil
}

// FiredrillEntrypoint is an auto generated Go binding around an Ethereum contract.
type FiredrillEntrypoint struct {
	FiredrillEntrypointCaller     // Read-only binding to the contract
	FiredrillEntrypointTransactor // Write-only binding to the contract
	FiredrillEntrypointFilterer   // Log filterer for contract events
}

// FiredrillEntrypointCaller is an auto generated read-only Go binding around an Ethereum contract.
type FiredrillEntrypointCaller struct {
	contract *bind.BoundContract // Generic contract wrapper for the low level calls
}

// FiredrillEntrypointTransactor is an auto generated write-only Go binding around an Ethereum contract.
type FiredrillEntrypointTransactor struct {
	contract *bind.BoundContract // Generic contract wrapper for the low level calls
}

// FiredrillEntrypointFilterer is an auto generated log filtering Go binding around an Ethereum contract events.
type FiredrillEntrypointFilterer struct {
	contract *bind.BoundContract // Generic contract wrapper for the low level calls
}

// FiredrillEntrypointSession is an auto generated Go binding around an Ethereum contract,
// with pre-set call and transact options.
type FiredrillEntrypointSession struct {
	Contract     *FiredrillEntrypoint // Generic contract binding to set the session for
	CallOpts     bind.CallOpts        // Call options to use throughout this session
	TransactOpts bind.TransactOpts    // Transaction auth options to use throughout this session
}

// FiredrillEntrypointCallerSession is an auto generated read-only Go binding around an Ethereum contract,
// with pre-set call options.
type FiredrillEntrypointCallerSession struct {
	Contract *FiredrillEntrypointCaller // Generic contract caller binding to set the session for
	CallOpts bind.CallOpts              // Call options to use throughout this session
}

// FiredrillEntrypointTransactorSession is an auto generated write-only Go binding around an Ethereum contract,
// with pre-set transact options.
type FiredrillEntrypointTransactorSession struct {
	Contract     *FiredrillEntrypointTransactor // Generic contract transactor binding to set the session for
	TransactOpts bind.TransactOpts              // Transaction auth options to use throughout this session
}

// FiredrillEntrypointRaw is an auto generated low-level Go binding around an Ethereum contract.
type FiredrillEntrypointRaw struct {
	Contract *FiredrillEntrypoint // Generic contract binding to access the raw methods on
}

// FiredrillEntrypointCallerRaw is an auto generated low-level read-only Go binding around an Ethereum contract.
type FiredrillEntrypointCallerRaw struct {
	Contract *FiredrillEntrypointCaller // Generic read-only contract binding to access the raw methods on
}

// FiredrillEntrypointTransactorRaw is an auto generated low-level write-only Go binding around an Ethereum contract.
type FiredrillEntrypointTransactorRaw struct {
	Contract *FiredrillEntrypointTransactor // Generic write-only contract binding to access the raw methods on
}

// NewFiredrillEntrypoint creates a new instance of FiredrillEntrypoint, bound to a specific deployed contract.
func NewFiredrillEntrypoint(address common.Address, backend bind.ContractBackend) (*FiredrillEntrypoint, error) {
	contract, err := bindFiredrillEntrypoint(address, backend, backend, backend)
	if err != nil {
		return nil, err
	}
	return &FiredrillEntrypoint{FiredrillEntrypointCaller: FiredrillEntrypointCaller{contract: contract}, FiredrillEntrypointTransactor: FiredrillEntrypointTransactor{contract: contract}, FiredrillEntrypointFilterer: FiredrillEntrypointFilterer{contract: contract}}, nil
}

// NewFiredrillEntrypointCaller creates a new read-only instance of FiredrillEntrypoint, bound to a specific deployed contract.
func NewFiredrillEntrypointCaller(address common.Address, caller bind.ContractCaller) (*FiredrillEntrypointCaller, error) {
	contract, err := bindFiredrillEntrypoint(address, caller, nil, nil)
	if err != nil {
		return nil, err
	}
	return &FiredrillEntrypointCaller{contract: contract}, nil
}

// NewFiredrillEntrypointTransactor creates a new write-only instance of FiredrillEntrypoint, bound to a specific deployed contract.
func NewFiredrillEntrypointTransactor(address common.Address, transactor bind.ContractTransactor) (*FiredrillEntrypointTransactor, error) {
	contract, err := bindFiredrillEntrypoint(address, nil, transactor, nil)
	if err != nil {
		return nil, err
	}
	return &FiredrillEntrypointTransactor{contract: contract}, nil
}

// NewFiredrillEntrypointFilterer creates a new log filterer instance of FiredrillEntrypoint, bound to a specific deployed contract.
func NewFiredrillEntrypointFilterer(address common.Address, filterer bind.ContractFilterer) (*FiredrillEntrypointFilterer, error) {
	contract, err := bindFiredrillEntrypoint(address, nil, nil, filterer)
	if err != nil {
		return nil, err
	}
	return &FiredrillEntrypointFilterer{contract: contract}, nil
}

// bindFiredrillEntrypoint binds a generic wrapper to an already deployed contract.
func bindFiredrillEntrypoint(address common.Address, caller bind.ContractCaller, transactor bind.ContractTransactor, filterer bind.ContractFilterer) (*bind.BoundContract, error) {
	parsed, err := FiredrillEntrypointMetaData.GetAbi()
	if err != nil {
		return nil, err
	}
	return bind.NewBoundContract(address, *parsed, caller, transactor, filterer), nil
}

// Call invokes the (constant) contract method with params as input values and
// sets the output to result. The result type might be a single field for simple
// returns, a slice of interfaces for anonymous returns and a struct for named
// returns.
func (_FiredrillEntrypoint *FiredrillEntrypointRaw) Call(opts *bind.CallOpts, result *[]interface{}, method string, params ...interface{}) error {
	return _FiredrillEntrypoint.Contract.FiredrillEntrypointCaller.contract.Call(opts, result, method, params...)
}

// Transfer initiates a plain transaction to move funds to the contract, calling
// its default method if one is available.
func (_FiredrillEntrypoint *FiredrillEntrypointRaw) Transfer(opts *bind.TransactOpts) (*types.Transaction, error) {
	return _FiredrillEntrypoint.Contract.FiredrillEntrypointTransactor.contract.Transfer(opts)
}

// Transact invokes the (paid) contract method with params as input values.
func (_FiredrillEntrypoint *FiredrillEntrypointRaw) Transact(opts *bind.TransactOpts, method string, params ...interface{}) (*types.Transaction, error) {
	return _FiredrillEntrypoint.Contract.FiredrillEntrypointTransactor.contract.Transact(opts, method, params...)
}

// Call invokes the (constant) contract method with params as input values and
// sets the output to result. The result type might be a single field for simple
// returns, a slice of interfaces for anonymous returns and a struct for named
// returns.
func (_FiredrillEntrypoint *FiredrillEntrypointCallerRaw) Call(opts *bind.CallOpts, result *[]interface{}, method string, params ...interface{}) error {
	return _FiredrillEntrypoint.Contract.contract.Call(opts, result, method, params...)
}

// Transfer initiates a plain transaction to move funds to the contract, calling
// its default method if one is available.
func (_FiredrillEntrypoint *FiredrillEntrypointTransactorRaw) Transfer(opts *bind.TransactOpts) (*types.Transaction, error) {
	return _FiredrillEntrypoint.Contract.contract.Transfer(opts)
}

// Transact invokes the (paid) contract method with params as input values.
func (_FiredrillEntrypoint *FiredrillEntrypointTransactorRaw) Transact(opts *bind.TransactOpts, method string, params ...interface{}) (*types.Transaction, error) {
	return _FiredrillEntrypoint.Contract.contract.Transact(opts, method, params...)
}

// ChainSelector is a free data retrieval call binding the contract method 0x4e4bc847.
//
// Solidity: function chainSelector() view returns(uint64)
func (_FiredrillEntrypoint *FiredrillEntrypointCaller) ChainSelector(opts *bind.CallOpts) (uint64, error) {
	var out []interface{}
	err := _FiredrillEntrypoint.contract.Call(opts, &out, "chainSelector")

	if err != nil {
		return *new(uint64), err
	}

	out0 := *abi.ConvertType(out[0], new(uint64)).(*uint64)

	return out0, err

}

// ChainSelector is a free data retrieval call binding the contract method 0x4e4bc847.
//
// Solidity: function chainSelector() view returns(uint64)
func (_FiredrillEntrypoint *FiredrillEntrypointSession) ChainSelector() (uint64, error) {
	return _FiredrillEntrypoint.Contract.ChainSelector(&_FiredrillEntrypoint.CallOpts)
}

// ChainSelector is a free data retrieval call binding the contract method 0x4e4bc847.
//
// Solidity: function chainSelector() view returns(uint64)
func (_FiredrillEntrypoint *FiredrillEntrypointCallerSession) ChainSelector() (uint64, error) {
	return _FiredrillEntrypoint.Contract.ChainSelector(&_FiredrillEntrypoint.CallOpts)
}

// GetARM is a free data retrieval call binding the contract method 0x2e90aa21.
//
// Solidity: function getARM() view returns(address)
func (_FiredrillEntrypoint *FiredrillEntrypointCaller) GetARM(opts *bind.CallOpts) (common.Address, error) {
	var out []interface{}
	err := _FiredrillEntrypoint.contract.Call(opts, &out, "getARM")

	if err != nil {
		return *new(common.Address), err
	}

	out0 := *abi.ConvertType(out[0], new(common.Address)).(*common.Address)

	return out0, err

}

// GetARM is a free data retrieval call binding the contract method 0x2e90aa21.
//
// Solidity: function getARM() view returns(address)
func (_FiredrillEntrypoint *FiredrillEntrypointSession) GetARM() (common.Address, error) {
	return _FiredrillEntrypoint.Contract.GetARM(&_FiredrillEntrypoint.CallOpts)
}

// GetARM is a free data retrieval call binding the contract method 0x2e90aa21.
//
// Solidity: function getARM() view returns(address)
func (_FiredrillEntrypoint *FiredrillEntrypointCallerSession) GetARM() (common.Address, error) {
	return _FiredrillEntrypoint.Contract.GetARM(&_FiredrillEntrypoint.CallOpts)
}

// GetOffRamps is a free data retrieval call binding the contract method 0xa40e69c7.
//
// Solidity: function getOffRamps() view returns((uint64,address)[])
func (_FiredrillEntrypoint *FiredrillEntrypointCaller) GetOffRamps(opts *bind.CallOpts) ([]FiredrillCompoundOffRamp, error) {
	var out []interface{}
	err := _FiredrillEntrypoint.contract.Call(opts, &out, "getOffRamps")

	if err != nil {
		return *new([]FiredrillCompoundOffRamp), err
	}

	out0 := *abi.ConvertType(out[0], new([]FiredrillCompoundOffRamp)).(*[]FiredrillCompoundOffRamp)

	return out0, err

}

// GetOffRamps is a free data retrieval call binding the contract method 0xa40e69c7.
//
// Solidity: function getOffRamps() view returns((uint64,address)[])
func (_FiredrillEntrypoint *FiredrillEntrypointSession) GetOffRamps() ([]FiredrillCompoundOffRamp, error) {
	return _FiredrillEntrypoint.Contract.GetOffRamps(&_FiredrillEntrypoint.CallOpts)
}

// GetOffRamps is a free data retrieval call binding the contract method 0xa40e69c7.
//
// Solidity: function getOffRamps() view returns((uint64,address)[])
func (_FiredrillEntrypoint *FiredrillEntrypointCallerSession) GetOffRamps() ([]FiredrillCompoundOffRamp, error) {
	return _FiredrillEntrypoint.Contract.GetOffRamps(&_FiredrillEntrypoint.CallOpts)
}

// GetOnRamp is a free data retrieval call binding the contract method 0xa8d87a3b.
//
// Solidity: function getOnRamp(uint64 ) view returns(address)
func (_FiredrillEntrypoint *FiredrillEntrypointCaller) GetOnRamp(opts *bind.CallOpts, arg0 uint64) (common.Address, error) {
	var out []interface{}
	err := _FiredrillEntrypoint.contract.Call(opts, &out, "getOnRamp", arg0)

	if err != nil {
		return *new(common.Address), err
	}

	out0 := *abi.ConvertType(out[0], new(common.Address)).(*common.Address)

	return out0, err

}

// GetOnRamp is a free data retrieval call binding the contract method 0xa8d87a3b.
//
// Solidity: function getOnRamp(uint64 ) view returns(address)
func (_FiredrillEntrypoint *FiredrillEntrypointSession) GetOnRamp(arg0 uint64) (common.Address, error) {
	return _FiredrillEntrypoint.Contract.GetOnRamp(&_FiredrillEntrypoint.CallOpts, arg0)
}

// GetOnRamp is a free data retrieval call binding the contract method 0xa8d87a3b.
//
// Solidity: function getOnRamp(uint64 ) view returns(address)
func (_FiredrillEntrypoint *FiredrillEntrypointCallerSession) GetOnRamp(arg0 uint64) (common.Address, error) {
	return _FiredrillEntrypoint.Contract.GetOnRamp(&_FiredrillEntrypoint.CallOpts, arg0)
}

// GetStaticConfig is a free data retrieval call binding the contract method 0x06285c69.
//
// Solidity: function getStaticConfig() view returns((uint96,address,uint32))
func (_FiredrillEntrypoint *FiredrillEntrypointCaller) GetStaticConfig(opts *bind.CallOpts) (FiredrillCompoundStaticConfig, error) {
	var out []interface{}
	err := _FiredrillEntrypoint.contract.Call(opts, &out, "getStaticConfig")

	if err != nil {
		return *new(FiredrillCompoundStaticConfig), err
	}

	out0 := *abi.ConvertType(out[0], new(FiredrillCompoundStaticConfig)).(*FiredrillCompoundStaticConfig)

	return out0, err

}

// GetStaticConfig is a free data retrieval call binding the contract method 0x06285c69.
//
// Solidity: function getStaticConfig() view returns((uint96,address,uint32))
func (_FiredrillEntrypoint *FiredrillEntrypointSession) GetStaticConfig() (FiredrillCompoundStaticConfig, error) {
	return _FiredrillEntrypoint.Contract.GetStaticConfig(&_FiredrillEntrypoint.CallOpts)
}

// GetStaticConfig is a free data retrieval call binding the contract method 0x06285c69.
//
// Solidity: function getStaticConfig() view returns((uint96,address,uint32))
func (_FiredrillEntrypoint *FiredrillEntrypointCallerSession) GetStaticConfig() (FiredrillCompoundStaticConfig, error) {
	return _FiredrillEntrypoint.Contract.GetStaticConfig(&_FiredrillEntrypoint.CallOpts)
}

// OffRamp is a free data retrieval call binding the contract method 0x44671a5d.
//
// Solidity: function offRamp() view returns(address)
func (_FiredrillEntrypoint *FiredrillEntrypointCaller) OffRamp(opts *bind.CallOpts) (common.Address, error) {
	var out []interface{}
	err := _FiredrillEntrypoint.contract.Call(opts, &out, "offRamp")

	if err != nil {
		return *new(common.Address), err
	}

	out0 := *abi.ConvertType(out[0], new(common.Address)).(*common.Address)

	return out0, err

}

// OffRamp is a free data retrieval call binding the contract method 0x44671a5d.
//
// Solidity: function offRamp() view returns(address)
func (_FiredrillEntrypoint *FiredrillEntrypointSession) OffRamp() (common.Address, error) {
	return _FiredrillEntrypoint.Contract.OffRamp(&_FiredrillEntrypoint.CallOpts)
}

// OffRamp is a free data retrieval call binding the contract method 0x44671a5d.
//
// Solidity: function offRamp() view returns(address)
func (_FiredrillEntrypoint *FiredrillEntrypointCallerSession) OffRamp() (common.Address, error) {
	return _FiredrillEntrypoint.Contract.OffRamp(&_FiredrillEntrypoint.CallOpts)
}

// OnRamp is a free data retrieval call binding the contract method 0xc021e73c.
//
// Solidity: function onRamp() view returns(address)
func (_FiredrillEntrypoint *FiredrillEntrypointCaller) OnRamp(opts *bind.CallOpts) (common.Address, error) {
	var out []interface{}
	err := _FiredrillEntrypoint.contract.Call(opts, &out, "onRamp")

	if err != nil {
		return *new(common.Address), err
	}

	out0 := *abi.ConvertType(out[0], new(common.Address)).(*common.Address)

	return out0, err

}

// OnRamp is a free data retrieval call binding the contract method 0xc021e73c.
//
// Solidity: function onRamp() view returns(address)
func (_FiredrillEntrypoint *FiredrillEntrypointSession) OnRamp() (common.Address, error) {
	return _FiredrillEntrypoint.Contract.OnRamp(&_FiredrillEntrypoint.CallOpts)
}

// OnRamp is a free data retrieval call binding the contract method 0xc021e73c.
//
// Solidity: function onRamp() view returns(address)
func (_FiredrillEntrypoint *FiredrillEntrypointCallerSession) OnRamp() (common.Address, error) {
	return _FiredrillEntrypoint.Contract.OnRamp(&_FiredrillEntrypoint.CallOpts)
}

// Owner is a free data retrieval call binding the contract method 0x8da5cb5b.
//
// Solidity: function owner() view returns(address)
func (_FiredrillEntrypoint *FiredrillEntrypointCaller) Owner(opts *bind.CallOpts) (common.Address, error) {
	var out []interface{}
	err := _FiredrillEntrypoint.contract.Call(opts, &out, "owner")

	if err != nil {
		return *new(common.Address), err
	}

	out0 := *abi.ConvertType(out[0], new(common.Address)).(*common.Address)

	return out0, err

}

// Owner is a free data retrieval call binding the contract method 0x8da5cb5b.
//
// Solidity: function owner() view returns(address)
func (_FiredrillEntrypoint *FiredrillEntrypointSession) Owner() (common.Address, error) {
	return _FiredrillEntrypoint.Contract.Owner(&_FiredrillEntrypoint.CallOpts)
}

// Owner is a free data retrieval call binding the contract method 0x8da5cb5b.
//
// Solidity: function owner() view returns(address)
func (_FiredrillEntrypoint *FiredrillEntrypointCallerSession) Owner() (common.Address, error) {
	return _FiredrillEntrypoint.Contract.Owner(&_FiredrillEntrypoint.CallOpts)
}

// PendingOwner is a free data retrieval call binding the contract method 0xe30c3978.
//
// Solidity: function pendingOwner() view returns(address)
func (_FiredrillEntrypoint *FiredrillEntrypointCaller) PendingOwner(opts *bind.CallOpts) (common.Address, error) {
	var out []interface{}
	err := _FiredrillEntrypoint.contract.Call(opts, &out, "pendingOwner")

	if err != nil {
		return *new(common.Address), err
	}

	out0 := *abi.ConvertType(out[0], new(common.Address)).(*common.Address)

	return out0, err

}

// PendingOwner is a free data retrieval call binding the contract method 0xe30c3978.
//
// Solidity: function pendingOwner() view returns(address)
func (_FiredrillEntrypoint *FiredrillEntrypointSession) PendingOwner() (common.Address, error) {
	return _FiredrillEntrypoint.Contract.PendingOwner(&_FiredrillEntrypoint.CallOpts)
}

// PendingOwner is a free data retrieval call binding the contract method 0xe30c3978.
//
// Solidity: function pendingOwner() view returns(address)
func (_FiredrillEntrypoint *FiredrillEntrypointCallerSession) PendingOwner() (common.Address, error) {
	return _FiredrillEntrypoint.Contract.PendingOwner(&_FiredrillEntrypoint.CallOpts)
}

// Receiver is a free data retrieval call binding the contract method 0xf7260d3e.
//
// Solidity: function receiver() view returns(address)
func (_FiredrillEntrypoint *FiredrillEntrypointCaller) Receiver(opts *bind.CallOpts) (common.Address, error) {
	var out []interface{}
	err := _FiredrillEntrypoint.contract.Call(opts, &out, "receiver")

	if err != nil {
		return *new(common.Address), err
	}

	out0 := *abi.ConvertType(out[0], new(common.Address)).(*common.Address)

	return out0, err

}

// Receiver is a free data retrieval call binding the contract method 0xf7260d3e.
//
// Solidity: function receiver() view returns(address)
func (_FiredrillEntrypoint *FiredrillEntrypointSession) Receiver() (common.Address, error) {
	return _FiredrillEntrypoint.Contract.Receiver(&_FiredrillEntrypoint.CallOpts)
}

// Receiver is a free data retrieval call binding the contract method 0xf7260d3e.
//
// Solidity: function receiver() view returns(address)
func (_FiredrillEntrypoint *FiredrillEntrypointCallerSession) Receiver() (common.Address, error) {
	return _FiredrillEntrypoint.Contract.Receiver(&_FiredrillEntrypoint.CallOpts)
}

// Token is a free data retrieval call binding the contract method 0xfc0c546a.
//
// Solidity: function token() view returns(address)
func (_FiredrillEntrypoint *FiredrillEntrypointCaller) Token(opts *bind.CallOpts) (common.Address, error) {
	var out []interface{}
	err := _FiredrillEntrypoint.contract.Call(opts, &out, "token")

	if err != nil {
		return *new(common.Address), err
	}

	out0 := *abi.ConvertType(out[0], new(common.Address)).(*common.Address)

	return out0, err

}

// Token is a free data retrieval call binding the contract method 0xfc0c546a.
//
// Solidity: function token() view returns(address)
func (_FiredrillEntrypoint *FiredrillEntrypointSession) Token() (common.Address, error) {
	return _FiredrillEntrypoint.Contract.Token(&_FiredrillEntrypoint.CallOpts)
}

// Token is a free data retrieval call binding the contract method 0xfc0c546a.
//
// Solidity: function token() view returns(address)
func (_FiredrillEntrypoint *FiredrillEntrypointCallerSession) Token() (common.Address, error) {
	return _FiredrillEntrypoint.Contract.Token(&_FiredrillEntrypoint.CallOpts)
}

// TypeAndVersion is a free data retrieval call binding the contract method 0x181f5a77.
//
// Solidity: function typeAndVersion() pure returns(string)
func (_FiredrillEntrypoint *FiredrillEntrypointCaller) TypeAndVersion(opts *bind.CallOpts) (string, error) {
	var out []interface{}
	err := _FiredrillEntrypoint.contract.Call(opts, &out, "typeAndVersion")

	if err != nil {
		return *new(string), err
	}

	out0 := *abi.ConvertType(out[0], new(string)).(*string)

	return out0, err

}

// TypeAndVersion is a free data retrieval call binding the contract method 0x181f5a77.
//
// Solidity: function typeAndVersion() pure returns(string)
func (_FiredrillEntrypoint *FiredrillEntrypointSession) TypeAndVersion() (string, error) {
	return _FiredrillEntrypoint.Contract.TypeAndVersion(&_FiredrillEntrypoint.CallOpts)
}

// TypeAndVersion is a free data retrieval call binding the contract method 0x181f5a77.
//
// Solidity: function typeAndVersion() pure returns(string)
func (_FiredrillEntrypoint *FiredrillEntrypointCallerSession) TypeAndVersion() (string, error) {
	return _FiredrillEntrypoint.Contract.TypeAndVersion(&_FiredrillEntrypoint.CallOpts)
}

// AcceptOwnership is a paid mutator transaction binding the contract method 0x79ba5097.
//
// Solidity: function acceptOwnership() returns()
func (_FiredrillEntrypoint *FiredrillEntrypointTransactor) AcceptOwnership(opts *bind.TransactOpts) (*types.Transaction, error) {
	return _FiredrillEntrypoint.contract.Transact(opts, "acceptOwnership")
}

// AcceptOwnership is a paid mutator transaction binding the contract method 0x79ba5097.
//
// Solidity: function acceptOwnership() returns()
func (_FiredrillEntrypoint *FiredrillEntrypointSession) AcceptOwnership() (*types.Transaction, error) {
	return _FiredrillEntrypoint.Contract.AcceptOwnership(&_FiredrillEntrypoint.TransactOpts)
}

// AcceptOwnership is a paid mutator transaction binding the contract method 0x79ba5097.
//
// Solidity: function acceptOwnership() returns()
func (_FiredrillEntrypoint *FiredrillEntrypointTransactorSession) AcceptOwnership() (*types.Transaction, error) {
	return _FiredrillEntrypoint.Contract.AcceptOwnership(&_FiredrillEntrypoint.TransactOpts)
}

// DrillPendingCommitPendingQueueTxSpike is a paid mutator transaction binding the contract method 0x1fc9cf15.
//
// Solidity: function drill_PendingCommit_PendingQueue_TxSpike(uint8 from, uint8 to) returns()
func (_FiredrillEntrypoint *FiredrillEntrypointTransactor) DrillPendingCommitPendingQueueTxSpike(opts *bind.TransactOpts, from uint8, to uint8) (*types.Transaction, error) {
	return _FiredrillEntrypoint.contract.Transact(opts, "drill_PendingCommit_PendingQueue_TxSpike", from, to)
}

// DrillPendingCommitPendingQueueTxSpike is a paid mutator transaction binding the contract method 0x1fc9cf15.
//
// Solidity: function drill_PendingCommit_PendingQueue_TxSpike(uint8 from, uint8 to) returns()
func (_FiredrillEntrypoint *FiredrillEntrypointSession) DrillPendingCommitPendingQueueTxSpike(from uint8, to uint8) (*types.Transaction, error) {
	return _FiredrillEntrypoint.Contract.DrillPendingCommitPendingQueueTxSpike(&_FiredrillEntrypoint.TransactOpts, from, to)
}

// DrillPendingCommitPendingQueueTxSpike is a paid mutator transaction binding the contract method 0x1fc9cf15.
//
// Solidity: function drill_PendingCommit_PendingQueue_TxSpike(uint8 from, uint8 to) returns()
func (_FiredrillEntrypoint *FiredrillEntrypointTransactorSession) DrillPendingCommitPendingQueueTxSpike(from uint8, to uint8) (*types.Transaction, error) {
	return _FiredrillEntrypoint.Contract.DrillPendingCommitPendingQueueTxSpike(&_FiredrillEntrypoint.TransactOpts, from, to)
}

// DrillPendingExecution is a paid mutator transaction binding the contract method 0x8abfab01.
//
// Solidity: function drill_PendingExecution(uint8 from, uint8 to) returns()
func (_FiredrillEntrypoint *FiredrillEntrypointTransactor) DrillPendingExecution(opts *bind.TransactOpts, from uint8, to uint8) (*types.Transaction, error) {
	return _FiredrillEntrypoint.contract.Transact(opts, "drill_PendingExecution", from, to)
}

// DrillPendingExecution is a paid mutator transaction binding the contract method 0x8abfab01.
//
// Solidity: function drill_PendingExecution(uint8 from, uint8 to) returns()
func (_FiredrillEntrypoint *FiredrillEntrypointSession) DrillPendingExecution(from uint8, to uint8) (*types.Transaction, error) {
	return _FiredrillEntrypoint.Contract.DrillPendingExecution(&_FiredrillEntrypoint.TransactOpts, from, to)
}

// DrillPendingExecution is a paid mutator transaction binding the contract method 0x8abfab01.
//
// Solidity: function drill_PendingExecution(uint8 from, uint8 to) returns()
func (_FiredrillEntrypoint *FiredrillEntrypointTransactorSession) DrillPendingExecution(from uint8, to uint8) (*types.Transaction, error) {
	return _FiredrillEntrypoint.Contract.DrillPendingExecution(&_FiredrillEntrypoint.TransactOpts, from, to)
}

// DrillPriceRegistries is a paid mutator transaction binding the contract method 0xee301c16.
//
// Solidity: function drill_PriceRegistries() returns()
func (_FiredrillEntrypoint *FiredrillEntrypointTransactor) DrillPriceRegistries(opts *bind.TransactOpts) (*types.Transaction, error) {
	return _FiredrillEntrypoint.contract.Transact(opts, "drill_PriceRegistries")
}

// DrillPriceRegistries is a paid mutator transaction binding the contract method 0xee301c16.
//
// Solidity: function drill_PriceRegistries() returns()
func (_FiredrillEntrypoint *FiredrillEntrypointSession) DrillPriceRegistries() (*types.Transaction, error) {
	return _FiredrillEntrypoint.Contract.DrillPriceRegistries(&_FiredrillEntrypoint.TransactOpts)
}

// DrillPriceRegistries is a paid mutator transaction binding the contract method 0xee301c16.
//
// Solidity: function drill_PriceRegistries() returns()
func (_FiredrillEntrypoint *FiredrillEntrypointTransactorSession) DrillPriceRegistries() (*types.Transaction, error) {
	return _FiredrillEntrypoint.Contract.DrillPriceRegistries(&_FiredrillEntrypoint.TransactOpts)
}

// EmitUsdPerTokenUpdated is a paid mutator transaction binding the contract method 0x20f938b6.
//
// Solidity: function emitUsdPerTokenUpdated() returns()
func (_FiredrillEntrypoint *FiredrillEntrypointTransactor) EmitUsdPerTokenUpdated(opts *bind.TransactOpts) (*types.Transaction, error) {
	return _FiredrillEntrypoint.contract.Transact(opts, "emitUsdPerTokenUpdated")
}

// EmitUsdPerTokenUpdated is a paid mutator transaction binding the contract method 0x20f938b6.
//
// Solidity: function emitUsdPerTokenUpdated() returns()
func (_FiredrillEntrypoint *FiredrillEntrypointSession) EmitUsdPerTokenUpdated() (*types.Transaction, error) {
	return _FiredrillEntrypoint.Contract.EmitUsdPerTokenUpdated(&_FiredrillEntrypoint.TransactOpts)
}

// EmitUsdPerTokenUpdated is a paid mutator transaction binding the contract method 0x20f938b6.
//
// Solidity: function emitUsdPerTokenUpdated() returns()
func (_FiredrillEntrypoint *FiredrillEntrypointTransactorSession) EmitUsdPerTokenUpdated() (*types.Transaction, error) {
	return _FiredrillEntrypoint.Contract.EmitUsdPerTokenUpdated(&_FiredrillEntrypoint.TransactOpts)
}

// PrepareRegister is a paid mutator transaction binding the contract method 0xe311a009.
//
// Solidity: function prepare_Register() returns()
func (_FiredrillEntrypoint *FiredrillEntrypointTransactor) PrepareRegister(opts *bind.TransactOpts) (*types.Transaction, error) {
	return _FiredrillEntrypoint.contract.Transact(opts, "prepare_Register")
}

// PrepareRegister is a paid mutator transaction binding the contract method 0xe311a009.
//
// Solidity: function prepare_Register() returns()
func (_FiredrillEntrypoint *FiredrillEntrypointSession) PrepareRegister() (*types.Transaction, error) {
	return _FiredrillEntrypoint.Contract.PrepareRegister(&_FiredrillEntrypoint.TransactOpts)
}

// PrepareRegister is a paid mutator transaction binding the contract method 0xe311a009.
//
// Solidity: function prepare_Register() returns()
func (_FiredrillEntrypoint *FiredrillEntrypointTransactorSession) PrepareRegister() (*types.Transaction, error) {
	return _FiredrillEntrypoint.Contract.PrepareRegister(&_FiredrillEntrypoint.TransactOpts)
}

// RenounceOwnership is a paid mutator transaction binding the contract method 0x715018a6.
//
// Solidity: function renounceOwnership() returns()
func (_FiredrillEntrypoint *FiredrillEntrypointTransactor) RenounceOwnership(opts *bind.TransactOpts) (*types.Transaction, error) {
	return _FiredrillEntrypoint.contract.Transact(opts, "renounceOwnership")
}

// RenounceOwnership is a paid mutator transaction binding the contract method 0x715018a6.
//
// Solidity: function renounceOwnership() returns()
func (_FiredrillEntrypoint *FiredrillEntrypointSession) RenounceOwnership() (*types.Transaction, error) {
	return _FiredrillEntrypoint.Contract.RenounceOwnership(&_FiredrillEntrypoint.TransactOpts)
}

// RenounceOwnership is a paid mutator transaction binding the contract method 0x715018a6.
//
// Solidity: function renounceOwnership() returns()
func (_FiredrillEntrypoint *FiredrillEntrypointTransactorSession) RenounceOwnership() (*types.Transaction, error) {
	return _FiredrillEntrypoint.Contract.RenounceOwnership(&_FiredrillEntrypoint.TransactOpts)
}

// TransferOwnership is a paid mutator transaction binding the contract method 0xf2fde38b.
//
// Solidity: function transferOwnership(address newOwner) returns()
func (_FiredrillEntrypoint *FiredrillEntrypointTransactor) TransferOwnership(opts *bind.TransactOpts, newOwner common.Address) (*types.Transaction, error) {
	return _FiredrillEntrypoint.contract.Transact(opts, "transferOwnership", newOwner)
}

// TransferOwnership is a paid mutator transaction binding the contract method 0xf2fde38b.
//
// Solidity: function transferOwnership(address newOwner) returns()
func (_FiredrillEntrypoint *FiredrillEntrypointSession) TransferOwnership(newOwner common.Address) (*types.Transaction, error) {
	return _FiredrillEntrypoint.Contract.TransferOwnership(&_FiredrillEntrypoint.TransactOpts, newOwner)
}

// TransferOwnership is a paid mutator transaction binding the contract method 0xf2fde38b.
//
// Solidity: function transferOwnership(address newOwner) returns()
func (_FiredrillEntrypoint *FiredrillEntrypointTransactorSession) TransferOwnership(newOwner common.Address) (*types.Transaction, error) {
	return _FiredrillEntrypoint.Contract.TransferOwnership(&_FiredrillEntrypoint.TransactOpts, newOwner)
}

// FiredrillEntrypointOwnershipTransferStartedIterator is returned from FilterOwnershipTransferStarted and is used to iterate over the raw logs and unpacked data for OwnershipTransferStarted events raised by the FiredrillEntrypoint contract.
type FiredrillEntrypointOwnershipTransferStartedIterator struct {
	Event *FiredrillEntrypointOwnershipTransferStarted // Event containing the contract specifics and raw log

	contract *bind.BoundContract // Generic contract to use for unpacking event data
	event    string              // Event name to use for unpacking event data

	logs chan types.Log        // Log channel receiving the found contract events
	sub  ethereum.Subscription // Subscription for errors, completion and termination
	done bool                  // Whether the subscription completed delivering logs
	fail error                 // Occurred error to stop iteration
}

// Next advances the iterator to the subsequent event, returning whether there
// are any more events found. In case of a retrieval or parsing error, false is
// returned and Error() can be queried for the exact failure.
func (it *FiredrillEntrypointOwnershipTransferStartedIterator) Next() bool {
	// If the iterator failed, stop iterating
	if it.fail != nil {
		return false
	}
	// If the iterator completed, deliver directly whatever's available
	if it.done {
		select {
		case log := <-it.logs:
			it.Event = new(FiredrillEntrypointOwnershipTransferStarted)
			if err := it.contract.UnpackLog(it.Event, it.event, log); err != nil {
				it.fail = err
				return false
			}
			it.Event.Raw = log
			return true

		default:
			return false
		}
	}
	// Iterator still in progress, wait for either a data or an error event
	select {
	case log := <-it.logs:
		it.Event = new(FiredrillEntrypointOwnershipTransferStarted)
		if err := it.contract.UnpackLog(it.Event, it.event, log); err != nil {
			it.fail = err
			return false
		}
		it.Event.Raw = log
		return true

	case err := <-it.sub.Err():
		it.done = true
		it.fail = err
		return it.Next()
	}
}

// Error returns any retrieval or parsing error occurred during filtering.
func (it *FiredrillEntrypointOwnershipTransferStartedIterator) Error() error {
	return it.fail
}

// Close terminates the iteration process, releasing any pending underlying
// resources.
func (it *FiredrillEntrypointOwnershipTransferStartedIterator) Close() error {
	it.sub.Unsubscribe()
	return nil
}

// FiredrillEntrypointOwnershipTransferStarted represents a OwnershipTransferStarted event raised by the FiredrillEntrypoint contract.
type FiredrillEntrypointOwnershipTransferStarted struct {
	PreviousOwner common.Address
	NewOwner      common.Address
	Raw           types.Log // Blockchain specific contextual infos
}

// FilterOwnershipTransferStarted is a free log retrieval operation binding the contract event 0x38d16b8cac22d99fc7c124b9cd0de2d3fa1faef420bfe791d8c362d765e22700.
//
// Solidity: event OwnershipTransferStarted(address indexed previousOwner, address indexed newOwner)
func (_FiredrillEntrypoint *FiredrillEntrypointFilterer) FilterOwnershipTransferStarted(opts *bind.FilterOpts, previousOwner []common.Address, newOwner []common.Address) (*FiredrillEntrypointOwnershipTransferStartedIterator, error) {

	var previousOwnerRule []interface{}
	for _, previousOwnerItem := range previousOwner {
		previousOwnerRule = append(previousOwnerRule, previousOwnerItem)
	}
	var newOwnerRule []interface{}
	for _, newOwnerItem := range newOwner {
		newOwnerRule = append(newOwnerRule, newOwnerItem)
	}

	logs, sub, err := _FiredrillEntrypoint.contract.FilterLogs(opts, "OwnershipTransferStarted", previousOwnerRule, newOwnerRule)
	if err != nil {
		return nil, err
	}
	return &FiredrillEntrypointOwnershipTransferStartedIterator{contract: _FiredrillEntrypoint.contract, event: "OwnershipTransferStarted", logs: logs, sub: sub}, nil
}

// WatchOwnershipTransferStarted is a free log subscription operation binding the contract event 0x38d16b8cac22d99fc7c124b9cd0de2d3fa1faef420bfe791d8c362d765e22700.
//
// Solidity: event OwnershipTransferStarted(address indexed previousOwner, address indexed newOwner)
func (_FiredrillEntrypoint *FiredrillEntrypointFilterer) WatchOwnershipTransferStarted(opts *bind.WatchOpts, sink chan<- *FiredrillEntrypointOwnershipTransferStarted, previousOwner []common.Address, newOwner []common.Address) (event.Subscription, error) {

	var previousOwnerRule []interface{}
	for _, previousOwnerItem := range previousOwner {
		previousOwnerRule = append(previousOwnerRule, previousOwnerItem)
	}
	var newOwnerRule []interface{}
	for _, newOwnerItem := range newOwner {
		newOwnerRule = append(newOwnerRule, newOwnerItem)
	}

	logs, sub, err := _FiredrillEntrypoint.contract.WatchLogs(opts, "OwnershipTransferStarted", previousOwnerRule, newOwnerRule)
	if err != nil {
		return nil, err
	}
	return event.NewSubscription(func(quit <-chan struct{}) error {
		defer sub.Unsubscribe()
		for {
			select {
			case log := <-logs:
				// New log arrived, parse the event and forward to the user
				event := new(FiredrillEntrypointOwnershipTransferStarted)
				if err := _FiredrillEntrypoint.contract.UnpackLog(event, "OwnershipTransferStarted", log); err != nil {
					return err
				}
				event.Raw = log

				select {
				case sink <- event:
				case err := <-sub.Err():
					return err
				case <-quit:
					return nil
				}
			case err := <-sub.Err():
				return err
			case <-quit:
				return nil
			}
		}
	}), nil
}

// ParseOwnershipTransferStarted is a log parse operation binding the contract event 0x38d16b8cac22d99fc7c124b9cd0de2d3fa1faef420bfe791d8c362d765e22700.
//
// Solidity: event OwnershipTransferStarted(address indexed previousOwner, address indexed newOwner)
func (_FiredrillEntrypoint *FiredrillEntrypointFilterer) ParseOwnershipTransferStarted(log types.Log) (*FiredrillEntrypointOwnershipTransferStarted, error) {
	event := new(FiredrillEntrypointOwnershipTransferStarted)
	if err := _FiredrillEntrypoint.contract.UnpackLog(event, "OwnershipTransferStarted", log); err != nil {
		return nil, err
	}
	event.Raw = log
	return event, nil
}

// FiredrillEntrypointOwnershipTransferredIterator is returned from FilterOwnershipTransferred and is used to iterate over the raw logs and unpacked data for OwnershipTransferred events raised by the FiredrillEntrypoint contract.
type FiredrillEntrypointOwnershipTransferredIterator struct {
	Event *FiredrillEntrypointOwnershipTransferred // Event containing the contract specifics and raw log

	contract *bind.BoundContract // Generic contract to use for unpacking event data
	event    string              // Event name to use for unpacking event data

	logs chan types.Log        // Log channel receiving the found contract events
	sub  ethereum.Subscription // Subscription for errors, completion and termination
	done bool                  // Whether the subscription completed delivering logs
	fail error                 // Occurred error to stop iteration
}

// Next advances the iterator to the subsequent event, returning whether there
// are any more events found. In case of a retrieval or parsing error, false is
// returned and Error() can be queried for the exact failure.
func (it *FiredrillEntrypointOwnershipTransferredIterator) Next() bool {
	// If the iterator failed, stop iterating
	if it.fail != nil {
		return false
	}
	// If the iterator completed, deliver directly whatever's available
	if it.done {
		select {
		case log := <-it.logs:
			it.Event = new(FiredrillEntrypointOwnershipTransferred)
			if err := it.contract.UnpackLog(it.Event, it.event, log); err != nil {
				it.fail = err
				return false
			}
			it.Event.Raw = log
			return true

		default:
			return false
		}
	}
	// Iterator still in progress, wait for either a data or an error event
	select {
	case log := <-it.logs:
		it.Event = new(FiredrillEntrypointOwnershipTransferred)
		if err := it.contract.UnpackLog(it.Event, it.event, log); err != nil {
			it.fail = err
			return false
		}
		it.Event.Raw = log
		return true

	case err := <-it.sub.Err():
		it.done = true
		it.fail = err
		return it.Next()
	}
}

// Error returns any retrieval or parsing error occurred during filtering.
func (it *FiredrillEntrypointOwnershipTransferredIterator) Error() error {
	return it.fail
}

// Close terminates the iteration process, releasing any pending underlying
// resources.
func (it *FiredrillEntrypointOwnershipTransferredIterator) Close() error {
	it.sub.Unsubscribe()
	return nil
}

// FiredrillEntrypointOwnershipTransferred represents a OwnershipTransferred event raised by the FiredrillEntrypoint contract.
type FiredrillEntrypointOwnershipTransferred struct {
	PreviousOwner common.Address
	NewOwner      common.Address
	Raw           types.Log // Blockchain specific contextual infos
}

// FilterOwnershipTransferred is a free log retrieval operation binding the contract event 0x8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0.
//
// Solidity: event OwnershipTransferred(address indexed previousOwner, address indexed newOwner)
func (_FiredrillEntrypoint *FiredrillEntrypointFilterer) FilterOwnershipTransferred(opts *bind.FilterOpts, previousOwner []common.Address, newOwner []common.Address) (*FiredrillEntrypointOwnershipTransferredIterator, error) {

	var previousOwnerRule []interface{}
	for _, previousOwnerItem := range previousOwner {
		previousOwnerRule = append(previousOwnerRule, previousOwnerItem)
	}
	var newOwnerRule []interface{}
	for _, newOwnerItem := range newOwner {
		newOwnerRule = append(newOwnerRule, newOwnerItem)
	}

	logs, sub, err := _FiredrillEntrypoint.contract.FilterLogs(opts, "OwnershipTransferred", previousOwnerRule, newOwnerRule)
	if err != nil {
		return nil, err
	}
	return &FiredrillEntrypointOwnershipTransferredIterator{contract: _FiredrillEntrypoint.contract, event: "OwnershipTransferred", logs: logs, sub: sub}, nil
}

// WatchOwnershipTransferred is a free log subscription operation binding the contract event 0x8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0.
//
// Solidity: event OwnershipTransferred(address indexed previousOwner, address indexed newOwner)
func (_FiredrillEntrypoint *FiredrillEntrypointFilterer) WatchOwnershipTransferred(opts *bind.WatchOpts, sink chan<- *FiredrillEntrypointOwnershipTransferred, previousOwner []common.Address, newOwner []common.Address) (event.Subscription, error) {

	var previousOwnerRule []interface{}
	for _, previousOwnerItem := range previousOwner {
		previousOwnerRule = append(previousOwnerRule, previousOwnerItem)
	}
	var newOwnerRule []interface{}
	for _, newOwnerItem := range newOwner {
		newOwnerRule = append(newOwnerRule, newOwnerItem)
	}

	logs, sub, err := _FiredrillEntrypoint.contract.WatchLogs(opts, "OwnershipTransferred", previousOwnerRule, newOwnerRule)
	if err != nil {
		return nil, err
	}
	return event.NewSubscription(func(quit <-chan struct{}) error {
		defer sub.Unsubscribe()
		for {
			select {
			case log := <-logs:
				// New log arrived, parse the event and forward to the user
				event := new(FiredrillEntrypointOwnershipTransferred)
				if err := _FiredrillEntrypoint.contract.UnpackLog(event, "OwnershipTransferred", log); err != nil {
					return err
				}
				event.Raw = log

				select {
				case sink <- event:
				case err := <-sub.Err():
					return err
				case <-quit:
					return nil
				}
			case err := <-sub.Err():
				return err
			case <-quit:
				return nil
			}
		}
	}), nil
}

// ParseOwnershipTransferred is a log parse operation binding the contract event 0x8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0.
//
// Solidity: event OwnershipTransferred(address indexed previousOwner, address indexed newOwner)
func (_FiredrillEntrypoint *FiredrillEntrypointFilterer) ParseOwnershipTransferred(log types.Log) (*FiredrillEntrypointOwnershipTransferred, error) {
	event := new(FiredrillEntrypointOwnershipTransferred)
	if err := _FiredrillEntrypoint.contract.UnpackLog(event, "OwnershipTransferred", log); err != nil {
		return nil, err
	}
	event.Raw = log
	return event, nil
}

// FiredrillEntrypointUsdPerTokenUpdatedIterator is returned from FilterUsdPerTokenUpdated and is used to iterate over the raw logs and unpacked data for UsdPerTokenUpdated events raised by the FiredrillEntrypoint contract.
type FiredrillEntrypointUsdPerTokenUpdatedIterator struct {
	Event *FiredrillEntrypointUsdPerTokenUpdated // Event containing the contract specifics and raw log

	contract *bind.BoundContract // Generic contract to use for unpacking event data
	event    string              // Event name to use for unpacking event data

	logs chan types.Log        // Log channel receiving the found contract events
	sub  ethereum.Subscription // Subscription for errors, completion and termination
	done bool                  // Whether the subscription completed delivering logs
	fail error                 // Occurred error to stop iteration
}

// Next advances the iterator to the subsequent event, returning whether there
// are any more events found. In case of a retrieval or parsing error, false is
// returned and Error() can be queried for the exact failure.
func (it *FiredrillEntrypointUsdPerTokenUpdatedIterator) Next() bool {
	// If the iterator failed, stop iterating
	if it.fail != nil {
		return false
	}
	// If the iterator completed, deliver directly whatever's available
	if it.done {
		select {
		case log := <-it.logs:
			it.Event = new(FiredrillEntrypointUsdPerTokenUpdated)
			if err := it.contract.UnpackLog(it.Event, it.event, log); err != nil {
				it.fail = err
				return false
			}
			it.Event.Raw = log
			return true

		default:
			return false
		}
	}
	// Iterator still in progress, wait for either a data or an error event
	select {
	case log := <-it.logs:
		it.Event = new(FiredrillEntrypointUsdPerTokenUpdated)
		if err := it.contract.UnpackLog(it.Event, it.event, log); err != nil {
			it.fail = err
			return false
		}
		it.Event.Raw = log
		return true

	case err := <-it.sub.Err():
		it.done = true
		it.fail = err
		return it.Next()
	}
}

// Error returns any retrieval or parsing error occurred during filtering.
func (it *FiredrillEntrypointUsdPerTokenUpdatedIterator) Error() error {
	return it.fail
}

// Close terminates the iteration process, releasing any pending underlying
// resources.
func (it *FiredrillEntrypointUsdPerTokenUpdatedIterator) Close() error {
	it.sub.Unsubscribe()
	return nil
}

// FiredrillEntrypointUsdPerTokenUpdated represents a UsdPerTokenUpdated event raised by the FiredrillEntrypoint contract.
type FiredrillEntrypointUsdPerTokenUpdated struct {
	Token     common.Address
	Value     *big.Int
	Timestamp *big.Int
	Raw       types.Log // Blockchain specific contextual infos
}

// FilterUsdPerTokenUpdated is a free log retrieval operation binding the contract event 0x52f50aa6d1a95a4595361ecf953d095f125d442e4673716dede699e049de148a.
//
// Solidity: event UsdPerTokenUpdated(address indexed token, uint256 value, uint256 timestamp)
func (_FiredrillEntrypoint *FiredrillEntrypointFilterer) FilterUsdPerTokenUpdated(opts *bind.FilterOpts, token []common.Address) (*FiredrillEntrypointUsdPerTokenUpdatedIterator, error) {

	var tokenRule []interface{}
	for _, tokenItem := range token {
		tokenRule = append(tokenRule, tokenItem)
	}

	logs, sub, err := _FiredrillEntrypoint.contract.FilterLogs(opts, "UsdPerTokenUpdated", tokenRule)
	if err != nil {
		return nil, err
	}
	return &FiredrillEntrypointUsdPerTokenUpdatedIterator{contract: _FiredrillEntrypoint.contract, event: "UsdPerTokenUpdated", logs: logs, sub: sub}, nil
}

// WatchUsdPerTokenUpdated is a free log subscription operation binding the contract event 0x52f50aa6d1a95a4595361ecf953d095f125d442e4673716dede699e049de148a.
//
// Solidity: event UsdPerTokenUpdated(address indexed token, uint256 value, uint256 timestamp)
func (_FiredrillEntrypoint *FiredrillEntrypointFilterer) WatchUsdPerTokenUpdated(opts *bind.WatchOpts, sink chan<- *FiredrillEntrypointUsdPerTokenUpdated, token []common.Address) (event.Subscription, error) {

	var tokenRule []interface{}
	for _, tokenItem := range token {
		tokenRule = append(tokenRule, tokenItem)
	}

	logs, sub, err := _FiredrillEntrypoint.contract.WatchLogs(opts, "UsdPerTokenUpdated", tokenRule)
	if err != nil {
		return nil, err
	}
	return event.NewSubscription(func(quit <-chan struct{}) error {
		defer sub.Unsubscribe()
		for {
			select {
			case log := <-logs:
				// New log arrived, parse the event and forward to the user
				event := new(FiredrillEntrypointUsdPerTokenUpdated)
				if err := _FiredrillEntrypoint.contract.UnpackLog(event, "UsdPerTokenUpdated", log); err != nil {
					return err
				}
				event.Raw = log

				select {
				case sink <- event:
				case err := <-sub.Err():
					return err
				case <-quit:
					return nil
				}
			case err := <-sub.Err():
				return err
			case <-quit:
				return nil
			}
		}
	}), nil
}

// ParseUsdPerTokenUpdated is a log parse operation binding the contract event 0x52f50aa6d1a95a4595361ecf953d095f125d442e4673716dede699e049de148a.
//
// Solidity: event UsdPerTokenUpdated(address indexed token, uint256 value, uint256 timestamp)
func (_FiredrillEntrypoint *FiredrillEntrypointFilterer) ParseUsdPerTokenUpdated(log types.Log) (*FiredrillEntrypointUsdPerTokenUpdated, error) {
	event := new(FiredrillEntrypointUsdPerTokenUpdated)
	if err := _FiredrillEntrypoint.contract.UnpackLog(event, "UsdPerTokenUpdated", log); err != nil {
		return nil, err
	}
	event.Raw = log
	return event, nil
}

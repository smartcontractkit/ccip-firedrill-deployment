// Code generated - DO NOT EDIT.
// This file is a generated binding and any manual changes will be lost.

package firedrill_entrypoint

import (
	"errors"
	"math/big"
	"strings"

	ethereum "github.com/ethereum/go-ethereum"
	"github.com/ethereum/go-ethereum/accounts/abi"
	"github.com/ethereum/go-ethereum/accounts/abi/bind"
	"github.com/ethereum/go-ethereum/common"
	"github.com/ethereum/go-ethereum/core/types"
	"github.com/ethereum/go-ethereum/event"
)

// Reference imports to suppress errors if they are not otherwise used.
var (
	_ = errors.New
	_ = big.NewInt
	_ = strings.NewReader
	_ = ethereum.NotFound
	_ = bind.Bind
	_ = common.Big1
	_ = types.BloomLookup
	_ = event.NewSubscription
	_ = abi.ConvertType
)

// FiredrillEntrypointMetaData contains all meta data concerning the FiredrillEntrypoint contract.
var FiredrillEntrypointMetaData = &bind.MetaData{
	ABI: "[{\"type\":\"constructor\",\"inputs\":[{\"name\":\"chainSelector\",\"type\":\"uint64\",\"internalType\":\"uint64\"}],\"stateMutability\":\"nonpayable\"},{\"type\":\"function\",\"name\":\"acceptOwnership\",\"inputs\":[],\"outputs\":[],\"stateMutability\":\"nonpayable\"},{\"type\":\"function\",\"name\":\"chainSelector\",\"inputs\":[],\"outputs\":[{\"name\":\"\",\"type\":\"uint64\",\"internalType\":\"uint64\"}],\"stateMutability\":\"view\"},{\"type\":\"function\",\"name\":\"compound\",\"inputs\":[],\"outputs\":[{\"name\":\"\",\"type\":\"address\",\"internalType\":\"address\"}],\"stateMutability\":\"view\"},{\"type\":\"function\",\"name\":\"deactivate\",\"inputs\":[],\"outputs\":[],\"stateMutability\":\"nonpayable\"},{\"type\":\"function\",\"name\":\"drill_PendingCommit_PendingQueue_TxSpike\",\"inputs\":[{\"name\":\"from\",\"type\":\"uint8\",\"internalType\":\"uint8\"},{\"name\":\"to\",\"type\":\"uint8\",\"internalType\":\"uint8\"}],\"outputs\":[],\"stateMutability\":\"nonpayable\"},{\"type\":\"function\",\"name\":\"drill_PendingExecution\",\"inputs\":[{\"name\":\"from\",\"type\":\"uint8\",\"internalType\":\"uint8\"},{\"name\":\"to\",\"type\":\"uint8\",\"internalType\":\"uint8\"}],\"outputs\":[],\"stateMutability\":\"nonpayable\"},{\"type\":\"function\",\"name\":\"drill_PriceRegistries\",\"inputs\":[],\"outputs\":[],\"stateMutability\":\"nonpayable\"},{\"type\":\"function\",\"name\":\"isActive\",\"inputs\":[],\"outputs\":[{\"name\":\"\",\"type\":\"bool\",\"internalType\":\"bool\"}],\"stateMutability\":\"view\"},{\"type\":\"function\",\"name\":\"offRamp\",\"inputs\":[],\"outputs\":[{\"name\":\"\",\"type\":\"address\",\"internalType\":\"address\"}],\"stateMutability\":\"view\"},{\"type\":\"function\",\"name\":\"onRamp\",\"inputs\":[],\"outputs\":[{\"name\":\"\",\"type\":\"address\",\"internalType\":\"address\"}],\"stateMutability\":\"view\"},{\"type\":\"function\",\"name\":\"owner\",\"inputs\":[],\"outputs\":[{\"name\":\"\",\"type\":\"address\",\"internalType\":\"address\"}],\"stateMutability\":\"view\"},{\"type\":\"function\",\"name\":\"pendingOwner\",\"inputs\":[],\"outputs\":[{\"name\":\"\",\"type\":\"address\",\"internalType\":\"address\"}],\"stateMutability\":\"view\"},{\"type\":\"function\",\"name\":\"prepare_Register\",\"inputs\":[],\"outputs\":[],\"stateMutability\":\"nonpayable\"},{\"type\":\"function\",\"name\":\"receiver\",\"inputs\":[],\"outputs\":[{\"name\":\"\",\"type\":\"address\",\"internalType\":\"address\"}],\"stateMutability\":\"view\"},{\"type\":\"function\",\"name\":\"renounceOwnership\",\"inputs\":[],\"outputs\":[],\"stateMutability\":\"nonpayable\"},{\"type\":\"function\",\"name\":\"token\",\"inputs\":[],\"outputs\":[{\"name\":\"\",\"type\":\"address\",\"internalType\":\"address\"}],\"stateMutability\":\"view\"},{\"type\":\"function\",\"name\":\"transferOwnership\",\"inputs\":[{\"name\":\"newOwner\",\"type\":\"address\",\"internalType\":\"address\"}],\"outputs\":[],\"stateMutability\":\"nonpayable\"},{\"type\":\"function\",\"name\":\"typeAndVersion\",\"inputs\":[],\"outputs\":[{\"name\":\"\",\"type\":\"string\",\"internalType\":\"string\"}],\"stateMutability\":\"pure\"},{\"type\":\"event\",\"name\":\"OwnershipTransferStarted\",\"inputs\":[{\"name\":\"previousOwner\",\"type\":\"address\",\"indexed\":true,\"internalType\":\"address\"},{\"name\":\"newOwner\",\"type\":\"address\",\"indexed\":true,\"internalType\":\"address\"}],\"anonymous\":false},{\"type\":\"event\",\"name\":\"OwnershipTransferred\",\"inputs\":[{\"name\":\"previousOwner\",\"type\":\"address\",\"indexed\":true,\"internalType\":\"address\"},{\"name\":\"newOwner\",\"type\":\"address\",\"indexed\":true,\"internalType\":\"address\"}],\"anonymous\":false},{\"type\":\"error\",\"name\":\"OwnableInvalidOwner\",\"inputs\":[{\"name\":\"owner\",\"type\":\"address\",\"internalType\":\"address\"}]},{\"type\":\"error\",\"name\":\"OwnableUnauthorizedAccount\",\"inputs\":[{\"name\":\"account\",\"type\":\"address\",\"internalType\":\"address\"}]}]",
	Bin: "0x61014060405234801562000011575f80fd5b5060405162005365380380620053658339810160408190526200003491620002a5565b33806200005a57604051631e4fbdf760e01b81525f600482015260240160405180910390fd5b6200006581620001f2565b506001600160401b038116608052604051309062000083906200025f565b6001600160a01b039091168152602001604051809103905ff080158015620000ad573d5f803e3d5ffd5b506001600160a01b031660a0526040513090620000ca906200026d565b6001600160a01b039091168152602001604051809103905ff080158015620000f4573d5f803e3d5ffd5b506001600160a01b031660c052604051309062000111906200027b565b6001600160a01b039091168152602001604051809103905ff0801580156200013b573d5f803e3d5ffd5b506001600160a01b031660e0526040513090620001589062000289565b6001600160a01b039091168152602001604051809103905ff08015801562000182573d5f803e3d5ffd5b506001600160a01b0316610100526040513090620001a09062000297565b6001600160a01b039091168152602001604051809103905ff080158015620001ca573d5f803e3d5ffd5b506001600160a01b031661012052506001805460ff60a01b1916600160a01b179055620002d4565b600180546001600160a01b03191690556200020d8162000210565b50565b5f80546001600160a01b038381166001600160a01b0319831681178455604051919092169283917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e09190a35050565b6105628062000c5d83390190565b6111da80620011bf83390190565b6113ea806200239983390190565b610afc806200378383390190565b6110e6806200427f83390190565b5f60208284031215620002b6575f80fd5b81516001600160401b0381168114620002cd575f80fd5b9392505050565b60805160a05160c05160e0516101005161012051610925620003385f395f6102be01525f818161029801526106a901525f8181610191015281816105c4015261063101525f818161023e01526103f701525f6102e401525f6101d701526109255ff3fe608060405234801561000f575f80fd5b5060043610610111575f3560e01c80638da5cb5b1161009e578063ee301c161161006e578063ee301c161461027b578063f2fde38b14610283578063f69e204614610296578063f7260d3e146102bc578063fc0c546a146102e2575f80fd5b80638da5cb5b1461022c578063c021e73c1461023c578063e30c397814610262578063e311a00914610273575f80fd5b80634e4bc847116100e45780634e4bc847146101c957806351b42b0014610201578063715018a61461020957806379ba5097146102115780638abfab0114610219575f80fd5b8063181f5a77146101155780631fc9cf151461015d57806322f3e2d41461017257806344671a5d1461018f575b5f80fd5b604080518082018252601981527f466972656472696c6c456e747279706f696e7420312e362e30000000000000006020820152905161015491906107fe565b60405180910390f35b61017061016b36600461085f565b610308565b005b600154600160a01b900460ff166040519015158152602001610154565b7f00000000000000000000000000000000000000000000000000000000000000005b6040516001600160a01b039091168152602001610154565b60405167ffffffffffffffff7f0000000000000000000000000000000000000000000000000000000000000000168152602001610154565b610170610491565b6101706104a8565b6101706104bb565b61017061022736600461085f565b6104ff565b5f546001600160a01b03166101b1565b7f00000000000000000000000000000000000000000000000000000000000000006101b1565b6001546001600160a01b03166101b1565b610170610627565b61017061069f565b610170610291366004610890565b6106ff565b7f00000000000000000000000000000000000000000000000000000000000000006101b1565b7f00000000000000000000000000000000000000000000000000000000000000006101b1565b7f00000000000000000000000000000000000000000000000000000000000000006101b1565b61031061076f565b8060ff168260ff16111561035d5760405162461bcd60e51b815260206004820152600f60248201526e1b9bdd1a1a5b99c81d1bc81cd95b99608a1b60448201526064015b60405180910390fd5b600154600160a81b900467ffffffffffffffff1660ff8316116103b95760405162461bcd60e51b81526020600482015260146024820152731b595cdcd859d948185b1c9958591e481cd95b9d60621b6044820152606401610354565b60ff82165b8160ff168167ffffffffffffffff16116104695760405163f47d2ea760e01b815233600482015267ffffffffffffffff821660248201527f00000000000000000000000000000000000000000000000000000000000000006001600160a01b03169063f47d2ea7906044015f604051808303815f87803b158015610440575f80fd5b505af1158015610452573d5f803e3d5ffd5b505050508080610461906108bd565b9150506103be565b506001805467ffffffffffffffff60a81b191660ff92909216600160a81b0291909117905550565b61049961076f565b6001805460ff60a01b19169055565b6104b061076f565b6104b95f61079b565b565b60015433906001600160a01b031681146104f35760405163118cdaa760e01b81526001600160a01b0382166004820152602401610354565b6104fc8161079b565b50565b61050761076f565b8060ff168260ff16111561054f5760405162461bcd60e51b815260206004820152600f60248201526e1b9bdd1a1a5b99c81d1bc81cd95b99608a1b6044820152606401610354565b600154600160a81b900467ffffffffffffffff1660ff821611156105a45760405162461bcd60e51b815260206004820152600c60248201526b1b9bdd081e595d081cd95b9d60a21b6044820152606401610354565b604051638e73139f60e01b815260ff8084166004830152821660248201527f00000000000000000000000000000000000000000000000000000000000000006001600160a01b031690638e73139f906044015f604051808303815f87803b15801561060d575f80fd5b505af115801561061f573d5f803e3d5ffd5b505050505050565b61062f61076f565b7f00000000000000000000000000000000000000000000000000000000000000006001600160a01b03166382c9978c6040518163ffffffff1660e01b81526004015f604051808303815f87803b158015610687575f80fd5b505af1158015610699573d5f803e3d5ffd5b50505050565b6106a761076f565b7f00000000000000000000000000000000000000000000000000000000000000006001600160a01b03166320f938b66040518163ffffffff1660e01b81526004015f604051808303815f87803b158015610687575f80fd5b61070761076f565b600180546001600160a01b0383166001600160a01b031990911681179091556107375f546001600160a01b031690565b6001600160a01b03167f38d16b8cac22d99fc7c124b9cd0de2d3fa1faef420bfe791d8c362d765e2270060405160405180910390a350565b5f546001600160a01b031633146104b95760405163118cdaa760e01b8152336004820152602401610354565b600180546001600160a01b03191690556104fc815f80546001600160a01b038381166001600160a01b0319831681178455604051919092169283917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e09190a35050565b5f602080835283518060208501525f5b8181101561082a5785810183015185820160400152820161080e565b505f604082860101526040601f19601f8301168501019250505092915050565b803560ff8116811461085a575f80fd5b919050565b5f8060408385031215610870575f80fd5b6108798361084a565b91506108876020840161084a565b90509250929050565b5f602082840312156108a0575f80fd5b81356001600160a01b03811681146108b6575f80fd5b9392505050565b5f67ffffffffffffffff8083168181036108e557634e487b7160e01b5f52601160045260245ffd5b600101939250505056fea264697066735822122074d4774e50376b4c1cf19fb9e980e0c539d9525f5fb0ddc63ce8a8aa27c9e01a64736f6c63430008180033608060405234801561000f575f80fd5b5060405161056238038061056283398101604081905261002e916100ed565b338061005357604051631e4fbdf760e01b81525f600482015260240160405180910390fd5b61005c81610082565b50600280546001600160a01b0319166001600160a01b039290921691909117905561011a565b600180546001600160a01b031916905561009b8161009e565b50565b5f80546001600160a01b038381166001600160a01b0319831681178455604051919092169283917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e09190a35050565b5f602082840312156100fd575f80fd5b81516001600160a01b0381168114610113575f80fd5b9392505050565b61043b806101275f395ff3fe608060405234801561000f575f80fd5b506004361061009b575f3560e01c806379ba50971161006357806379ba5097146101325780638da5cb5b1461013a57806395d89b411461015e578063e30c39781461017e578063f2fde38b1461018f575f80fd5b8063181f5a771461009f57806322f3e2d4146100e1578063313ce567146100f957806370a0823114610107578063715018a614610128575b5f80fd5b6040805180820190915260148152730466972656472696c6c546f6b656e20312e302e360641b60208201525b6040516100d8919061036d565b60405180910390f35b6100e96101a2565b60405190151581526020016100d8565b6040515f81526020016100d8565b61011a6101153660046103b9565b505f90565b6040519081526020016100d8565b610130610212565b005b610130610225565b5f546001600160a01b03165b6040516001600160a01b0390911681526020016100d8565b6040805180820190915260048152634c494e4b60e01b60208201526100cb565b6001546001600160a01b0316610146565b61013061019d3660046103b9565b61026e565b600254604080516308bcf8b560e21b815290515f926001600160a01b0316916322f3e2d49160048083019260209291908290030181865afa1580156101e9573d5f803e3d5ffd5b505050506040513d601f19601f8201168201806040525081019061020d91906103e6565b905090565b61021a6102de565b6102235f61030a565b565b60015433906001600160a01b031681146102625760405163118cdaa760e01b81526001600160a01b03821660048201526024015b60405180910390fd5b61026b8161030a565b50565b6102766102de565b600180546001600160a01b0383166001600160a01b031990911681179091556102a65f546001600160a01b031690565b6001600160a01b03167f38d16b8cac22d99fc7c124b9cd0de2d3fa1faef420bfe791d8c362d765e2270060405160405180910390a350565b5f546001600160a01b031633146102235760405163118cdaa760e01b8152336004820152602401610259565b600180546001600160a01b031916905561026b815f80546001600160a01b038381166001600160a01b0319831681178455604051919092169283917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e09190a35050565b5f602080835283518060208501525f5b818110156103995785810183015185820160400152820161037d565b505f604082860101526040601f19601f8301168501019250505092915050565b5f602082840312156103c9575f80fd5b81356001600160a01b03811681146103df575f80fd5b9392505050565b5f602082840312156103f6575f80fd5b815180151581146103df575f80fdfea26469706673582212206fb37d112ff1769b4e0a9ebd1a07fd721169fc5a3328463657a2d8aca7b7583964736f6c6343000818003360a060405234801561000f575f80fd5b506040516111da3803806111da83398101604081905261002e916100d9565b338061005357604051631e4fbdf760e01b81525f600482015260240160405180910390fd5b61005c8161006e565b506001600160a01b0316608052610106565b600180546001600160a01b03191690556100878161008a565b50565b5f80546001600160a01b038381166001600160a01b0319831681178455604051919092169283917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e09190a35050565b5f602082840312156100e9575f80fd5b81516001600160a01b03811681146100ff575f80fd5b9392505050565b6080516110686101725f395f818161028501528181610314015281816103a201528181610430015281816104c10152818161054b01528181610620015281816106c50152818161081e015281816108e00152818161096f01528181610a7f0152610bad01526110685ff3fe608060405234801561000f575f80fd5b50600436106100a6575f3560e01c80637437ff9f1161006e5780637437ff9f1461019b57806379ba5097146101f25780638da5cb5b146101fa578063e30c39781461021e578063f2fde38b1461022f578063f47d2ea714610242575f80fd5b806306285c69146100aa578063181f5a771461010957806322f3e2d4146101375780636def4ce71461014f578063715018a614610191575b5f80fd5b6100b2610255565b6040516101009190815167ffffffffffffffff1681526020808301516001600160a01b0390811691830191909152604080840151821690830152606092830151169181019190915260800190565b60405180910390f35b604080518082018252600c81526b04f6e52616d7020312e362e360a41b602082015290516101009190610d43565b61013f6104be565b6040519015158152602001610100565b61016261015d366004610d71565b610544565b6040805167ffffffffffffffff909416845291151560208401526001600160a01b031690820152606001610100565b6101996105d6565b005b6101a36105e9565b604051610100919081516001600160a01b039081168252602080840151151590830152604080840151821690830152606080840151821690830152608092830151169181019190915260a00190565b61019961075a565b5f546001600160a01b03165b6040516001600160a01b039091168152602001610100565b6001546001600160a01b0316610206565b61019961023d366004610da0565b6107a3565b610199610250366004610dbb565b610813565b604080516080810182525f80825260208201819052918101829052606081019190915260405180608001604052807f00000000000000000000000000000000000000000000000000000000000000006001600160a01b0316634e4bc8476040518163ffffffff1660e01b8152600401602060405180830381865afa1580156102df573d5f803e3d5ffd5b505050506040513d601f19601f820116820180604052508101906103039190610df2565b67ffffffffffffffff1681526020017f00000000000000000000000000000000000000000000000000000000000000006001600160a01b031663f69e20466040518163ffffffff1660e01b8152600401602060405180830381865afa15801561036e573d5f803e3d5ffd5b505050506040513d601f19601f820116820180604052508101906103929190610e0d565b6001600160a01b031681526020017f00000000000000000000000000000000000000000000000000000000000000006001600160a01b031663f69e20466040518163ffffffff1660e01b8152600401602060405180830381865afa1580156103fc573d5f803e3d5ffd5b505050506040513d601f19601f820116820180604052508101906104209190610e0d565b6001600160a01b031681526020017f00000000000000000000000000000000000000000000000000000000000000006001600160a01b031663f69e20466040518163ffffffff1660e01b8152600401602060405180830381865afa15801561048a573d5f803e3d5ffd5b505050506040513d601f19601f820116820180604052508101906104ae9190610e0d565b6001600160a01b03169052919050565b5f7f00000000000000000000000000000000000000000000000000000000000000006001600160a01b03166322f3e2d46040518163ffffffff1660e01b8152600401602060405180830381865afa15801561051b573d5f803e3d5ffd5b505050506040513d601f19601f8201168201806040525081019061053f9190610e28565b905090565b5f805f805f7f00000000000000000000000000000000000000000000000000000000000000006001600160a01b031663f69e20466040518163ffffffff1660e01b8152600401602060405180830381865afa1580156105a5573d5f803e3d5ffd5b505050506040513d601f19601f820116820180604052508101906105c99190610e0d565b9250925092509193909250565b6105de610c71565b6105e75f610c9d565b565b6040805160a0810182525f808252602082018190529181018290526060810182905260808101919091526040518060a001604052807f00000000000000000000000000000000000000000000000000000000000000006001600160a01b031663f69e20466040518163ffffffff1660e01b8152600401602060405180830381865afa15801561067a573d5f803e3d5ffd5b505050506040513d601f19601f8201168201806040525081019061069e9190610e0d565b6001600160a01b031681526020015f151581526020015f6001600160a01b031681526020017f00000000000000000000000000000000000000000000000000000000000000006001600160a01b031663f69e20466040518163ffffffff1660e01b8152600401602060405180830381865afa15801561071f573d5f803e3d5ffd5b505050506040513d601f19601f820116820180604052508101906107439190610e0d565b6001600160a01b031681525f602090910152919050565b60015433906001600160a01b031681146107975760405163118cdaa760e01b81526001600160a01b03821660048201526024015b60405180910390fd5b6107a081610c9d565b50565b6107ab610c71565b600180546001600160a01b0383166001600160a01b031990911681179091556107db5f546001600160a01b031690565b6001600160a01b03167f38d16b8cac22d99fc7c124b9cd0de2d3fa1faef420bfe791d8c362d765e2270060405160405180910390a350565b336001600160a01b037f0000000000000000000000000000000000000000000000000000000000000000161461087a5760405162461bcd60e51b815260206004820152600c60248201526b1bdb9b1e4818dbdb9d1c9bdb60a21b604482015260640161078e565b604080516101c081019091526bffffffffffffffffffffffff19606084901b166101e08201526001600160c01b031960c083901b166101f48201525f90806101208101806101fc83016040516020818303038152906040528051906020012081526020017f00000000000000000000000000000000000000000000000000000000000000006001600160a01b0316634e4bc8476040518163ffffffff1660e01b8152600401602060405180830381865afa15801561093a573d5f803e3d5ffd5b505050506040513d601f19601f8201168201806040525081019061095e9190610df2565b67ffffffffffffffff1681526020017f00000000000000000000000000000000000000000000000000000000000000006001600160a01b0316634e4bc8476040518163ffffffff1660e01b8152600401602060405180830381865afa1580156109c9573d5f803e3d5ffd5b505050506040513d601f19601f820116820180604052508101906109ed9190610df2565b67ffffffffffffffff9081168252861660208083019190915260016040928301529183526001600160a01b03871683830181905281518083018352600381526231323360e81b81850152848301528151928301526060909201910160405160208183030381529060405281526020016040518060400160405280600381526020016231323360e81b81525081526020017f00000000000000000000000000000000000000000000000000000000000000006001600160a01b031663fc0c546a6040518163ffffffff1660e01b8152600401602060405180830381865afa158015610ad9573d5f803e3d5ffd5b505050506040513d601f19601f82011682018060405250810190610afd9190610e0d565b6001600160a01b031681526020015f81526020015f81526020015f67ffffffffffffffff811115610b3057610b30610e47565b604051908082528060200260200182016040528015610b9a57816020015b610b876040518060a001604052805f6001600160a01b0316815260200160608152602001606081526020015f8152602001606081525090565b815260200190600190039081610b4e5790505b5081525090508167ffffffffffffffff167f00000000000000000000000000000000000000000000000000000000000000006001600160a01b0316634e4bc8476040518163ffffffff1660e01b8152600401602060405180830381865afa158015610c07573d5f803e3d5ffd5b505050506040513d601f19601f82011682018060405250810190610c2b9190610df2565b67ffffffffffffffff167f192442a2b2adb6a7948f097023cb6b57d29d3a7a5dd33e6666d33c39cc456f3283604051610c649190610f13565b60405180910390a3505050565b5f546001600160a01b031633146105e75760405163118cdaa760e01b815233600482015260240161078e565b600180546001600160a01b03191690556107a0815f80546001600160a01b038381166001600160a01b0319831681178455604051919092169283917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e09190a35050565b5f81518084525f5b81811015610d2457602081850181015186830182015201610d08565b505f602082860101526020601f19601f83011685010191505092915050565b602081525f610d556020830184610d00565b9392505050565b67ffffffffffffffff811681146107a0575f80fd5b5f60208284031215610d81575f80fd5b8135610d5581610d5c565b6001600160a01b03811681146107a0575f80fd5b5f60208284031215610db0575f80fd5b8135610d5581610d8c565b5f8060408385031215610dcc575f80fd5b8235610dd781610d8c565b91506020830135610de781610d5c565b809150509250929050565b5f60208284031215610e02575f80fd5b8151610d5581610d5c565b5f60208284031215610e1d575f80fd5b8151610d5581610d8c565b5f60208284031215610e38575f80fd5b81518015158114610d55575f80fd5b634e487b7160e01b5f52604160045260245ffd5b5f82825180855260208086019550808260051b8401018186015f5b84811015610f0657858303601f19018952815180516001600160a01b031684528481015160a086860181905290610eaf82870182610d00565b91505060408083015186830382880152610ec98382610d00565b92505050606080830151818701525060808083015192508582038187015250610ef28183610d00565b9a86019a9450505090830190600101610e76565b5090979650505050505050565b60208152610f6460208201835180518252602081015167ffffffffffffffff808216602085015280604084015116604085015280606084015116606085015280608084015116608085015250505050565b5f6020830151610f7f60c08401826001600160a01b03169052565b5060408301516101a08060e0850152610f9c6101c0850183610d00565b91506060850151601f19610100818786030181880152610fbc8584610d00565b9450608088015192508187860301610120880152610fda8584610d00565b945060a08801519250610ff96101408801846001600160a01b03169052565b60c088015161016088015260e08801516101808801528701518685039091018387015290506110288382610e5b565b969550505050505056fea2646970667358221220d0f61b2564627e8857f836ec148ab961b6da68eaafb74a7de92e2a6e216a8f0264736f6c6343000818003360a060405234801561000f575f80fd5b506040516113ea3803806113ea83398101604081905261002e916100d9565b338061005357604051631e4fbdf760e01b81525f600482015260240160405180910390fd5b61005c8161006e565b506001600160a01b0316608052610106565b600180546001600160a01b03191690556100878161008a565b50565b5f80546001600160a01b038381166001600160a01b0319831681178455604051919092169283917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e09190a35050565b5f602082840312156100e9575f80fd5b81516001600160a01b03811681146100ff575f80fd5b9392505050565b60805161126a6101805f395f818161026c015281816103040152818161039201528181610420015281816104b10152818161057001528181610660015281816106be015281816107730152818161082101528181610960015281816109ee01528181610ab501528181610c6b0152610d19015261126a5ff3fe608060405234801561000f575f80fd5b50600436106100b1575f3560e01c806382c9978c1161006e57806382c9978c146101b25780638da5cb5b146101ba5780638e73139f146101de578063e30c3978146101f1578063e9d68a8e14610202578063f2fde38b14610222575f80fd5b806306285c69146100b5578063181f5a771461011b57806322f3e2d41461014a578063715018a6146101625780637437ff9f1461016c57806379ba5097146101aa575b5f80fd5b6100bd610235565b6040805182516001600160401b0316815260208084015161ffff1690820152828201516001600160a01b03908116928201929092526060808401518316908201526080928301519091169181019190915260a0015b60405180910390f35b604080518082018252600d81526c04f666652616d7020312e362e3609c1b602082015290516101129190610f19565b6101526104ae565b6040519015158152602001610112565b61016a610534565b005b610174610547565b6040805182516001600160a01b03908116825260208085015163ffffffff16908301529282015190921690820152606001610112565b61016a61060c565b61016a610655565b5f546001600160a01b03165b6040516001600160a01b039091168152602001610112565b61016a6101ec366004610f46565b6108ee565b6001546001600160a01b03166101c6565b610215610210366004610f7d565b610c32565b6040516101129190610f98565b61016a61023036600461100b565b610dd7565b6040805160a0810182525f808252602082018190529181018290526060810182905260808101919091526040518060a001604052807f00000000000000000000000000000000000000000000000000000000000000006001600160a01b0316634e4bc8476040518163ffffffff1660e01b8152600401602060405180830381865afa1580156102c6573d5f803e3d5ffd5b505050506040513d601f19601f820116820180604052508101906102ea9190611026565b6001600160401b031681526020015f61ffff1681526020017f00000000000000000000000000000000000000000000000000000000000000006001600160a01b031663f69e20466040518163ffffffff1660e01b8152600401602060405180830381865afa15801561035e573d5f803e3d5ffd5b505050506040513d601f19601f820116820180604052508101906103829190611041565b6001600160a01b031681526020017f00000000000000000000000000000000000000000000000000000000000000006001600160a01b031663f69e20466040518163ffffffff1660e01b8152600401602060405180830381865afa1580156103ec573d5f803e3d5ffd5b505050506040513d601f19601f820116820180604052508101906104109190611041565b6001600160a01b031681526020017f00000000000000000000000000000000000000000000000000000000000000006001600160a01b031663f69e20466040518163ffffffff1660e01b8152600401602060405180830381865afa15801561047a573d5f803e3d5ffd5b505050506040513d601f19601f8201168201806040525081019061049e9190611041565b6001600160a01b03169052919050565b5f7f00000000000000000000000000000000000000000000000000000000000000006001600160a01b03166322f3e2d46040518163ffffffff1660e01b8152600401602060405180830381865afa15801561050b573d5f803e3d5ffd5b505050506040513d601f19601f8201168201806040525081019061052f919061105c565b905090565b61053c610e47565b6105455f610e73565b565b604080516060810182525f808252602082018190529181019190915260405180606001604052807f00000000000000000000000000000000000000000000000000000000000000006001600160a01b031663f69e20466040518163ffffffff1660e01b8152600401602060405180830381865afa1580156105ca573d5f803e3d5ffd5b505050506040513d601f19601f820116820180604052508101906105ee9190611041565b6001600160a01b03168152600a60208201525f604090910152919050565b60015433906001600160a01b031681146106495760405163118cdaa760e01b81526001600160a01b03821660048201526024015b60405180910390fd5b61065281610e73565b50565b336001600160a01b037f000000000000000000000000000000000000000000000000000000000000000016146106bc5760405162461bcd60e51b815260206004820152600c60248201526b1bdb9b1e4818dbdb9d1c9bdb60a21b6044820152606401610640565b7f00000000000000000000000000000000000000000000000000000000000000006001600160a01b0316634e4bc8476040518163ffffffff1660e01b8152600401602060405180830381865afa158015610718573d5f803e3d5ffd5b505050506040513d601f19601f8201168201806040525081019061073c9190611026565b6001600160401b03167fbd1ab25a0ff0a36a588597ba1af11e30f3f210de8b9e818cc9bbc457c94c8d8c6040518060a001604052807f00000000000000000000000000000000000000000000000000000000000000006001600160a01b031663f69e20466040518163ffffffff1660e01b8152600401602060405180830381865afa1580156107cd573d5f803e3d5ffd5b505050506040513d601f19601f820116820180604052508101906107f19190611041565b6001600160a01b031681526020016001151581526020015f6001600160401b031681526020015f151581526020017f00000000000000000000000000000000000000000000000000000000000000006001600160a01b031663c021e73c6040518163ffffffff1660e01b8152600401602060405180830381865afa15801561087b573d5f803e3d5ffd5b505050506040513d601f19601f8201168201806040525081019061089f9190611041565b6040516020016108c7919060609190911b6bffffffffffffffffffffffff1916815260140190565b60408051601f198184030181529181529152516108e49190610f98565b60405180910390a2565b604080518082018252606080825260208201528151600180825281840190935290915f9190816020015b6040805160a0810182525f808252606060208084018290529383018290528201819052608082015282525f199092019101816109185790505090506040518060a001604052807f00000000000000000000000000000000000000000000000000000000000000006001600160a01b0316634e4bc8476040518163ffffffff1660e01b8152600401602060405180830381865afa1580156109ba573d5f803e3d5ffd5b505050506040513d601f19601f820116820180604052508101906109de9190611026565b6001600160401b031681526020017f00000000000000000000000000000000000000000000000000000000000000006001600160a01b031663c021e73c6040518163ffffffff1660e01b8152600401602060405180830381865afa158015610a48573d5f803e3d5ffd5b505050506040513d601f19601f82011682018060405250810190610a6c9190611041565b604080516001600160a01b039092166020830152016040516020818303038152906040528152602001856001600160401b03168152602001846001600160401b031681526020017f00000000000000000000000000000000000000000000000000000000000000006001600160a01b031663c021e73c6040518163ffffffff1660e01b8152600401602060405180830381865afa158015610b0f573d5f803e3d5ffd5b505050506040513d601f19601f82011682018060405250810190610b339190611041565b604080516001600160a01b0390921660208301526001600160401b03808916918301919091528616606082015260800160405160208183030381529060405280519060200120815250815f81518110610b8e57610b8e61107b565b60209081029190910101527fb967c9b9e1b7af9a61ca71ff00e9f5b89ec6f2e268de8dacf12f0de8e51f3e47815f604051908082528060200260200182016040528015610c1357816020015b6040805160a0810182525f808252606060208084018290529383018290528201819052608082015282525f19909201910181610bda5790505b5084604051610c2493929190611182565b60405180910390a150505050565b6040805160a0810182525f8082526020820181905291810182905260608082019290925260808101919091526040518060a001604052807f00000000000000000000000000000000000000000000000000000000000000006001600160a01b031663f69e20466040518163ffffffff1660e01b8152600401602060405180830381865afa158015610cc5573d5f803e3d5ffd5b505050506040513d601f19601f82011682018060405250810190610ce99190611041565b6001600160a01b031681526020016001151581526020015f6001600160401b031681526020015f151581526020017f00000000000000000000000000000000000000000000000000000000000000006001600160a01b031663c021e73c6040518163ffffffff1660e01b8152600401602060405180830381865afa158015610d73573d5f803e3d5ffd5b505050506040513d601f19601f82011682018060405250810190610d979190611041565b604051602001610dbf919060609190911b6bffffffffffffffffffffffff1916815260140190565b60408051601f19818403018152919052905292915050565b610ddf610e47565b600180546001600160a01b0383166001600160a01b03199091168117909155610e0f5f546001600160a01b031690565b6001600160a01b03167f38d16b8cac22d99fc7c124b9cd0de2d3fa1faef420bfe791d8c362d765e2270060405160405180910390a350565b5f546001600160a01b031633146105455760405163118cdaa760e01b8152336004820152602401610640565b600180546001600160a01b0319169055610652815f80546001600160a01b038381166001600160a01b0319831681178455604051919092169283917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e09190a35050565b5f81518084525f5b81811015610efa57602081850181015186830182015201610ede565b505f602082860101526020601f19601f83011685010191505092915050565b602081525f610f2b6020830184610ed6565b9392505050565b6001600160401b0381168114610652575f80fd5b5f8060408385031215610f57575f80fd5b8235610f6281610f32565b91506020830135610f7281610f32565b809150509250929050565b5f60208284031215610f8d575f80fd5b8135610f2b81610f32565b6020815260018060a01b0382511660208201526020820151151560408201526001600160401b0360408301511660608201526060820151151560808201525f608083015160a080840152610fef60c0840182610ed6565b949350505050565b6001600160a01b0381168114610652575f80fd5b5f6020828403121561101b575f80fd5b8135610f2b81610ff7565b5f60208284031215611036575f80fd5b8151610f2b81610f32565b5f60208284031215611051575f80fd5b8151610f2b81610ff7565b5f6020828403121561106c575f80fd5b81518015158114610f2b575f80fd5b634e487b7160e01b5f52603260045260245ffd5b5f82825180855260208086019550808260051b8401018186015f5b8481101561111e57601f19868403018952815160a06001600160401b038083511686528683015182888801526110e283880182610ed6565b604085810151841690890152606080860151909316928801929092525060809283015192909501919091525097830197908301906001016110aa565b5090979650505050505050565b5f815180845260208085019450602084015f5b8381101561117757815180516001600160401b031688528301516001600160e01b0316838801526040909601959082019060010161113e565b509495945050505050565b606081525f611194606083018661108f565b6020838203818501526111a7828761108f565b9150604084830360408601526040830186516040855281815180845260608701915085830193505f92505b8083101561120d57835180516001600160a01b031683528601516001600160e01b0316868301529285019260019290920191908401906111d2565b5084890151935085810385870152611225818561112b565b9b9a505050505050505050505056fea2646970667358221220a58b0921e8e8dc35112d277049d7d3e083349763229e6ac77b565df73f4fb74364736f6c6343000818003360a060405234801561000f575f80fd5b50604051610afc380380610afc83398101604081905261002e916100d9565b338061005357604051631e4fbdf760e01b81525f600482015260240160405180910390fd5b61005c8161006e565b506001600160a01b0316608052610106565b600180546001600160a01b03191690556100878161008a565b50565b5f80546001600160a01b038381166001600160a01b0319831681178455604051919092169283917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e09190a35050565b5f602082840312156100e9575f80fd5b81516001600160a01b03811681146100ff575f80fd5b9392505050565b6080516109b46101485f395f818161022c015281816102c3015281816103920152818161041801528181610541015281816105d0015261067f01526109b45ff3fe608060405234801561000f575f80fd5b50600436106100b1575f3560e01c806379ba50971161006e57806379ba50971461018a5780638da5cb5b14610192578063a40e69c7146101a2578063a8d87a3b146101b7578063e30c3978146101ca578063f2fde38b146101db575f80fd5b806306285c69146100b5578063181f5a771461010157806320f938b61461014057806322f3e2d41461014a5780632e90aa2114610162578063715018a614610182575b5f80fd5b6100bd6101ee565b6040805182516bffffffffffffffffffffffff1681526020808401516001600160a01b0316908201529181015163ffffffff16908201526060015b60405180910390f35b604080518082018252601c81527f526f7574657220312e322e302046656551756f74657220312e362e3000000000602082015290516100f89190610802565b6101486102c1565b005b61015261038f565b60405190151581526020016100f8565b61016a610415565b6040516001600160a01b0390911681526020016100f8565b610148610496565b6101486104a9565b5f546001600160a01b031661016a565b6101aa6104f2565b6040516100f8919061084e565b61016a6101c53660046108c4565b61067c565b6001546001600160a01b031661016a565b6101486101e93660046108fa565b610703565b604080516060810182525f8082526020820181905291810191909152604051806060016040528060016bffffffffffffffffffffffff1681526020017f00000000000000000000000000000000000000000000000000000000000000006001600160a01b031663fc0c546a6040518163ffffffff1660e01b8152600401602060405180830381865afa158015610286573d5f803e3d5ffd5b505050506040513d601f19601f820116820180604052508101906102aa9190610915565b6001600160a01b031681525f602090910152919050565b7f00000000000000000000000000000000000000000000000000000000000000006001600160a01b031663fc0c546a6040518163ffffffff1660e01b8152600401602060405180830381865afa15801561031d573d5f803e3d5ffd5b505050506040513d601f19601f820116820180604052508101906103419190610915565b6001600160a01b03167f52f50aa6d1a95a4595361ecf953d095f125d442e4673716dede699e049de148a600142604051610385929190918252602082015260400190565b60405180910390a2565b5f7f00000000000000000000000000000000000000000000000000000000000000006001600160a01b03166322f3e2d46040518163ffffffff1660e01b8152600401602060405180830381865afa1580156103ec573d5f803e3d5ffd5b505050506040513d601f19601f820116820180604052508101906104109190610930565b905090565b5f7f00000000000000000000000000000000000000000000000000000000000000006001600160a01b031663f69e20466040518163ffffffff1660e01b8152600401602060405180830381865afa158015610472573d5f803e3d5ffd5b505050506040513d601f19601f820116820180604052508101906104109190610915565b61049e610773565b6104a75f61079f565b565b60015433906001600160a01b031681146104e65760405163118cdaa760e01b81526001600160a01b03821660048201526024015b60405180910390fd5b6104ef8161079f565b50565b6040805160018082528183019092526060915f9190816020015b604080518082019091525f808252602082015281526020019060019003908161050c57905050905060405180604001604052807f00000000000000000000000000000000000000000000000000000000000000006001600160a01b0316634e4bc8476040518163ffffffff1660e01b8152600401602060405180830381865afa15801561059b573d5f803e3d5ffd5b505050506040513d601f19601f820116820180604052508101906105bf919061094f565b67ffffffffffffffff1681526020017f00000000000000000000000000000000000000000000000000000000000000006001600160a01b03166344671a5d6040518163ffffffff1660e01b8152600401602060405180830381865afa15801561062a573d5f803e3d5ffd5b505050506040513d601f19601f8201168201806040525081019061064e9190610915565b6001600160a01b0316815250815f8151811061066c5761066c61096a565b6020908102919091010152919050565b5f7f00000000000000000000000000000000000000000000000000000000000000006001600160a01b031663c021e73c6040518163ffffffff1660e01b8152600401602060405180830381865afa1580156106d9573d5f803e3d5ffd5b505050506040513d601f19601f820116820180604052508101906106fd9190610915565b92915050565b61070b610773565b600180546001600160a01b0383166001600160a01b0319909116811790915561073b5f546001600160a01b031690565b6001600160a01b03167f38d16b8cac22d99fc7c124b9cd0de2d3fa1faef420bfe791d8c362d765e2270060405160405180910390a350565b5f546001600160a01b031633146104a75760405163118cdaa760e01b81523360048201526024016104dd565b600180546001600160a01b03191690556104ef815f80546001600160a01b038381166001600160a01b0319831681178455604051919092169283917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e09190a35050565b5f602080835283518060208501525f5b8181101561082e57858101830151858201604001528201610812565b505f604082860101526040601f19601f8301168501019250505092915050565b602080825282518282018190525f919060409081850190868401855b828110156108a2578151805167ffffffffffffffff1685528601516001600160a01b031686850152928401929085019060010161086a565b5091979650505050505050565b67ffffffffffffffff811681146104ef575f80fd5b5f602082840312156108d4575f80fd5b81356108df816108af565b9392505050565b6001600160a01b03811681146104ef575f80fd5b5f6020828403121561090a575f80fd5b81356108df816108e6565b5f60208284031215610925575f80fd5b81516108df816108e6565b5f60208284031215610940575f80fd5b815180151581146108df575f80fd5b5f6020828403121561095f575f80fd5b81516108df816108af565b634e487b7160e01b5f52603260045260245ffdfea2646970667358221220a6c53a2320b6013762fdd5c4eb84dd96692fadcfddc7f5c19d244683db5c682b64736f6c6343000818003360a060405234801561000f575f80fd5b506040516110e63803806110e683398101604081905261002e91610100565b3360808190525f805460ff191660011790558061006457604051631e4fbdf760e01b81525f600482015260240160405180910390fd5b61006d81610093565b50600480546001600160a01b0319166001600160a01b039290921691909117905561012d565b600380546001600160a01b03191690556100ac816100af565b50565b600280546001600160a01b038381166001600160a01b0319831681179093556040519116919082907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0905f90a35050565b5f60208284031215610110575f80fd5b81516001600160a01b0381168114610126575f80fd5b9392505050565b608051610f7e6101685f395f818161036b0152818161045b015281816104f9015281816106100152818161065e01526106e00152610f7e5ff3fe6080604052600436106100e7575f3560e01c806377f5b0e6116100875780638fb5f171116100575780638fb5f17114610295578063b99152d0146102c1578063e30c3978146102ee578063f2fde38b1461030b575f80fd5b806377f5b0e61461021257806379ba50971461023157806385572ffb146102455780638da5cb5b14610264575f80fd5b806322f3e2d4116100c257806322f3e2d4146101be57806324600fc3146101d25780635100fc21146101e6578063715018a6146101fe575f80fd5b806301ffc9a71461014857806306b091f91461017c578063181f5a771461019d575f80fd5b36610144575f5460ff161561010f57604051633085b8db60e01b815260040160405180910390fd5b6040513481527fe12e3b7047ff60a2dd763cf536a43597e5ce7fe7aa7476345bd4cd079912bcef9060200160405180910390a1005b5f80fd5b348015610153575f80fd5b506101676101623660046109bf565b61032a565b60405190151581526020015b60405180910390f35b348015610187575f80fd5b5061019b610196366004610a01565b610360565b005b3480156101a8575f80fd5b506101b161056b565b6040516101739190610a29565b3480156101c9575f80fd5b5061016761058b565b3480156101dd575f80fd5b5061019b610605565b3480156101f1575f80fd5b505f546101679060ff1681565b348015610209575f80fd5b5061019b610745565b34801561021d575f80fd5b5061019b61022c366004610a89565b610758565b34801561023c575f80fd5b5061019b610768565b348015610250575f80fd5b5061019b61025f366004610b34565b6107ac565b34801561026f575f80fd5b506002546001600160a01b03165b6040516001600160a01b039091168152602001610173565b3480156102a0575f80fd5b5061019b6102af366004610b78565b5f805460ff1916911515919091179055565b3480156102cc575f80fd5b506102e06102db366004610b93565b61084b565b604051908152602001610173565b3480156102f9575f80fd5b506003546001600160a01b031661027d565b348015610316575f80fd5b5061019b610325366004610b93565b6108bc565b5f6001600160e01b031982166385572ffb60e01b148061035a57506001600160e01b031982166301ffc9a760e01b145b92915050565b336001600160a01b037f000000000000000000000000000000000000000000000000000000000000000016146103a8576040516282b42960e81b815260040160405180910390fd5b6040516370a0823160e01b815230600482015282905f906001600160a01b038316906370a0823190602401602060405180830381865afa1580156103ee573d5f803e3d5ffd5b505050506040513d601f19601f820116820180604052508101906104129190610bac565b9050828110156104445760405163cf47918160e01b815260048101829052602481018490526044015b60405180910390fd5b60405163a9059cbb60e01b81526001600160a01b037f000000000000000000000000000000000000000000000000000000000000000081166004830152602482018590525f919084169063a9059cbb906044016020604051808303815f875af11580156104b3573d5f803e3d5ffd5b505050506040513d601f19601f820116820180604052508101906104d79190610bc3565b9050806104f7576040516312171d8360e31b815260040160405180910390fd5b7f00000000000000000000000000000000000000000000000000000000000000006001600160a01b0316856001600160a01b03167f6337ed398c0e8467698c581374fdce4db14922df487b5a39483079f5f59b60a48660405161055c91815260200190565b60405180910390a35050505050565b6060604051806060016040528060248152602001610f2560249139905090565b5f60045f9054906101000a90046001600160a01b03166001600160a01b03166322f3e2d46040518163ffffffff1660e01b8152600401602060405180830381865afa1580156105dc573d5f803e3d5ffd5b505050506040513d601f19601f820116820180604052508101906106009190610bc3565b905090565b336001600160a01b037f0000000000000000000000000000000000000000000000000000000000000000161461064d576040516282b42960e81b815260040160405180910390fd5b60405147905f906001600160a01b037f0000000000000000000000000000000000000000000000000000000000000000169083908381818185875af1925050503d805f81146106b7576040519150601f19603f3d011682016040523d82523d5f602084013e6106bc565b606091505b50509050806106de576040516312171d8360e31b815260040160405180910390fd5b7f00000000000000000000000000000000000000000000000000000000000000006001600160a01b03167fd50b71a2790ecccf5881141fe9ae079e17c66aace5d50ba383d443ecd398ffa58360405161073991815260200190565b60405180910390a25050565b61074d61092d565b6107565f61095a565b565b60016107648282610c62565b5050565b60035433906001600160a01b031681146107a05760405163118cdaa760e01b81526001600160a01b038216600482015260240161043b565b6107a98161095a565b50565b5f5460ff16156107d2576001604051635a4ff67160e01b815260040161043b9190610d22565b7f707732b700184c0ab3b799f43f03de9b3606a144cfb367f98291044e71972cdc81356108056040840160208501610dac565b6108126040850185610dd3565b61081f6060870187610dd3565b61082c6080890189610e1d565b604051610840989796959493929190610e8b565b60405180910390a150565b6040516370a0823160e01b81523060048201525f9082906001600160a01b038216906370a0823190602401602060405180830381865afa158015610891573d5f803e3d5ffd5b505050506040513d601f19601f820116820180604052508101906108b59190610bac565b9392505050565b6108c461092d565b600380546001600160a01b0383166001600160a01b031990911681179091556108f56002546001600160a01b031690565b6001600160a01b03167f38d16b8cac22d99fc7c124b9cd0de2d3fa1faef420bfe791d8c362d765e2270060405160405180910390a350565b6002546001600160a01b031633146107565760405163118cdaa760e01b815233600482015260240161043b565b600380546001600160a01b03191690556107a981600280546001600160a01b038381166001600160a01b0319831681179093556040519116919082907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0905f90a35050565b5f602082840312156109cf575f80fd5b81356001600160e01b0319811681146108b5575f80fd5b80356001600160a01b03811681146109fc575f80fd5b919050565b5f8060408385031215610a12575f80fd5b610a1b836109e6565b946020939093013593505050565b5f602080835283518060208501525f5b81811015610a5557858101830151858201604001528201610a39565b505f604082860101526040601f19601f8301168501019250505092915050565b634e487b7160e01b5f52604160045260245ffd5b5f60208284031215610a99575f80fd5b813567ffffffffffffffff80821115610ab0575f80fd5b818401915084601f830112610ac3575f80fd5b813581811115610ad557610ad5610a75565b604051601f8201601f19908116603f01168101908382118183101715610afd57610afd610a75565b81604052828152876020848701011115610b15575f80fd5b826020860160208301375f928101602001929092525095945050505050565b5f60208284031215610b44575f80fd5b813567ffffffffffffffff811115610b5a575f80fd5b820160a081850312156108b5575f80fd5b80151581146107a9575f80fd5b5f60208284031215610b88575f80fd5b81356108b581610b6b565b5f60208284031215610ba3575f80fd5b6108b5826109e6565b5f60208284031215610bbc575f80fd5b5051919050565b5f60208284031215610bd3575f80fd5b81516108b581610b6b565b600181811c90821680610bf257607f821691505b602082108103610c1057634e487b7160e01b5f52602260045260245ffd5b50919050565b601f821115610c5d57805f5260205f20601f840160051c81016020851015610c3b5750805b601f840160051c820191505b81811015610c5a575f8155600101610c47565b50505b505050565b815167ffffffffffffffff811115610c7c57610c7c610a75565b610c9081610c8a8454610bde565b84610c16565b602080601f831160018114610cc3575f8415610cac5750858301515b5f19600386901b1c1916600185901b178555610d1a565b5f85815260208120601f198616915b82811015610cf157888601518255948401946001909101908401610cd2565b5085821015610d0e57878501515f19600388901b60f8161c191681555b505060018460011b0185555b505050505050565b5f60208083525f8454610d3481610bde565b806020870152604060018084165f8114610d555760018114610d7157610d9e565b60ff19851660408a0152604084151560051b8a01019550610d9e565b895f5260205f205f5b85811015610d955781548b8201860152908301908801610d7a565b8a016040019650505b509398975050505050505050565b5f60208284031215610dbc575f80fd5b813567ffffffffffffffff811681146108b5575f80fd5b5f808335601e19843603018112610de8575f80fd5b83018035915067ffffffffffffffff821115610e02575f80fd5b602001915036819003821315610e16575f80fd5b9250929050565b5f808335601e19843603018112610e32575f80fd5b83018035915067ffffffffffffffff821115610e4c575f80fd5b6020019150600681901b3603821315610e16575f80fd5b81835281816020850137505f828201602090810191909152601f909101601f19169091010190565b8881525f602067ffffffffffffffff8a166020840152604060a06040850152610eb860a085018a8c610e63565b8481036060860152610ecb81898b610e63565b85810360808701528681528791506020015f5b87811015610f12576001600160a01b03610ef7846109e6565b16825282850135858301529183019190830190600101610ede565b509d9c5050505050505050505050505056fe466972656472696c6c5265766572744d657373616765526563656976657220312e302e30a2646970667358221220fba1ac2392bf4ffd9fbe649aeae96d551930a1566fcc1c1c3485ac7299574fd964736f6c63430008180033",
}

// FiredrillEntrypointABI is the input ABI used to generate the binding from.
// Deprecated: Use FiredrillEntrypointMetaData.ABI instead.
var FiredrillEntrypointABI = FiredrillEntrypointMetaData.ABI

// FiredrillEntrypointBin is the compiled bytecode used for deploying new contracts.
// Deprecated: Use FiredrillEntrypointMetaData.Bin instead.
var FiredrillEntrypointBin = FiredrillEntrypointMetaData.Bin

// DeployFiredrillEntrypoint deploys a new Ethereum contract, binding an instance of FiredrillEntrypoint to it.
func DeployFiredrillEntrypoint(auth *bind.TransactOpts, backend bind.ContractBackend, chainSelector uint64) (common.Address, *types.Transaction, *FiredrillEntrypoint, error) {
	parsed, err := FiredrillEntrypointMetaData.GetAbi()
	if err != nil {
		return common.Address{}, nil, nil, err
	}
	if parsed == nil {
		return common.Address{}, nil, nil, errors.New("GetABI returned nil")
	}

	address, tx, contract, err := bind.DeployContract(auth, *parsed, common.FromHex(FiredrillEntrypointBin), backend, chainSelector)
	if err != nil {
		return common.Address{}, nil, nil, err
	}
	return address, tx, &FiredrillEntrypoint{FiredrillEntrypointCaller: FiredrillEntrypointCaller{contract: contract}, FiredrillEntrypointTransactor: FiredrillEntrypointTransactor{contract: contract}, FiredrillEntrypointFilterer: FiredrillEntrypointFilterer{contract: contract}}, nil
}

// FiredrillEntrypoint is an auto generated Go binding around an Ethereum contract.
type FiredrillEntrypoint struct {
	FiredrillEntrypointCaller     // Read-only binding to the contract
	FiredrillEntrypointTransactor // Write-only binding to the contract
	FiredrillEntrypointFilterer   // Log filterer for contract events
}

// FiredrillEntrypointCaller is an auto generated read-only Go binding around an Ethereum contract.
type FiredrillEntrypointCaller struct {
	contract *bind.BoundContract // Generic contract wrapper for the low level calls
}

// FiredrillEntrypointTransactor is an auto generated write-only Go binding around an Ethereum contract.
type FiredrillEntrypointTransactor struct {
	contract *bind.BoundContract // Generic contract wrapper for the low level calls
}

// FiredrillEntrypointFilterer is an auto generated log filtering Go binding around an Ethereum contract events.
type FiredrillEntrypointFilterer struct {
	contract *bind.BoundContract // Generic contract wrapper for the low level calls
}

// FiredrillEntrypointSession is an auto generated Go binding around an Ethereum contract,
// with pre-set call and transact options.
type FiredrillEntrypointSession struct {
	Contract     *FiredrillEntrypoint // Generic contract binding to set the session for
	CallOpts     bind.CallOpts        // Call options to use throughout this session
	TransactOpts bind.TransactOpts    // Transaction auth options to use throughout this session
}

// FiredrillEntrypointCallerSession is an auto generated read-only Go binding around an Ethereum contract,
// with pre-set call options.
type FiredrillEntrypointCallerSession struct {
	Contract *FiredrillEntrypointCaller // Generic contract caller binding to set the session for
	CallOpts bind.CallOpts              // Call options to use throughout this session
}

// FiredrillEntrypointTransactorSession is an auto generated write-only Go binding around an Ethereum contract,
// with pre-set transact options.
type FiredrillEntrypointTransactorSession struct {
	Contract     *FiredrillEntrypointTransactor // Generic contract transactor binding to set the session for
	TransactOpts bind.TransactOpts              // Transaction auth options to use throughout this session
}

// FiredrillEntrypointRaw is an auto generated low-level Go binding around an Ethereum contract.
type FiredrillEntrypointRaw struct {
	Contract *FiredrillEntrypoint // Generic contract binding to access the raw methods on
}

// FiredrillEntrypointCallerRaw is an auto generated low-level read-only Go binding around an Ethereum contract.
type FiredrillEntrypointCallerRaw struct {
	Contract *FiredrillEntrypointCaller // Generic read-only contract binding to access the raw methods on
}

// FiredrillEntrypointTransactorRaw is an auto generated low-level write-only Go binding around an Ethereum contract.
type FiredrillEntrypointTransactorRaw struct {
	Contract *FiredrillEntrypointTransactor // Generic write-only contract binding to access the raw methods on
}

// NewFiredrillEntrypoint creates a new instance of FiredrillEntrypoint, bound to a specific deployed contract.
func NewFiredrillEntrypoint(address common.Address, backend bind.ContractBackend) (*FiredrillEntrypoint, error) {
	contract, err := bindFiredrillEntrypoint(address, backend, backend, backend)
	if err != nil {
		return nil, err
	}
	return &FiredrillEntrypoint{FiredrillEntrypointCaller: FiredrillEntrypointCaller{contract: contract}, FiredrillEntrypointTransactor: FiredrillEntrypointTransactor{contract: contract}, FiredrillEntrypointFilterer: FiredrillEntrypointFilterer{contract: contract}}, nil
}

// NewFiredrillEntrypointCaller creates a new read-only instance of FiredrillEntrypoint, bound to a specific deployed contract.
func NewFiredrillEntrypointCaller(address common.Address, caller bind.ContractCaller) (*FiredrillEntrypointCaller, error) {
	contract, err := bindFiredrillEntrypoint(address, caller, nil, nil)
	if err != nil {
		return nil, err
	}
	return &FiredrillEntrypointCaller{contract: contract}, nil
}

// NewFiredrillEntrypointTransactor creates a new write-only instance of FiredrillEntrypoint, bound to a specific deployed contract.
func NewFiredrillEntrypointTransactor(address common.Address, transactor bind.ContractTransactor) (*FiredrillEntrypointTransactor, error) {
	contract, err := bindFiredrillEntrypoint(address, nil, transactor, nil)
	if err != nil {
		return nil, err
	}
	return &FiredrillEntrypointTransactor{contract: contract}, nil
}

// NewFiredrillEntrypointFilterer creates a new log filterer instance of FiredrillEntrypoint, bound to a specific deployed contract.
func NewFiredrillEntrypointFilterer(address common.Address, filterer bind.ContractFilterer) (*FiredrillEntrypointFilterer, error) {
	contract, err := bindFiredrillEntrypoint(address, nil, nil, filterer)
	if err != nil {
		return nil, err
	}
	return &FiredrillEntrypointFilterer{contract: contract}, nil
}

// bindFiredrillEntrypoint binds a generic wrapper to an already deployed contract.
func bindFiredrillEntrypoint(address common.Address, caller bind.ContractCaller, transactor bind.ContractTransactor, filterer bind.ContractFilterer) (*bind.BoundContract, error) {
	parsed, err := FiredrillEntrypointMetaData.GetAbi()
	if err != nil {
		return nil, err
	}
	return bind.NewBoundContract(address, *parsed, caller, transactor, filterer), nil
}

// Call invokes the (constant) contract method with params as input values and
// sets the output to result. The result type might be a single field for simple
// returns, a slice of interfaces for anonymous returns and a struct for named
// returns.
func (_FiredrillEntrypoint *FiredrillEntrypointRaw) Call(opts *bind.CallOpts, result *[]interface{}, method string, params ...interface{}) error {
	return _FiredrillEntrypoint.Contract.FiredrillEntrypointCaller.contract.Call(opts, result, method, params...)
}

// Transfer initiates a plain transaction to move funds to the contract, calling
// its default method if one is available.
func (_FiredrillEntrypoint *FiredrillEntrypointRaw) Transfer(opts *bind.TransactOpts) (*types.Transaction, error) {
	return _FiredrillEntrypoint.Contract.FiredrillEntrypointTransactor.contract.Transfer(opts)
}

// Transact invokes the (paid) contract method with params as input values.
func (_FiredrillEntrypoint *FiredrillEntrypointRaw) Transact(opts *bind.TransactOpts, method string, params ...interface{}) (*types.Transaction, error) {
	return _FiredrillEntrypoint.Contract.FiredrillEntrypointTransactor.contract.Transact(opts, method, params...)
}

// Call invokes the (constant) contract method with params as input values and
// sets the output to result. The result type might be a single field for simple
// returns, a slice of interfaces for anonymous returns and a struct for named
// returns.
func (_FiredrillEntrypoint *FiredrillEntrypointCallerRaw) Call(opts *bind.CallOpts, result *[]interface{}, method string, params ...interface{}) error {
	return _FiredrillEntrypoint.Contract.contract.Call(opts, result, method, params...)
}

// Transfer initiates a plain transaction to move funds to the contract, calling
// its default method if one is available.
func (_FiredrillEntrypoint *FiredrillEntrypointTransactorRaw) Transfer(opts *bind.TransactOpts) (*types.Transaction, error) {
	return _FiredrillEntrypoint.Contract.contract.Transfer(opts)
}

// Transact invokes the (paid) contract method with params as input values.
func (_FiredrillEntrypoint *FiredrillEntrypointTransactorRaw) Transact(opts *bind.TransactOpts, method string, params ...interface{}) (*types.Transaction, error) {
	return _FiredrillEntrypoint.Contract.contract.Transact(opts, method, params...)
}

// ChainSelector is a free data retrieval call binding the contract method 0x4e4bc847.
//
// Solidity: function chainSelector() view returns(uint64)
func (_FiredrillEntrypoint *FiredrillEntrypointCaller) ChainSelector(opts *bind.CallOpts) (uint64, error) {
	var out []interface{}
	err := _FiredrillEntrypoint.contract.Call(opts, &out, "chainSelector")

	if err != nil {
		return *new(uint64), err
	}

	out0 := *abi.ConvertType(out[0], new(uint64)).(*uint64)

	return out0, err

}

// ChainSelector is a free data retrieval call binding the contract method 0x4e4bc847.
//
// Solidity: function chainSelector() view returns(uint64)
func (_FiredrillEntrypoint *FiredrillEntrypointSession) ChainSelector() (uint64, error) {
	return _FiredrillEntrypoint.Contract.ChainSelector(&_FiredrillEntrypoint.CallOpts)
}

// ChainSelector is a free data retrieval call binding the contract method 0x4e4bc847.
//
// Solidity: function chainSelector() view returns(uint64)
func (_FiredrillEntrypoint *FiredrillEntrypointCallerSession) ChainSelector() (uint64, error) {
	return _FiredrillEntrypoint.Contract.ChainSelector(&_FiredrillEntrypoint.CallOpts)
}

// Compound is a free data retrieval call binding the contract method 0xf69e2046.
//
// Solidity: function compound() view returns(address)
func (_FiredrillEntrypoint *FiredrillEntrypointCaller) Compound(opts *bind.CallOpts) (common.Address, error) {
	var out []interface{}
	err := _FiredrillEntrypoint.contract.Call(opts, &out, "compound")

	if err != nil {
		return *new(common.Address), err
	}

	out0 := *abi.ConvertType(out[0], new(common.Address)).(*common.Address)

	return out0, err

}

// Compound is a free data retrieval call binding the contract method 0xf69e2046.
//
// Solidity: function compound() view returns(address)
func (_FiredrillEntrypoint *FiredrillEntrypointSession) Compound() (common.Address, error) {
	return _FiredrillEntrypoint.Contract.Compound(&_FiredrillEntrypoint.CallOpts)
}

// Compound is a free data retrieval call binding the contract method 0xf69e2046.
//
// Solidity: function compound() view returns(address)
func (_FiredrillEntrypoint *FiredrillEntrypointCallerSession) Compound() (common.Address, error) {
	return _FiredrillEntrypoint.Contract.Compound(&_FiredrillEntrypoint.CallOpts)
}

// IsActive is a free data retrieval call binding the contract method 0x22f3e2d4.
//
// Solidity: function isActive() view returns(bool)
func (_FiredrillEntrypoint *FiredrillEntrypointCaller) IsActive(opts *bind.CallOpts) (bool, error) {
	var out []interface{}
	err := _FiredrillEntrypoint.contract.Call(opts, &out, "isActive")

	if err != nil {
		return *new(bool), err
	}

	out0 := *abi.ConvertType(out[0], new(bool)).(*bool)

	return out0, err

}

// IsActive is a free data retrieval call binding the contract method 0x22f3e2d4.
//
// Solidity: function isActive() view returns(bool)
func (_FiredrillEntrypoint *FiredrillEntrypointSession) IsActive() (bool, error) {
	return _FiredrillEntrypoint.Contract.IsActive(&_FiredrillEntrypoint.CallOpts)
}

// IsActive is a free data retrieval call binding the contract method 0x22f3e2d4.
//
// Solidity: function isActive() view returns(bool)
func (_FiredrillEntrypoint *FiredrillEntrypointCallerSession) IsActive() (bool, error) {
	return _FiredrillEntrypoint.Contract.IsActive(&_FiredrillEntrypoint.CallOpts)
}

// OffRamp is a free data retrieval call binding the contract method 0x44671a5d.
//
// Solidity: function offRamp() view returns(address)
func (_FiredrillEntrypoint *FiredrillEntrypointCaller) OffRamp(opts *bind.CallOpts) (common.Address, error) {
	var out []interface{}
	err := _FiredrillEntrypoint.contract.Call(opts, &out, "offRamp")

	if err != nil {
		return *new(common.Address), err
	}

	out0 := *abi.ConvertType(out[0], new(common.Address)).(*common.Address)

	return out0, err

}

// OffRamp is a free data retrieval call binding the contract method 0x44671a5d.
//
// Solidity: function offRamp() view returns(address)
func (_FiredrillEntrypoint *FiredrillEntrypointSession) OffRamp() (common.Address, error) {
	return _FiredrillEntrypoint.Contract.OffRamp(&_FiredrillEntrypoint.CallOpts)
}

// OffRamp is a free data retrieval call binding the contract method 0x44671a5d.
//
// Solidity: function offRamp() view returns(address)
func (_FiredrillEntrypoint *FiredrillEntrypointCallerSession) OffRamp() (common.Address, error) {
	return _FiredrillEntrypoint.Contract.OffRamp(&_FiredrillEntrypoint.CallOpts)
}

// OnRamp is a free data retrieval call binding the contract method 0xc021e73c.
//
// Solidity: function onRamp() view returns(address)
func (_FiredrillEntrypoint *FiredrillEntrypointCaller) OnRamp(opts *bind.CallOpts) (common.Address, error) {
	var out []interface{}
	err := _FiredrillEntrypoint.contract.Call(opts, &out, "onRamp")

	if err != nil {
		return *new(common.Address), err
	}

	out0 := *abi.ConvertType(out[0], new(common.Address)).(*common.Address)

	return out0, err

}

// OnRamp is a free data retrieval call binding the contract method 0xc021e73c.
//
// Solidity: function onRamp() view returns(address)
func (_FiredrillEntrypoint *FiredrillEntrypointSession) OnRamp() (common.Address, error) {
	return _FiredrillEntrypoint.Contract.OnRamp(&_FiredrillEntrypoint.CallOpts)
}

// OnRamp is a free data retrieval call binding the contract method 0xc021e73c.
//
// Solidity: function onRamp() view returns(address)
func (_FiredrillEntrypoint *FiredrillEntrypointCallerSession) OnRamp() (common.Address, error) {
	return _FiredrillEntrypoint.Contract.OnRamp(&_FiredrillEntrypoint.CallOpts)
}

// Owner is a free data retrieval call binding the contract method 0x8da5cb5b.
//
// Solidity: function owner() view returns(address)
func (_FiredrillEntrypoint *FiredrillEntrypointCaller) Owner(opts *bind.CallOpts) (common.Address, error) {
	var out []interface{}
	err := _FiredrillEntrypoint.contract.Call(opts, &out, "owner")

	if err != nil {
		return *new(common.Address), err
	}

	out0 := *abi.ConvertType(out[0], new(common.Address)).(*common.Address)

	return out0, err

}

// Owner is a free data retrieval call binding the contract method 0x8da5cb5b.
//
// Solidity: function owner() view returns(address)
func (_FiredrillEntrypoint *FiredrillEntrypointSession) Owner() (common.Address, error) {
	return _FiredrillEntrypoint.Contract.Owner(&_FiredrillEntrypoint.CallOpts)
}

// Owner is a free data retrieval call binding the contract method 0x8da5cb5b.
//
// Solidity: function owner() view returns(address)
func (_FiredrillEntrypoint *FiredrillEntrypointCallerSession) Owner() (common.Address, error) {
	return _FiredrillEntrypoint.Contract.Owner(&_FiredrillEntrypoint.CallOpts)
}

// PendingOwner is a free data retrieval call binding the contract method 0xe30c3978.
//
// Solidity: function pendingOwner() view returns(address)
func (_FiredrillEntrypoint *FiredrillEntrypointCaller) PendingOwner(opts *bind.CallOpts) (common.Address, error) {
	var out []interface{}
	err := _FiredrillEntrypoint.contract.Call(opts, &out, "pendingOwner")

	if err != nil {
		return *new(common.Address), err
	}

	out0 := *abi.ConvertType(out[0], new(common.Address)).(*common.Address)

	return out0, err

}

// PendingOwner is a free data retrieval call binding the contract method 0xe30c3978.
//
// Solidity: function pendingOwner() view returns(address)
func (_FiredrillEntrypoint *FiredrillEntrypointSession) PendingOwner() (common.Address, error) {
	return _FiredrillEntrypoint.Contract.PendingOwner(&_FiredrillEntrypoint.CallOpts)
}

// PendingOwner is a free data retrieval call binding the contract method 0xe30c3978.
//
// Solidity: function pendingOwner() view returns(address)
func (_FiredrillEntrypoint *FiredrillEntrypointCallerSession) PendingOwner() (common.Address, error) {
	return _FiredrillEntrypoint.Contract.PendingOwner(&_FiredrillEntrypoint.CallOpts)
}

// Receiver is a free data retrieval call binding the contract method 0xf7260d3e.
//
// Solidity: function receiver() view returns(address)
func (_FiredrillEntrypoint *FiredrillEntrypointCaller) Receiver(opts *bind.CallOpts) (common.Address, error) {
	var out []interface{}
	err := _FiredrillEntrypoint.contract.Call(opts, &out, "receiver")

	if err != nil {
		return *new(common.Address), err
	}

	out0 := *abi.ConvertType(out[0], new(common.Address)).(*common.Address)

	return out0, err

}

// Receiver is a free data retrieval call binding the contract method 0xf7260d3e.
//
// Solidity: function receiver() view returns(address)
func (_FiredrillEntrypoint *FiredrillEntrypointSession) Receiver() (common.Address, error) {
	return _FiredrillEntrypoint.Contract.Receiver(&_FiredrillEntrypoint.CallOpts)
}

// Receiver is a free data retrieval call binding the contract method 0xf7260d3e.
//
// Solidity: function receiver() view returns(address)
func (_FiredrillEntrypoint *FiredrillEntrypointCallerSession) Receiver() (common.Address, error) {
	return _FiredrillEntrypoint.Contract.Receiver(&_FiredrillEntrypoint.CallOpts)
}

// Token is a free data retrieval call binding the contract method 0xfc0c546a.
//
// Solidity: function token() view returns(address)
func (_FiredrillEntrypoint *FiredrillEntrypointCaller) Token(opts *bind.CallOpts) (common.Address, error) {
	var out []interface{}
	err := _FiredrillEntrypoint.contract.Call(opts, &out, "token")

	if err != nil {
		return *new(common.Address), err
	}

	out0 := *abi.ConvertType(out[0], new(common.Address)).(*common.Address)

	return out0, err

}

// Token is a free data retrieval call binding the contract method 0xfc0c546a.
//
// Solidity: function token() view returns(address)
func (_FiredrillEntrypoint *FiredrillEntrypointSession) Token() (common.Address, error) {
	return _FiredrillEntrypoint.Contract.Token(&_FiredrillEntrypoint.CallOpts)
}

// Token is a free data retrieval call binding the contract method 0xfc0c546a.
//
// Solidity: function token() view returns(address)
func (_FiredrillEntrypoint *FiredrillEntrypointCallerSession) Token() (common.Address, error) {
	return _FiredrillEntrypoint.Contract.Token(&_FiredrillEntrypoint.CallOpts)
}

// TypeAndVersion is a free data retrieval call binding the contract method 0x181f5a77.
//
// Solidity: function typeAndVersion() pure returns(string)
func (_FiredrillEntrypoint *FiredrillEntrypointCaller) TypeAndVersion(opts *bind.CallOpts) (string, error) {
	var out []interface{}
	err := _FiredrillEntrypoint.contract.Call(opts, &out, "typeAndVersion")

	if err != nil {
		return *new(string), err
	}

	out0 := *abi.ConvertType(out[0], new(string)).(*string)

	return out0, err

}

// TypeAndVersion is a free data retrieval call binding the contract method 0x181f5a77.
//
// Solidity: function typeAndVersion() pure returns(string)
func (_FiredrillEntrypoint *FiredrillEntrypointSession) TypeAndVersion() (string, error) {
	return _FiredrillEntrypoint.Contract.TypeAndVersion(&_FiredrillEntrypoint.CallOpts)
}

// TypeAndVersion is a free data retrieval call binding the contract method 0x181f5a77.
//
// Solidity: function typeAndVersion() pure returns(string)
func (_FiredrillEntrypoint *FiredrillEntrypointCallerSession) TypeAndVersion() (string, error) {
	return _FiredrillEntrypoint.Contract.TypeAndVersion(&_FiredrillEntrypoint.CallOpts)
}

// AcceptOwnership is a paid mutator transaction binding the contract method 0x79ba5097.
//
// Solidity: function acceptOwnership() returns()
func (_FiredrillEntrypoint *FiredrillEntrypointTransactor) AcceptOwnership(opts *bind.TransactOpts) (*types.Transaction, error) {
	return _FiredrillEntrypoint.contract.Transact(opts, "acceptOwnership")
}

// AcceptOwnership is a paid mutator transaction binding the contract method 0x79ba5097.
//
// Solidity: function acceptOwnership() returns()
func (_FiredrillEntrypoint *FiredrillEntrypointSession) AcceptOwnership() (*types.Transaction, error) {
	return _FiredrillEntrypoint.Contract.AcceptOwnership(&_FiredrillEntrypoint.TransactOpts)
}

// AcceptOwnership is a paid mutator transaction binding the contract method 0x79ba5097.
//
// Solidity: function acceptOwnership() returns()
func (_FiredrillEntrypoint *FiredrillEntrypointTransactorSession) AcceptOwnership() (*types.Transaction, error) {
	return _FiredrillEntrypoint.Contract.AcceptOwnership(&_FiredrillEntrypoint.TransactOpts)
}

// Deactivate is a paid mutator transaction binding the contract method 0x51b42b00.
//
// Solidity: function deactivate() returns()
func (_FiredrillEntrypoint *FiredrillEntrypointTransactor) Deactivate(opts *bind.TransactOpts) (*types.Transaction, error) {
	return _FiredrillEntrypoint.contract.Transact(opts, "deactivate")
}

// Deactivate is a paid mutator transaction binding the contract method 0x51b42b00.
//
// Solidity: function deactivate() returns()
func (_FiredrillEntrypoint *FiredrillEntrypointSession) Deactivate() (*types.Transaction, error) {
	return _FiredrillEntrypoint.Contract.Deactivate(&_FiredrillEntrypoint.TransactOpts)
}

// Deactivate is a paid mutator transaction binding the contract method 0x51b42b00.
//
// Solidity: function deactivate() returns()
func (_FiredrillEntrypoint *FiredrillEntrypointTransactorSession) Deactivate() (*types.Transaction, error) {
	return _FiredrillEntrypoint.Contract.Deactivate(&_FiredrillEntrypoint.TransactOpts)
}

// DrillPendingCommitPendingQueueTxSpike is a paid mutator transaction binding the contract method 0x1fc9cf15.
//
// Solidity: function drill_PendingCommit_PendingQueue_TxSpike(uint8 from, uint8 to) returns()
func (_FiredrillEntrypoint *FiredrillEntrypointTransactor) DrillPendingCommitPendingQueueTxSpike(opts *bind.TransactOpts, from uint8, to uint8) (*types.Transaction, error) {
	return _FiredrillEntrypoint.contract.Transact(opts, "drill_PendingCommit_PendingQueue_TxSpike", from, to)
}

// DrillPendingCommitPendingQueueTxSpike is a paid mutator transaction binding the contract method 0x1fc9cf15.
//
// Solidity: function drill_PendingCommit_PendingQueue_TxSpike(uint8 from, uint8 to) returns()
func (_FiredrillEntrypoint *FiredrillEntrypointSession) DrillPendingCommitPendingQueueTxSpike(from uint8, to uint8) (*types.Transaction, error) {
	return _FiredrillEntrypoint.Contract.DrillPendingCommitPendingQueueTxSpike(&_FiredrillEntrypoint.TransactOpts, from, to)
}

// DrillPendingCommitPendingQueueTxSpike is a paid mutator transaction binding the contract method 0x1fc9cf15.
//
// Solidity: function drill_PendingCommit_PendingQueue_TxSpike(uint8 from, uint8 to) returns()
func (_FiredrillEntrypoint *FiredrillEntrypointTransactorSession) DrillPendingCommitPendingQueueTxSpike(from uint8, to uint8) (*types.Transaction, error) {
	return _FiredrillEntrypoint.Contract.DrillPendingCommitPendingQueueTxSpike(&_FiredrillEntrypoint.TransactOpts, from, to)
}

// DrillPendingExecution is a paid mutator transaction binding the contract method 0x8abfab01.
//
// Solidity: function drill_PendingExecution(uint8 from, uint8 to) returns()
func (_FiredrillEntrypoint *FiredrillEntrypointTransactor) DrillPendingExecution(opts *bind.TransactOpts, from uint8, to uint8) (*types.Transaction, error) {
	return _FiredrillEntrypoint.contract.Transact(opts, "drill_PendingExecution", from, to)
}

// DrillPendingExecution is a paid mutator transaction binding the contract method 0x8abfab01.
//
// Solidity: function drill_PendingExecution(uint8 from, uint8 to) returns()
func (_FiredrillEntrypoint *FiredrillEntrypointSession) DrillPendingExecution(from uint8, to uint8) (*types.Transaction, error) {
	return _FiredrillEntrypoint.Contract.DrillPendingExecution(&_FiredrillEntrypoint.TransactOpts, from, to)
}

// DrillPendingExecution is a paid mutator transaction binding the contract method 0x8abfab01.
//
// Solidity: function drill_PendingExecution(uint8 from, uint8 to) returns()
func (_FiredrillEntrypoint *FiredrillEntrypointTransactorSession) DrillPendingExecution(from uint8, to uint8) (*types.Transaction, error) {
	return _FiredrillEntrypoint.Contract.DrillPendingExecution(&_FiredrillEntrypoint.TransactOpts, from, to)
}

// DrillPriceRegistries is a paid mutator transaction binding the contract method 0xee301c16.
//
// Solidity: function drill_PriceRegistries() returns()
func (_FiredrillEntrypoint *FiredrillEntrypointTransactor) DrillPriceRegistries(opts *bind.TransactOpts) (*types.Transaction, error) {
	return _FiredrillEntrypoint.contract.Transact(opts, "drill_PriceRegistries")
}

// DrillPriceRegistries is a paid mutator transaction binding the contract method 0xee301c16.
//
// Solidity: function drill_PriceRegistries() returns()
func (_FiredrillEntrypoint *FiredrillEntrypointSession) DrillPriceRegistries() (*types.Transaction, error) {
	return _FiredrillEntrypoint.Contract.DrillPriceRegistries(&_FiredrillEntrypoint.TransactOpts)
}

// DrillPriceRegistries is a paid mutator transaction binding the contract method 0xee301c16.
//
// Solidity: function drill_PriceRegistries() returns()
func (_FiredrillEntrypoint *FiredrillEntrypointTransactorSession) DrillPriceRegistries() (*types.Transaction, error) {
	return _FiredrillEntrypoint.Contract.DrillPriceRegistries(&_FiredrillEntrypoint.TransactOpts)
}

// PrepareRegister is a paid mutator transaction binding the contract method 0xe311a009.
//
// Solidity: function prepare_Register() returns()
func (_FiredrillEntrypoint *FiredrillEntrypointTransactor) PrepareRegister(opts *bind.TransactOpts) (*types.Transaction, error) {
	return _FiredrillEntrypoint.contract.Transact(opts, "prepare_Register")
}

// PrepareRegister is a paid mutator transaction binding the contract method 0xe311a009.
//
// Solidity: function prepare_Register() returns()
func (_FiredrillEntrypoint *FiredrillEntrypointSession) PrepareRegister() (*types.Transaction, error) {
	return _FiredrillEntrypoint.Contract.PrepareRegister(&_FiredrillEntrypoint.TransactOpts)
}

// PrepareRegister is a paid mutator transaction binding the contract method 0xe311a009.
//
// Solidity: function prepare_Register() returns()
func (_FiredrillEntrypoint *FiredrillEntrypointTransactorSession) PrepareRegister() (*types.Transaction, error) {
	return _FiredrillEntrypoint.Contract.PrepareRegister(&_FiredrillEntrypoint.TransactOpts)
}

// RenounceOwnership is a paid mutator transaction binding the contract method 0x715018a6.
//
// Solidity: function renounceOwnership() returns()
func (_FiredrillEntrypoint *FiredrillEntrypointTransactor) RenounceOwnership(opts *bind.TransactOpts) (*types.Transaction, error) {
	return _FiredrillEntrypoint.contract.Transact(opts, "renounceOwnership")
}

// RenounceOwnership is a paid mutator transaction binding the contract method 0x715018a6.
//
// Solidity: function renounceOwnership() returns()
func (_FiredrillEntrypoint *FiredrillEntrypointSession) RenounceOwnership() (*types.Transaction, error) {
	return _FiredrillEntrypoint.Contract.RenounceOwnership(&_FiredrillEntrypoint.TransactOpts)
}

// RenounceOwnership is a paid mutator transaction binding the contract method 0x715018a6.
//
// Solidity: function renounceOwnership() returns()
func (_FiredrillEntrypoint *FiredrillEntrypointTransactorSession) RenounceOwnership() (*types.Transaction, error) {
	return _FiredrillEntrypoint.Contract.RenounceOwnership(&_FiredrillEntrypoint.TransactOpts)
}

// TransferOwnership is a paid mutator transaction binding the contract method 0xf2fde38b.
//
// Solidity: function transferOwnership(address newOwner) returns()
func (_FiredrillEntrypoint *FiredrillEntrypointTransactor) TransferOwnership(opts *bind.TransactOpts, newOwner common.Address) (*types.Transaction, error) {
	return _FiredrillEntrypoint.contract.Transact(opts, "transferOwnership", newOwner)
}

// TransferOwnership is a paid mutator transaction binding the contract method 0xf2fde38b.
//
// Solidity: function transferOwnership(address newOwner) returns()
func (_FiredrillEntrypoint *FiredrillEntrypointSession) TransferOwnership(newOwner common.Address) (*types.Transaction, error) {
	return _FiredrillEntrypoint.Contract.TransferOwnership(&_FiredrillEntrypoint.TransactOpts, newOwner)
}

// TransferOwnership is a paid mutator transaction binding the contract method 0xf2fde38b.
//
// Solidity: function transferOwnership(address newOwner) returns()
func (_FiredrillEntrypoint *FiredrillEntrypointTransactorSession) TransferOwnership(newOwner common.Address) (*types.Transaction, error) {
	return _FiredrillEntrypoint.Contract.TransferOwnership(&_FiredrillEntrypoint.TransactOpts, newOwner)
}

// FiredrillEntrypointOwnershipTransferStartedIterator is returned from FilterOwnershipTransferStarted and is used to iterate over the raw logs and unpacked data for OwnershipTransferStarted events raised by the FiredrillEntrypoint contract.
type FiredrillEntrypointOwnershipTransferStartedIterator struct {
	Event *FiredrillEntrypointOwnershipTransferStarted // Event containing the contract specifics and raw log

	contract *bind.BoundContract // Generic contract to use for unpacking event data
	event    string              // Event name to use for unpacking event data

	logs chan types.Log        // Log channel receiving the found contract events
	sub  ethereum.Subscription // Subscription for errors, completion and termination
	done bool                  // Whether the subscription completed delivering logs
	fail error                 // Occurred error to stop iteration
}

// Next advances the iterator to the subsequent event, returning whether there
// are any more events found. In case of a retrieval or parsing error, false is
// returned and Error() can be queried for the exact failure.
func (it *FiredrillEntrypointOwnershipTransferStartedIterator) Next() bool {
	// If the iterator failed, stop iterating
	if it.fail != nil {
		return false
	}
	// If the iterator completed, deliver directly whatever's available
	if it.done {
		select {
		case log := <-it.logs:
			it.Event = new(FiredrillEntrypointOwnershipTransferStarted)
			if err := it.contract.UnpackLog(it.Event, it.event, log); err != nil {
				it.fail = err
				return false
			}
			it.Event.Raw = log
			return true

		default:
			return false
		}
	}
	// Iterator still in progress, wait for either a data or an error event
	select {
	case log := <-it.logs:
		it.Event = new(FiredrillEntrypointOwnershipTransferStarted)
		if err := it.contract.UnpackLog(it.Event, it.event, log); err != nil {
			it.fail = err
			return false
		}
		it.Event.Raw = log
		return true

	case err := <-it.sub.Err():
		it.done = true
		it.fail = err
		return it.Next()
	}
}

// Error returns any retrieval or parsing error occurred during filtering.
func (it *FiredrillEntrypointOwnershipTransferStartedIterator) Error() error {
	return it.fail
}

// Close terminates the iteration process, releasing any pending underlying
// resources.
func (it *FiredrillEntrypointOwnershipTransferStartedIterator) Close() error {
	it.sub.Unsubscribe()
	return nil
}

// FiredrillEntrypointOwnershipTransferStarted represents a OwnershipTransferStarted event raised by the FiredrillEntrypoint contract.
type FiredrillEntrypointOwnershipTransferStarted struct {
	PreviousOwner common.Address
	NewOwner      common.Address
	Raw           types.Log // Blockchain specific contextual infos
}

// FilterOwnershipTransferStarted is a free log retrieval operation binding the contract event 0x38d16b8cac22d99fc7c124b9cd0de2d3fa1faef420bfe791d8c362d765e22700.
//
// Solidity: event OwnershipTransferStarted(address indexed previousOwner, address indexed newOwner)
func (_FiredrillEntrypoint *FiredrillEntrypointFilterer) FilterOwnershipTransferStarted(opts *bind.FilterOpts, previousOwner []common.Address, newOwner []common.Address) (*FiredrillEntrypointOwnershipTransferStartedIterator, error) {

	var previousOwnerRule []interface{}
	for _, previousOwnerItem := range previousOwner {
		previousOwnerRule = append(previousOwnerRule, previousOwnerItem)
	}
	var newOwnerRule []interface{}
	for _, newOwnerItem := range newOwner {
		newOwnerRule = append(newOwnerRule, newOwnerItem)
	}

	logs, sub, err := _FiredrillEntrypoint.contract.FilterLogs(opts, "OwnershipTransferStarted", previousOwnerRule, newOwnerRule)
	if err != nil {
		return nil, err
	}
	return &FiredrillEntrypointOwnershipTransferStartedIterator{contract: _FiredrillEntrypoint.contract, event: "OwnershipTransferStarted", logs: logs, sub: sub}, nil
}

// WatchOwnershipTransferStarted is a free log subscription operation binding the contract event 0x38d16b8cac22d99fc7c124b9cd0de2d3fa1faef420bfe791d8c362d765e22700.
//
// Solidity: event OwnershipTransferStarted(address indexed previousOwner, address indexed newOwner)
func (_FiredrillEntrypoint *FiredrillEntrypointFilterer) WatchOwnershipTransferStarted(opts *bind.WatchOpts, sink chan<- *FiredrillEntrypointOwnershipTransferStarted, previousOwner []common.Address, newOwner []common.Address) (event.Subscription, error) {

	var previousOwnerRule []interface{}
	for _, previousOwnerItem := range previousOwner {
		previousOwnerRule = append(previousOwnerRule, previousOwnerItem)
	}
	var newOwnerRule []interface{}
	for _, newOwnerItem := range newOwner {
		newOwnerRule = append(newOwnerRule, newOwnerItem)
	}

	logs, sub, err := _FiredrillEntrypoint.contract.WatchLogs(opts, "OwnershipTransferStarted", previousOwnerRule, newOwnerRule)
	if err != nil {
		return nil, err
	}
	return event.NewSubscription(func(quit <-chan struct{}) error {
		defer sub.Unsubscribe()
		for {
			select {
			case log := <-logs:
				// New log arrived, parse the event and forward to the user
				event := new(FiredrillEntrypointOwnershipTransferStarted)
				if err := _FiredrillEntrypoint.contract.UnpackLog(event, "OwnershipTransferStarted", log); err != nil {
					return err
				}
				event.Raw = log

				select {
				case sink <- event:
				case err := <-sub.Err():
					return err
				case <-quit:
					return nil
				}
			case err := <-sub.Err():
				return err
			case <-quit:
				return nil
			}
		}
	}), nil
}

// ParseOwnershipTransferStarted is a log parse operation binding the contract event 0x38d16b8cac22d99fc7c124b9cd0de2d3fa1faef420bfe791d8c362d765e22700.
//
// Solidity: event OwnershipTransferStarted(address indexed previousOwner, address indexed newOwner)
func (_FiredrillEntrypoint *FiredrillEntrypointFilterer) ParseOwnershipTransferStarted(log types.Log) (*FiredrillEntrypointOwnershipTransferStarted, error) {
	event := new(FiredrillEntrypointOwnershipTransferStarted)
	if err := _FiredrillEntrypoint.contract.UnpackLog(event, "OwnershipTransferStarted", log); err != nil {
		return nil, err
	}
	event.Raw = log
	return event, nil
}

// FiredrillEntrypointOwnershipTransferredIterator is returned from FilterOwnershipTransferred and is used to iterate over the raw logs and unpacked data for OwnershipTransferred events raised by the FiredrillEntrypoint contract.
type FiredrillEntrypointOwnershipTransferredIterator struct {
	Event *FiredrillEntrypointOwnershipTransferred // Event containing the contract specifics and raw log

	contract *bind.BoundContract // Generic contract to use for unpacking event data
	event    string              // Event name to use for unpacking event data

	logs chan types.Log        // Log channel receiving the found contract events
	sub  ethereum.Subscription // Subscription for errors, completion and termination
	done bool                  // Whether the subscription completed delivering logs
	fail error                 // Occurred error to stop iteration
}

// Next advances the iterator to the subsequent event, returning whether there
// are any more events found. In case of a retrieval or parsing error, false is
// returned and Error() can be queried for the exact failure.
func (it *FiredrillEntrypointOwnershipTransferredIterator) Next() bool {
	// If the iterator failed, stop iterating
	if it.fail != nil {
		return false
	}
	// If the iterator completed, deliver directly whatever's available
	if it.done {
		select {
		case log := <-it.logs:
			it.Event = new(FiredrillEntrypointOwnershipTransferred)
			if err := it.contract.UnpackLog(it.Event, it.event, log); err != nil {
				it.fail = err
				return false
			}
			it.Event.Raw = log
			return true

		default:
			return false
		}
	}
	// Iterator still in progress, wait for either a data or an error event
	select {
	case log := <-it.logs:
		it.Event = new(FiredrillEntrypointOwnershipTransferred)
		if err := it.contract.UnpackLog(it.Event, it.event, log); err != nil {
			it.fail = err
			return false
		}
		it.Event.Raw = log
		return true

	case err := <-it.sub.Err():
		it.done = true
		it.fail = err
		return it.Next()
	}
}

// Error returns any retrieval or parsing error occurred during filtering.
func (it *FiredrillEntrypointOwnershipTransferredIterator) Error() error {
	return it.fail
}

// Close terminates the iteration process, releasing any pending underlying
// resources.
func (it *FiredrillEntrypointOwnershipTransferredIterator) Close() error {
	it.sub.Unsubscribe()
	return nil
}

// FiredrillEntrypointOwnershipTransferred represents a OwnershipTransferred event raised by the FiredrillEntrypoint contract.
type FiredrillEntrypointOwnershipTransferred struct {
	PreviousOwner common.Address
	NewOwner      common.Address
	Raw           types.Log // Blockchain specific contextual infos
}

// FilterOwnershipTransferred is a free log retrieval operation binding the contract event 0x8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0.
//
// Solidity: event OwnershipTransferred(address indexed previousOwner, address indexed newOwner)
func (_FiredrillEntrypoint *FiredrillEntrypointFilterer) FilterOwnershipTransferred(opts *bind.FilterOpts, previousOwner []common.Address, newOwner []common.Address) (*FiredrillEntrypointOwnershipTransferredIterator, error) {

	var previousOwnerRule []interface{}
	for _, previousOwnerItem := range previousOwner {
		previousOwnerRule = append(previousOwnerRule, previousOwnerItem)
	}
	var newOwnerRule []interface{}
	for _, newOwnerItem := range newOwner {
		newOwnerRule = append(newOwnerRule, newOwnerItem)
	}

	logs, sub, err := _FiredrillEntrypoint.contract.FilterLogs(opts, "OwnershipTransferred", previousOwnerRule, newOwnerRule)
	if err != nil {
		return nil, err
	}
	return &FiredrillEntrypointOwnershipTransferredIterator{contract: _FiredrillEntrypoint.contract, event: "OwnershipTransferred", logs: logs, sub: sub}, nil
}

// WatchOwnershipTransferred is a free log subscription operation binding the contract event 0x8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0.
//
// Solidity: event OwnershipTransferred(address indexed previousOwner, address indexed newOwner)
func (_FiredrillEntrypoint *FiredrillEntrypointFilterer) WatchOwnershipTransferred(opts *bind.WatchOpts, sink chan<- *FiredrillEntrypointOwnershipTransferred, previousOwner []common.Address, newOwner []common.Address) (event.Subscription, error) {

	var previousOwnerRule []interface{}
	for _, previousOwnerItem := range previousOwner {
		previousOwnerRule = append(previousOwnerRule, previousOwnerItem)
	}
	var newOwnerRule []interface{}
	for _, newOwnerItem := range newOwner {
		newOwnerRule = append(newOwnerRule, newOwnerItem)
	}

	logs, sub, err := _FiredrillEntrypoint.contract.WatchLogs(opts, "OwnershipTransferred", previousOwnerRule, newOwnerRule)
	if err != nil {
		return nil, err
	}
	return event.NewSubscription(func(quit <-chan struct{}) error {
		defer sub.Unsubscribe()
		for {
			select {
			case log := <-logs:
				// New log arrived, parse the event and forward to the user
				event := new(FiredrillEntrypointOwnershipTransferred)
				if err := _FiredrillEntrypoint.contract.UnpackLog(event, "OwnershipTransferred", log); err != nil {
					return err
				}
				event.Raw = log

				select {
				case sink <- event:
				case err := <-sub.Err():
					return err
				case <-quit:
					return nil
				}
			case err := <-sub.Err():
				return err
			case <-quit:
				return nil
			}
		}
	}), nil
}

// ParseOwnershipTransferred is a log parse operation binding the contract event 0x8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0.
//
// Solidity: event OwnershipTransferred(address indexed previousOwner, address indexed newOwner)
func (_FiredrillEntrypoint *FiredrillEntrypointFilterer) ParseOwnershipTransferred(log types.Log) (*FiredrillEntrypointOwnershipTransferred, error) {
	event := new(FiredrillEntrypointOwnershipTransferred)
	if err := _FiredrillEntrypoint.contract.UnpackLog(event, "OwnershipTransferred", log); err != nil {
		return nil, err
	}
	event.Raw = log
	return event, nil
}
